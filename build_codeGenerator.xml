<?xml version="1.0" encoding="ISO-8859-1"?>
<project basedir="." default="compile" name="Compilation Scripts">

    <property environment="env"/>
	<property name="encoding" value="ISO-8859-1"/>	

	<property file="build.properties"/>

	<property name="config" location="config"/>

    <!-- Source code directories -->
    <property name="src" location="src"/>
    <property name="src_gen" location="src_gen"/>    
    <property name="src_tools" location="src_tools"/>

	<!-- Directories for compiled code -->
	<property name="build.home" location="build"/>
	<property name="build.home.temp" value="${build.home}/temp"/>
	<property name="build.home.temp.classes" value="${build.home.temp}/classes"/>
	<property name="build.home.webinf" value="${build.home}/WEB-INF"/>
	<property name="build.home.webinf.classes" value="${build.home.webinf}/classes"/>

    <!-- Directories with libraries (JARs) -->
    <property name="lib" location="lib" />

	<!-- Compilation options -->
	<property name="compile.debug"       value="on"/>
  	<property name="compile.deprecation" value="off"/>
  	<property name="compile.optimize"    value="on"/>

	<property name="dml.definition.file" value="${config}/domain_model.dml"/>
	<property name="dml.definition.file.completed" value="${build.home.webinf.classes}/domain_model.dml"/>

	  <path id="classpath.analysis">
	    <pathelement path="${build.home.temp.classes}"/>
	    <fileset dir="${lib}">
	      <include name="**/*.jar"/>
	    </fileset>
	  </path>

	<target name="generate-domain"
	                description="Generate java code from a DML file">
		<echo message="Processing ${dml.definition.file.completed} ..."/>
		<delete dir="${src_gen}"/>
		<mkdir dir="${src_gen}"/>
		<java classname="dml.DmlCompiler" fork="true">
			<arg value="-f"/>
			<arg value="-d"/>
			<arg value="${src}"/>
			<arg value="-db"/>
			<arg value="${src_gen}"/>
<!--			<arg value="-gf"/>-->
			<arg value="${dml.definition.file.completed}"/>
			<classpath>
				<fileset dir="${lib}">
					<include name="dml.jar"/>
					<include name="dml-runtime.jar"/>
					<include name="antlr.jar"/>
				</fileset>
			</classpath>
		</java>
		<echo level="info" message="Processing of ${dml.definition.file.completed} finished."/>
	</target>

	
    <target name="clean-all"
    		description="Removes any generated files">
		<delete dir="${build.home.temp}"/>
    </target>

	<target name="prepare"
			description="Copy configuration files to compile dir">
		<mkdir dir="${build.home}"/>
		<mkdir dir="${build.home.temp}"/>
		<mkdir dir="${build.home.temp.classes}"/>
		<mkdir dir="${build.home.webinf}"/>
		<mkdir dir="${build.home.webinf.classes}"/>

		<javac destdir="${build.home.webinf.classes}"
               extdirs="${lib}"
               debug="${compile.debug}"
               optimize="${compile.optimize}"
               deprecation="${compile.deprecation}"
               encoding="${encoding}"
			   nowarn="true">
			<src path="${src_gen}"/>
			<src path="${src}"/>
			<include name="net/sourceforge/fenixedu/persistenceTier/OJB/SuportePersistenteOJB.java"/>
			<include name="net/sourceforge/fenixedu/persistenceTier/versionedObjects/VersionedObjectsBase.java"/>
			<include name="net/sourceforge/fenixedu/persistenceTier/versionedObjects/VersionedObjectsPersistenceSupport.java"/>
			<include name="net/sourceforge/fenixedu/persistenceTier/delegatedObjects/DAOResultComparator.java"/>
			<include name="net/sourceforge/fenixedu/persistenceTier/delegatedObjects/DAOResultLogger.java"/>
		</javac>
	</target>

    <target name="compile"
    		description="Compile tools"
    		depends="prepare">
		<javac destdir="${build.home.temp.classes}"
			   classpath="${build.home.webinf.classes}"
               extdirs="${lib}"
               debug="${compile.debug}"
               optimize="${compile.optimize}"
               deprecation="${compile.deprecation}"
               encoding="${encoding}"
			   nowarn="true">
			<src path="${src_tools}"/>
		</javac>
	</target>

    <target name="generate-root-domain-object-relations"
    		description="Generate relations with RootDomainObject.">
    	<delete file="${dml.definition.file.completed}"/>
    	<copy file="${dml.definition.file}" tofile="${dml.definition.file.completed}"/>
		<java classname="pt.utl.ist.fenix.tools.dml.OneToManyRelationGenerator" fork="true">
			<arg value="${dml.definition.file}"/>
			<arg value="net.sourceforge.fenixedu.domain.RootDomainObject"/>
			<arg value="${dml.definition.file.completed}"/>
			<arg value="append"/>
			<classpath>
				<pathelement path="${build.home.temp.classes}"/>
				<pathelement path="${build.home.webinf.classes}"/>
                <fileset dir="${lib}">
                    <include name="**/*.jar"/>
                </fileset>
			</classpath>
		</java>
    </target>

    <target name="generate-DAOs"
    		description="Generate DAO skeletons."
    		depends="compile">
		<java classname="pt.utl.ist.codeGenerator.DAOGenerator" fork="true">
			<classpath>
				<pathelement path="${build.home.temp.classes}"/>
				<pathelement path="${build.home.webinf.classes}"/>
                <fileset dir="${lib}">
                    <include name="**/*.jar"/>
                </fileset>
			</classpath>
		</java>
    	<antcall target="clean-all"/>
    </target>
	
    <target name="update-RootDomainObject"
    		description="Adds specific readByOID methods to RootDomainObject."
    		depends="compile">
		<java classname="pt.utl.ist.codeGenerator.RootDomainObjectGenerator" fork="true">
			<arg value="${src_gen}"/>
			<arg value="${dml.definition.file.completed}"/>
			<classpath>
				<pathelement path="${build.home.temp.classes}"/>			
				<fileset dir="${lib}">
					<include name="**/*.jar"/>
				</fileset>
			</classpath>
		</java>
    	<antcall target="clean-all"/>
    </target>
	
    <target name="generate-OJBMetadata"
    		description="Adds specific readByOID methods to RootDomainObject."
    		depends="compile">
		<java classname="net.sourceforge.fenixedu.tools.OJBMetadataGenerator" fork="true">
			<arg value="${dml.definition.file.completed}"/>
			<arg value="${class}"/>
			<classpath>
				<pathelement path="${build.home.temp.classes}"/>	
				<pathelement path="${build.home.webinf.classes}"/>
				<fileset dir="${lib}">
					<include name="**/*.jar"/>
				</fileset>
			</classpath>
		</java>
    </target>

    <target name="generate-OJBMetadataWithDebug"
    		description="Adds specific readByOID methods to RootDomainObject."
    		depends="compile">
		<java classname="net.sourceforge.fenixedu.tools.OJBMetadataGenerator" fork="true" 
			jvmargs="-Xdebug -Xnoagent -Djava.compiler=NONE  -Xrunjdwp:transport=dt_socket,server=y,address=8000,suspend=y"
		>
			<arg value="${dml.definition.file.completed}"/>
			<arg value="${option}"/>
			<classpath>
				<pathelement path="${build.home.temp.classes}"/>	
				<pathelement path="${build.home.webinf.classes}"/>
				<fileset dir="${lib}">
					<include name="**/*.jar"/>
				</fileset>
			</classpath>
		</java>
    </target>

    <target name="dmlGenerator"
    		description="Generate DML file from OJB Mapping.">
		<java classname="net.sourceforge.fenixedu.tools.DMLGenerator" fork="true">
			<classpath>
				<pathelement path="${build.home.webinf.classes}"/>
                <fileset dir="${lib}">
                    <include name="**/*.jar"/>
                	<exclude name="**/berserk.jar"/>
                </fileset>
			</classpath>
		</java>
    	<antcall target="clean-all"/>
    </target>

	  <target name="eliminate-domain-object-interfaces"
	          description="Eliminates domain object interfaces.">
	  	<ant antfile="build_verifier.xml" target="analysis-compile"/>
	    <java classname="pt.utl.ist.codeDegenerator.DomainObjectInterfaceEliminator" fork="true">
	      <classpath refid="classpath.analysis"/>
	      <arg value="-d"/>
	      <arg value="${dml.definition.file.completed}"/>
	      <arg value="-f"/>
	      <arg value="${basedir}"/>
	      <arg value="-i"/>
	      <arg value="CVS"/>
	      <arg value="-i"/>
		  <arg value="build"/>
	      <arg value="-i"/>
	      <arg value=".class"/>
	   	  <arg value="-i"/>
	   	  <arg value=".jar"/>
	   	  <arg value="-i"/>
	   	  <arg value="src_gen"/>
	    </java>
	  </target>

</project>
