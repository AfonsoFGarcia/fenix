<?xml version="1.0" encoding="ISO-8859-1"?>
<project basedir="." default="compile-proj" name="CIAPL">

	<taskdef name="dbunit" classname="org.dbunit.ant.DbUnitTask"/>

    <property environment="env"/>

	<property name="encoding" value="ISO-8859-15"/>

    <!--Directorios com codigo fonte-->
    <property location="src" name="src"/> 
    <property location="src_tests" name="src.tests"/> 
    <property location="jsp" name="src.jsp"/>
    <property location="metadata" name="metadata"/>
    
    <!--Directorios destino da compilacao do projecto-->
    <property location="classes" name="classes"/>
    <property location="classes_tests" name="classes.tests"/>
    
    <!--Directorio com bibliotecas (JAR) a utilizar-->
    <property location="lib" name="libs"/>
	<property location="lib_web" name="libs.web"/>

    <!--Directorio com configuracoes-->
    <property location="config" name="config"/>

    <!--Directorio com instrucoes SQL-->
    <property location="etc" name="sql"/>

    <!--Directorio com reports de testes-->
    <property location="report" name="reports.tests"/>
	

    <!-- INTERFACE WEB -->
    <!--Directorios da aplicacao Web-->
    <property name="webapp"          location="web"/>
    <property name="webapp.metadata" value="${webapp}/WEB-INF"/>
    <property name="webapp.classes"  value="${webapp.metadata}/classes"/>
    <property name="webapp.lib"      value="${webapp.metadata}/lib"/>    
    <!--Nome da aplicacao web-->
    <property name="name" value="ciapl"/>

    <!--Directorios de deploy-->
    <property name="deploy"          location="${env.CATALINA_HOME}/webapps"/>
    <property name="deploy.jars"     value="deploy/jars"/>
  
    <!-- TARGETS -->

    <target name="tomcat-start"
            description="Starts tomcat">
      <parallel>
	  	<exec executable="${env.CATALINA_HOME}/bin/catalina.sh"
	  	      vmlauncher="true"
	  	      failonerror="true"
	  	      os="Linux, Unix">
		  <env key="ANTRUN_TITLE" value="Apache Tomcat" />
		  <arg value="start"/>
	  	</exec>
	  	<exec executable="${env.CATALINA_HOME}/bin/catalina.bat"
	  	      vmlauncher="true"
	  	      failonerror="true"
	  	      os="Windows, Windows 2000, Windows XP">
		  <env key="ANTRUN_TITLE" value="Apache Tomcat" />
		  <arg value="start"/>
	  	</exec>
     </parallel>
    </target>

    <target name="tomcat-stop"
            description="Stops tomcat">
      <parallel>
	  	<exec executable="${env.CATALINA_HOME}/bin/catalina.sh"
	  	      vmlauncher="true"
	  	      failonerror="true"
	  	      os="Linux, Unix">
		  <env key="ANTRUN_TITLE" value="Apache Tomcat" />
		  <arg value="stop"/>
	  	</exec>
	  	<exec executable="${env.CATALINA_HOME}/bin/catalina.bat"
	  	      vmlauncher="true"
	  	      failonerror="true"
	  	      os="Windows, Windows 2000, Windows XP">
		  <env key="ANTRUN_TITLE" value="Apache Tomcat" />
		  <arg value="stop"/>
	  	</exec>
     </parallel>
    </target>

    <target name="stop-deploy-start"
    		description="Stops tomcat"
    		depends="tomcat-stop,deploy-standalone,tomcat-start"
    		/>
  
    <target name="compile-proj"
            description="Compila o projecto principal">
        <mkdir dir="${classes}"/>
        <javac destdir="${classes}"
               extdirs="${libs};${libs.web}"
               srcdir="${src}"
               debug="on"
               encoding="${encoding}"/>
    </target>
    
    <target name="compile-tests"
            depends="compile-proj"
            description="Compila os testes">
        <mkdir dir="${classes.tests}"/>
        <javac classpath="${classes}"
               destdir="${classes.tests}"
               extdirs="${libs};${libs.web}" srcdir="${src.tests}"
               encoding="${encoding}"/>
    </target>
    
    <target name="clean-proj"
            description="Apaga todas as classes compiladas do projecto">
        <delete dir="${classes}"/>
    </target>
    
    <target name="clean-tests"
            description="Apaga todas as classes compiladas dos testes">
        <delete dir="${classes.tests}"/>
    </target>

    <target name="clean-standalone"
            description="Apaga a aplicacao web">
        <delete dir="${deploy}\${name}"/>
        <delete file="${deploy}\${name}.war"/>
    </target>

    <target name="clean-netbeans"
            description="Apaga a aplicacao web para uso no netbeans">
    	<delete dir="${webapp}"/>
    </target>

    <target name="cleanall"
            depends="clean-proj,clean-tests,clean-standalone,clean-netbeans"
            description="Apaga todas as classes e ficheiros temporarios">
        <delete>
            <fileset defaultExcludes="no"
                     dir="${basedir}"
                     includes="**/*~,**/#*#,**/semantic.cache"/>
        </delete>
    </target>

    <target name="build-proj"
            depends="clean-proj,compile-proj"
            description="Compila de raiz o projecto"/>

    <target depends="build-proj" name="run">
	  <java classname="Aplicacao" fork="yes">
            <classpath>
		    <pathelement path="${classes}" /> 
		    <pathelement path="${config}" /> 
		    <fileset dir="${libs}">
		        <include name="**/*.jar" /> 
		    </fileset>
		</classpath>
	  </java>
    </target>

    <target name="deploy"
            depends="jars"
            description="Cria a aplicacao web para uso com o netbeans">
      <mkdir dir="${webapp.classes}"/>
      <mkdir dir="${webapp.lib}"/>
    	
      <copy todir="${webapp}">
          <fileset dir="${src.jsp}"/>
      </copy>       
      <copy todir="${webapp.lib}">
          <fileset dir="${libs}"/>
          <fileset dir="${libs.web}">
              <exclude name="servlet.jar"/>
              <exclude name="strutstest.jar"/>
          </fileset>
          <fileset dir="${deploy.jars}"/>
      </copy>
      <copy todir="${webapp.classes}">
          <fileset dir="${classes}">
       	  <include name="ServidorApresentacao/**/*.class"/>
          </fileset>
          <fileset dir="${config}">
              <include name="ServidorApresentacao/**"/>
          </fileset>
      </copy>
      <copy todir="${webapp.metadata}">
          <fileset dir="${metadata}"/>
      </copy>
    </target>

    <target name="jars" depends="compile-proj"
            description="Cria os jar no directorio de deploy">
      	<mkdir dir="${deploy.jars}"/>
        
        <jar destfile="${deploy.jars}/Dominio.jar"
        	 basedir="${classes}"
        	 includes="Dominio/**/*.class"/>
        
        <jar destfile="${deploy.jars}/ServidorPersistente.jar">
        	 <fileset dir="${classes}">
        	 	<include name="ServidorPersistente/**/*.class"/>
        	 </fileset>
        	 <fileset dir="${config}">
        	 	<include name="OJB/**"/>
        	 	<include name="OJB.properties"/>
        	 </fileset>
       	</jar>
       	
        <jar destfile="${deploy.jars}/ServidorAplicacao.jar">
        	 <fileset dir="${classes}">
        	 	<include name="ServidorAplicacao/**/*.class"/>
        	 </fileset>
        	 <fileset dir="${config}">
        	 	<include name="filtros.conf"/>
        	 	<include name="servicos.conf"/>
        	 </fileset>
		</jar>
	</target>		        

    <target name="deploy-standalone"
            depends="jars,clean-standalone"
            description="Cria a aplicacao web">       
        <war destfile="${deploy}/${name}.war"
             webxml="${metadata}/web.xml"
             duplicate="preserve">
            <fileset dir="${src.jsp}"/>
            <lib dir="${libs}"/>
            <lib dir="${libs.web}" excludes="servlet.jar,strutstest.jar"/>
            <lib dir="${deploy.jars}"/>
            <classes dir="${classes}" includes="**/*.class"/>
            <classes dir="${config}" includes="ServidorApresentacao/**"/>
            <webinf dir="${metadata}" excludes="web.xml"/>
      </war>
    </target>


    <target depends="clean-tests,compile-tests,deploy"
            description="Compila de raiz os testes para o projecto"
            name="build-tests"/>   

    <target depends="compile-tests,deploy, load-dump-db"
            description="Executa todos os testes"
            name="generate_unitTest-reports">

		<mkdir dir="${reports.tests}"/>
		<delete dir="${reports.tests}"/>
		
		<junit printsummary="yes" haltonfailure="no">
            <classpath>
                <pathelement path="${classes}"/>
                <pathelement path="${classes.tests}"/>
                <pathelement path="${config}"/>
                <pathelement path="${webapp}"/>
                <pathelement path="${sql}"/>
                <fileset dir="${libs}">
                    <include name="**/*.jar"/>
                </fileset>
                <fileset dir="${libs.web}">
                    <include name="**/*.jar"/>
                    <exclude name="commons-beanutils.jar;commons-collections.jar;commons-lang.jar;commons-logging.jar;commons-pool.jar;jdbc2_0-stdext.jar"/>
                </fileset>
            </classpath>

		  <formatter type="xml"/>

		  <test name="my.test.TestCase" haltonfailure="no" todir="${reports.tests}" outfile="resultTEST">
		    <formatter type="xml"/>
		  </test>

            <batchtest fork="yes" todir="${reports.tests}">
                <fileset dir="${src.tests}">
                    <!--<include name="**/*Test.java"/>-->
                    <include name="**/T*OJBTest.java"/>
                </fileset>
            </batchtest>
		</junit>

		<junitreport todir="${reports.tests}">
          <fileset dir="${reports.tests}">
	          <include name="TEST-*.xml"/>
		  </fileset>
		  <report format="frames" todir="${reports.tests}/html"/>
		</junitreport>

    </target>

    
    <target depends="compile-tests,deploy, load-dump-db"
            description="Executa todos os testes"
            name="run-tests">
        <junit haltonfailure="true" printsummary="yes" dir="${basedir}">
<!--
           	<jvmarg value="-DproxySet=true"/>
           	<jvmarg value="-DproxyHost=proxy.esw.inesc-id.pt"/>
           	<jvmarg value="-DproxyPort=3128"/>
-->
            <formatter type="plain" usefile="false"/>
            <batchtest fork="yes">
                <fileset dir="${src.tests}">
                    <!--<include name="**/*Test.java"/>-->
                    <include name="**/CriarSalaFormActionTest.java"/>
                    <exclude name="**/commons/*.java"/>
                    <exclude name="**/student/*.java"/>
                    <exclude name="**/SessionUtilsTest.java"/>
                    <exclude name="**/SuportePersistenteOJBTest.java"/>
                    <exclude name="**/MasterDegree/**/*.java"/>
                    <exclude name="**/ReadOtherCoursesWithShiftsTest.java"/>
                    <exclude name="**/ReadShiftEnrolmentTest.java"/>
                    <exclude name="**/StudentShiftEnrolmentTest.java"/>
                    <exclude name="**/ReadActualExecutionPeriodTest.java"/>                                     
                    <exclude name="ServidorApresentacao/**/ShiftEnrolmentActionTest.java"/>
                    <exclude name="**/SuportePersistenteOJBTest.java"/>
                    <exclude name="**/AllTests.java"/>
                </fileset>
            </batchtest>
            <classpath>
                <pathelement path="${classes}"/>
                <pathelement path="${classes.tests}"/>
                <pathelement path="${config}"/>
                <pathelement path="${webapp}"/>
                <pathelement path="${sql}"/>
                <fileset dir="${libs}">
                    <include name="**/*.jar"/>
                </fileset>
                <fileset dir="${libs.web}">
                    <include name="**/*.jar"/>
                    <exclude name="commons-beanutils.jar;commons-collections.jar;commons-lang.jar;commons-logging.jar;commons-pool.jar;jdbc2_0-stdext.jar"/>
                </fileset>
            </classpath>
        </junit>
    </target>

    <target depends="compile-tests,deploy, load-dump-db"
            description="Executa todos os testes"
            name="run-tests-capresentacao">
        <junit haltonfailure="true" printsummary="yes" dir="${basedir}">
<!--
           	<jvmarg value="-DproxySet=true"/>
           	<jvmarg value="-DproxyHost=proxy.esw.inesc-id.pt"/>
           	<jvmarg value="-DproxyPort=3128"/>
-->
            <formatter type="plain" usefile="false"/>
            <batchtest fork="yes">
                <fileset dir="${src.tests}">
                 <include name="**/*Test.java"/>
            <!-- start of tests that are failing -->    
             <!--    <exclude name="**/CriarAulaFormActionTest.java" /> 		 -->
                 <exclude name="**/EditarAulaFormActionTest.java" /> 
                 <exclude name="**/CriarTurnoFormActionTest.java" /> 
            	 <exclude name="**/CriarAulaFormActionTest.java" /> 
                 <exclude name="**/ClassShiftManagerDispatchActionTest.java" /> 
             	 <exclude name="**/ClassManagerDispatchActionTest.java" /> 
                 <exclude name="**/ClassesManagerDispatchActionTest.java" />
                 <exclude name="**/ChooseExecutionCourseActionTest.java" />
            	 <exclude name="**/ApagarTurnoFormActionTest.java" />
            	 <exclude name="**/ApagarAulaFormActionTest.java" /> 
          		 <exclude name="**/AdicionarAulasFormActionTest.java"/> 
            	 <exclude name="**/ViewClassesFormActionTest.java"/>
                 <exclude name="**/PrepareSelectExecutionCourseActionTest.java"/>
                 <exclude name="**/AuthenticationActionTest.java" />
            <!-- end of tests that are failing -->        
                 <exclude name="**/commons/*.java"/>
                 <exclude name="**/student/*.java"/>
                 <exclude name="**/SessionUtilsTest.java"/>
                 <exclude name="ServidorAplicacao/**/*.java"/>
                 <exclude name="ServidorPersistente/**/*.java"/>
                 <exclude name="**/AllTests.java"/>
                </fileset>
            </batchtest>
            <classpath>
                <pathelement path="${classes}"/>
                <pathelement path="${classes.tests}"/>
                <pathelement path="${config}"/>
                <pathelement path="${webapp}"/>
                <pathelement path="${sql}"/>
                <fileset dir="${libs}">
                    <include name="**/*.jar"/>
                </fileset>
                <fileset dir="${libs.web}">
                    <include name="**/*.jar"/>
                    <exclude name="commons-beanutils.jar;commons-collections.jar;commons-lang.jar;commons-logging.jar;commons-pool.jar;jdbc2_0-stdext.jar"/>
                </fileset>
            </classpath>
        </junit>
    </target>
    
    <target depends="compile-tests, load-dump-db"
            description="Executa os testes do suporte persistente"
            name="run-tests-sp">
        <junit haltonfailure="true" printsummary="yes" dir="${basedir}">
            <formatter type="plain" usefile="false"/>
            <!--<test name="ServidorPersistente.OJB.OJBSuite"/>-->
            <!--<test fork="true" name="ServidorPersistente.OJB.TestCaseOJB"/>-->
            <batchtest fork="yes">
                <fileset dir="${src.tests}">
                    <include name="**/*Test.java"/>

					<!-- Theese tests where already failling, no need for me to worry about them for now -->
                    <exclude name="**/CurriculumOJBTest.java"/>
                    <exclude name="**/TeacherOJBTest.java"/>
                    <exclude name="**/BibliographicReferenceOJBTest.java"/>
                    <exclude name="**/SectionOJBTest.java"/>
					<!-- Theese tests where already failling, no need for me to worry about them for now -->

                    <exclude name="**/SuportePersistenteOJBTest.java"/>
                    <exclude name="ServidorAplicacao/**/*.java"/>
                    <exclude name="ServidorApresentacao/**/*.java"/>
                    <exclude name="**/AllTests.java"/>
                </fileset>
            </batchtest>
            <classpath>
                <pathelement path="${classes}"/>
                <pathelement path="${classes.tests}"/>
                <pathelement path="${config}"/>
                <pathelement path="${sql}"/>
                <fileset dir="${libs}">
                    <include name="**/*.jar"/>
                </fileset>
            </classpath>
        </junit>
    </target>

    <target depends="compile-tests, load-dump-db"
            description="Executa todos os testes da camada de aplicacao"
            name="run-tests-caplicacao">
        <junit haltonfailure="true" printsummary="yes" dir="${basedir}">
            <formatter type="plain" usefile="false"/>
            <!--<test name="ServidorPersistente.OJB.OJBSuite"/>-->
            <!--<test fork="true" name="ServidorPersistente.OJB.TestCaseOJB"/>-->
            <batchtest fork="yes">
                <fileset dir="${src.tests}">
                    <include name="**/*Test.java"/>
                    <exclude name="**/ReadOtherCoursesWithShiftsTest.java"/>
                    <exclude name="**/ReadShiftEnrolmentTest.java"/>
                   	<exclude name="**/StudentShiftEnrolmentTest.java"/>
                    <exclude name="**/ReadActualExecutionPeriodTest.java"/>
                    <exclude name="ServidorApresentacao/**/*.java"/>
                    <exclude name="ServidorPersistente/**/*.java"/>
                    <exclude name="**/AllTests.java"/>
                </fileset>
            </batchtest>
            <classpath>
                <pathelement path="${classes}"/>
                <pathelement path="${classes.tests}"/>
                <pathelement path="${config}"/>
                <pathelement path="${sql}"/>
                <fileset dir="${libs}">
                    <include name="**/*.jar"/>
                </fileset>
            </classpath>
        </junit>
    </target>

    <target name="create-tables"
            description="Cria as tabelas da base de dados.">
        <sql
            driver="com.mysql.jdbc.Driver"
            url="jdbc:mysql://localhost/"
            userid="root"
            password=""
            encoding="${encoding}"
        >
        DROP DATABASE IF EXISTS ciapl;
        CREATE DATABASE ciapl;
        </sql>
        <sql
            driver="com.mysql.jdbc.Driver"
            url="jdbc:mysql://localhost/ciapl"
            userid="root"
            password=""
            encoding="${encoding}"            
        >
	        <fileset dir="${sql}">
			 <include name="tables_*.sql" />
	         <exclude name="tables_inscRelatedDBTables.sql" />
  			</fileset>
            <classpath>
                <fileset dir="${libs}">
                    <include name="**/*.jar"/>
                </fileset>
            </classpath>
        </sql>
    </target>

    <target name="load-database"
            depends="create-tables"
            description="Cria as tabelas da base de dados.">
        <sql
            driver="com.mysql.jdbc.Driver"
            url="jdbc:mysql://localhost/ciapl"
            userid="root"
            password=""
            encoding="${encoding}"
            src="${sql}/test-data_sop.sql"
        >
            <classpath>
                <fileset dir="${libs}">
                    <include name="**/*.jar"/>
                </fileset>
            </classpath>
        </sql>
       <sql
            driver="com.mysql.jdbc.Driver"
            url="jdbc:mysql://localhost/ciapl"
            userid="root"
            password=""
            encoding="${encoding}"
            src="${sql}/test-data_GesDis.sql"
        >
            <classpath>
                <fileset dir="${libs}">
                    <include name="**/*.jar"/>
                </fileset>
            </classpath>
        </sql>
        
    </target>

    <target name="dump-db"
            description="Passar o Conteudo da Base de Dados para um ficheiro .xml">
	  <dbunit driver="com.mysql.jdbc.Driver"
    	      url="jdbc:mysql://localhost/ciapl"
        	  userid="root"
	          password="">
    	  <export dest="${sql}/dbContents.xml"/>
	  </dbunit>
    </target>
    
    <target name="load-dump-db" depends="load-database, dump-db"
            description="Load and dump database to testDataSet.xml">
	  <copy file="${sql}/dbContents.xml" toFile="${sql}/testDataSet.xml"/>
    </target>

    <target name="load-cinfo" depends="compile-proj"
            description="Loads degrees info from datafile..." >

            <java classname="middleware.LoadDegrees" fork="yes" dir="${basedir}">
	            <classpath>
	                <pathelement path="${classes}"/>
	                <pathelement path="${config}"/>
	                <pathelement path="${sql}"/>                
	                <fileset dir="${libs}">
	                    <include name="**/*.jar"/>
	                </fileset>
	            </classpath>
            </java>

            <java classname="middleware.LoadCourses" fork="yes" dir="${basedir}">
	            <classpath>
	                <pathelement path="${classes}"/>
	                <pathelement path="${config}"/>
	                <pathelement path="${sql}"/>                
	                <fileset dir="${libs}">
	                    <include name="**/*.jar"/>
	                </fileset>
	            </classpath>
            </java>

            <java classname="middleware.LoadStudents" fork="yes" dir="${basedir}">
	            <classpath>
	                <pathelement path="${classes}"/>
	                <pathelement path="${config}"/>
	                <pathelement path="${sql}"/>                
	                <fileset dir="${libs}">
	                    <include name="**/*.jar"/>
	                </fileset>
	            </classpath>
            </java>

    </target>

    <target name="load-einfo" depends="compile-proj"
            description="Loads degrees info from datafile..." >

            <java classname="middleware.LoadCourseEnrolments" fork="yes" dir="${basedir}">
	            <classpath>
	                <pathelement path="${classes}"/>
	                <pathelement path="${config}"/>
	                <pathelement path="${sql}"/>                
	                <fileset dir="${libs}">
	                    <include name="**/*.jar"/>
	                </fileset>
	            </classpath>
            </java>

    </target>
    
</project>