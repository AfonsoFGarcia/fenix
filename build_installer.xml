<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." default="install-all" name="DataBase Utils">

    <property environment="env"/>
	<property name="encoding" value="UTF-8"/>

    <property name="lib" location="lib" />

	<property name="build.home" location="build"/>
	<property name="build.home.temp" value="${build.home}/temp"/>
	<property name="build.home.temp.classes" value="${build.home.temp}/classes"/>
	<property name="build.home.webinf" value="${build.home}/WEB-INF"/>
	<property name="build.home.webinf.classes" value="${build.home.webinf}/classes"/>

	<target name="configure-project" description="Generate basic configuration properties file">
    	 	<taskdef classname="pt.linkare.ant.PropertiesConfiguratorTask" name="propertiesConfigurator">
				<classpath>
				    <pathelement path="${build.home.temp.classes}"/>
					<fileset dir="${lib}">
			               <include name="**/*.jar"/>
			        </fileset>
				</classpath>
			</taskdef>
			<propertiesConfigurator specFile="build.properties.spec" file="build.properties">
				<echo message="Done configuring project!"/>
			</propertiesConfigurator>
    </target>
	
	
    <target name="installer-compile" description="Compile Installer tools">
    	<ant antfile="build_codeGenerator.xml" target="compile"/>
    </target>

    <target name="install-upgrade-db" description="Installs or upgrades the Fenix databases" depends="installer-compile">
   	 	<taskdef classname="pt.utl.ist.codeGenerator.database.Installer" name="fenixDBInstaller">
			<classpath>
			    <pathelement path="${build.home.temp.classes}"/>
			    <pathelement path="${build.home.webinf.classes}"/>
		            <fileset dir="${lib}">
		               <include name="**/*.jar"/>
		            </fileset>
			</classpath>
		</taskdef>
		<fenixDBInstaller 
			installOrUpgrade="${dbinstaller.installOrUpgrade}"
			driverClassName="${dbinstaller.driverClassName}"
			connectionUrlSchema="${dbinstaller.connectionUrlSchema}"
			fenixDBName="${dbinstaller.fenixDBName}"
			slideDBName="${dbinstaller.slideDBName}"
			baseDBName="${dbinstaller.baseDBName}"
			createDatabaseDDLSchema="${dbinstaller.createDatabaseDDLSchema}"
			createUserDDLSchema="${dbinstaller.createUserDDLSchema}"
			grantFullPrivsUserDDLSchema="${dbinstaller.grantFullPrivsUserDDLSchema}"
			dbHost="${dbinstaller.dbHost}"
			dbPort="${dbinstaller.dbPort}"
			dbAdminUser="${dbinstaller.dbAdminUser}"
			dbAdminPassword="${dbinstaller.dbAdminPassword}"
			fenixDBUser="${dbinstaller.fenixDBUser}"
			fenixDBPassword="${dbinstaller.fenixDBPassword}"
			slideDBUser="${dbinstaller.slideDBUser}"
			slideDBPassword="${dbinstaller.slideDBPassword}"
			dbNameFenix="${dbinstaller.dbNameFenix}"
			dbNameSlide="${dbinstaller.dbNameSlide}"
			dbNameBase="${dbinstaller.dbNameBase}"
			createFenixManagerUser="${dbinstaller.createFenixManagerUser}"
			fenixManagerUserPassword="${dbinstaller.fenixManagerUserPassword}"
			fenixManagerUser="${dbinstaller.fenixManagerUser}"
			fenixManagerUserName="${dbinstaller.fenixManagerUserName}"
			fenixManagerUserGender="${dbinstaller.fenixManagerUserGender}"
			slideDDLFile="${dbinstaller.slideDDLFile}"
			ojbDDLFile="${dbinstaller.ojbDDLFile}"
			dmlDDLFile="${dbinstaller.dmlDDLFile}"
			fenixBaseDDLFile="${dbinstaller.fenixBaseDDLFile}"
			fenixDDLFile="${dbinstaller.fenixDDLFile}"
			fenixVersionDDLFile="${dbinstaller.fenixVersionDDLFile}"
			fenixVersionRetrieveSQLFile="${dbinstaller.fenixVersionRetrieveSQLFile}"
			dbDDLClientSchemaExecute="${dbinstaller.dbDDLClientSchemaExecute}"
			dbDDLClientSchemaExecuteToTempFile="${dbinstaller.dbDDLClientSchemaExecuteToTempFile}"
			keepDDLTempFile="${dbinstaller.keepDDLTempFile}"
			upgradesDirectory="${dbinstaller.upgradesDirectory}">
			
			<java classname="pt.utl.ist.codeGenerator.database.DataInitializer" fork="false">
				<classpath>
					<pathelement path="${build.home.temp.classes}"/>
					<pathelement path="${build.home.webinf.classes}"/>
                			<fileset dir="${lib}">
                    				<include name="**/*.jar"/>
                			</fileset>
				</classpath>
			</java>
		</fenixDBInstaller>
    </target>

	<target name="install-all" depends="configure-project,install-upgrade-db"/>
				
</project>
