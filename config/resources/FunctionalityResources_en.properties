#
# Local menu links
#

title.functionalities=Functionality Management
link.functionalities=View Functionalities
link.filter.test=Test Filter

#
# Titles
#

title.toplevel=Manage Toplevel Functionalities
title.module=Manage Module
title.functionality=Manage Funcionalidade

title.module.create=Create Module
title.module.edit=Edit Module

title.functionality.create=Create Functionality
title.functionality.edit=Edit Functionality
title.functionality.manage=Manage Availability
title.delete.confirm=Confirm Deletion

title.uploadStructure=Import Structure

title.filter.test=Test Filter

title.groupLanguage=Group Language

#
# Links
#

link.toplevel.view=Top

link.module.view=View
link.module.edit=Edit
link.module.create=Create module
link.module.delete=Delete
link.module.manage=Manage availability
link.module.import=Import structure

link.functionality.view=View
link.functionality.edit=Edit
link.functionality.create=Create functionality
link.functionality.delete=Delete
link.functionality.delete.cancel=Cancel
link.functionality.up=Up
link.functionality.down=Down
link.functionality.top=Top
link.functionality.bottom=Bottom
link.functionality.indent=Indent
link.functionality.outdent=Outdent
link.functionality.manage=Manage availability
link.functionality.disable=Disable
link.functionality.enable=Enable
link.functionality.export=Export structure

link.tree.expand-all=Expand all
link.tree.collapse-all=Collapse all

#
# Buttons
#

button.tree.save=Save structure
button.tree.reset=Cancel changes

#
# Labels
#

label.path=Path
label.prefix=Prefix
label.name=Name
label.title=Title
label.description=Description
label.parameters=Parameters
label.expression=Expression
label.relative=Relative Path
label.publicPath=Complete Path
label.publicPrefix=Complete Prefix
label.enabled=Active
label.availabilityPolicy=Availability Expression

label.person=Person (by name)
label.personId=Person (by id)
label.accessible=Accessible
label.parameters.required=Parameters
label.visible=Visivel
label.maximized=Maximizado
label.principal=Principal

label.module.name=Module

label.stream=File
label.principalPreserved=Principal
label.currentParentUsed=Use current module as parent
label.uuidUsed=Use UUIDs defined in the file

label.net.sourceforge.fenixedu.domain.accessControl.RoleGroup$Builder=All person with a certain role. The given argument is interpreted as the name of the role. 
label.net.sourceforge.fenixedu.domain.accessControl.PersonGroup$Builder=A group of one person. This group can be usefull to create exceptions to more generic groups. This group receives as argument the internal identificator of the person.
label.net.sourceforge.fenixedu.domain.accessControl.groups.language.CustomGroupBuilder=This constructor allows you to create groups that don't have registered builder in this list. The first argument is the class of the group to create. The remaining arguments are passed to the group construction.

#
# General Messages
#

functionalities.expression.success=The expression was changed.

filterTest.person.select.id.invalid=There is no person with the given id.
filterTest.person.select.name.invalid=You must select a person from the completion list.

functionalities.delete.confirm=Do you wish to delete this functionality?

functionalities.expression.help=\
The availability of a functionality is specified by writting an expression in \
a groups combination language. A tipical usage example of the this language is \
the specification of groups of people with a certain role: \
<pre>role(MANAGER)</pre>\
To obtain more information you may visit the <a href="{0}/manager/functionalities/groupLanguage.do">list of group types available</a> or \
the <a href="http://fenix-ashes.ist.utl.pt/GroupExpressionLanguage">groups language description</a>.

functionalities.groupLanguage.list.help=The following table shows lists all the groups builders \
currently registered in the application and that can be used in functionalitiies' availability expressions. \
The name shown is the name that can be used in the expression. The number of arguments expected by the builder and \
a description of the builder inner workings is also shown. 

tree.unavailable=There are no functionalities under this module.

#
# Exceptions
#

functionalities.functionality.matchPath.conflict=There is a conflict with the match path of the functionality. Only one functionality can be marked as principal for a certain path.
functionalities.functionality.availability.notPrincipal=You can only change the availability policy for the principal functionality of a public path.

functionalities.module.required.prefix=You have to specify a prefix for every module.

functionalities.import.file.failed=There was an error while reading the file: {0}
functionalities.import.file.read.failed=Could not read the provided file. The structure was not imported.
functionalities.import.version.notSupported=The version of the indicated structure is not currenlty supported.
functionalities.import.structure.invalid=The provided file is invalid.

#
# Expression errors
#

accessControl.group.expression.evaluation.error=An error occured while evaluating the availability expression.

accessControl.group.expression.invalid=The given expression is invalid.
accessControl.group.builder.noSuchGroup=There is no group defined with the name "{0}".

accessControl.group.expression.wrong.numberOfArguments=Wrong number of arguments. You gave {0} but it was expecting between {1} and {2}.
accessControl.group.expression.wrong.numberOfArguments.simple=Wrong number of arguments. You gave {0} but {1} expected.
accessControl.group.expression.wrong.argumentType=Argument {0} should be of type {1} and not {2}.
accessControl.group.expression.operator.number.invalid=The value "{0}", present in the parameter, is not a valid number
accessControl.group.expression.operator.parameter.required=The parameter "{0}" is not present in the current context. 
accessControl.group.expression.operator.class.invalidName=The name "{1}" is not a valid class name even considering the prefix "{0}".
accessControl.group.expression.operator.enum.invalidName=It's not possible to obtain an enum named "{0}" and of type "{1}".
accessControl.group.expression.property.notAvailable=The property "{1}" is not defined for type "{0}".
accessControl.group.expression.method.notAvailable=The method "{1}" is not defind in type "{0}" and with arguments of types {2}.
accessControl.group.expression.operator.number.invalidType=The type "{0}" is not supported in the number conversion.
accessControl.group.expression.variable.notDefined=A variable named "{0}" is not defined in the current context.

accessControl.group.builder.role.type.doesNotExist=There is no role with the name "{0}".
accessControl.group.builder.role.type.notAvailable=It's not possible to obtain a persistent role with the name "{0}". 

accessControl.group.builder.custom.class.notGroup=The type "{0}" is not a subtype of Group.
accessControl.group.builder.custom.constructor.doesNotExist=Unable to create the group. Could not find a constructor for the types {0}.
accessControl.group.builder.custom.constructor.exception=An error as occured while invoking the constructor for the types {0}. 
accessControl.group.builder.custom.constructor.failed=An unexpected error occured while trying to invoke the constructor for types {0}.

#
# Not available page
#

notAvailable.main.message=The requested functionality is not available at the moment.