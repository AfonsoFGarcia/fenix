/* DOMAIN_MODEL.DML
 *
 * The Fenix Project Domain Model
 * 
 */


/*
*
* External classes declarations
*
* The following declarations allow the DmlCompiler to recognize the classes in
* the relations definitions. Remove each declaration once the corresponding 
* class definition is included.
* 
*/

// NONE



/*
 * ValueTypes declarations
 * 
 */

valueType net.sourceforge.fenixedu.util.AgreementType                                           as AgreementType;
valueType net.sourceforge.fenixedu.tools.enrollment.AreaType                                    as AreaType;
valueType net.sourceforge.fenixedu.domain.branch.BranchType                                     as BranchType;
valueType net.sourceforge.fenixedu.util.CurricularCourseExecutionScope                          as CurricularCourseExecutionScope;
valueType net.sourceforge.fenixedu.domain.curriculum.CurricularCourseType                       as CurricularCourseType;
valueType net.sourceforge.fenixedu.domain.degree.degreeCurricularPlan.DegreeCurricularPlanState as DegreeCurricularPlanState;
valueType net.sourceforge.fenixedu.domain.degree.DegreeType                                     as DegreeType;
valueType net.sourceforge.fenixedu.util.DelegateYearType                                        as DelegateYearType; 
valueType net.sourceforge.fenixedu.util.DiaSemana                                               as DiaSemana;
valueType net.sourceforge.fenixedu.domain.DocumentType                                          as DocumentType;
valueType net.sourceforge.fenixedu.util.EnrolmentAction                                         as EnrolmentAction;
valueType net.sourceforge.fenixedu.domain.curriculum.EnrollmentCondition                        as EnrollmentCondition;
valueType net.sourceforge.fenixedu.util.EnrolmentEvaluationState                                as EnrolmentEvaluationState;
valueType net.sourceforge.fenixedu.domain.curriculum.EnrolmentEvaluationType                    as EnrolmentEvaluationType;
valueType net.sourceforge.fenixedu.util.EnrolmentGroupPolicyType                                as EnrolmentGroupPolicyType;
valueType net.sourceforge.fenixedu.domain.curriculum.EnrollmentState                            as EnrollmentState;
valueType net.sourceforge.fenixedu.util.EntryPhase                                              as EntryPhase;
valueType net.sourceforge.fenixedu.domain.gratuity.ExemptionGratuityType                        as ExemptionGratuityType;
valueType net.sourceforge.fenixedu.util.FinalDegreeWorkProposalStatus                           as FinalDegreeWorkProposalStatus;  
valueType net.sourceforge.fenixedu.domain.person.Gender                                         as Gender;
valueType net.sourceforge.fenixedu.domain.GraduationType                                        as GraduationType;
valueType net.sourceforge.fenixedu.domain.masterDegree.GuideRequester                           as GuideRequester;
valueType net.sourceforge.fenixedu.domain.GuideState                                            as GuideState;
valueType net.sourceforge.fenixedu.domain.person.IDDocumentType                                 as IDDocumentType;
valueType net.sourceforge.fenixedu.domain.person.MaritalStatus                                  as MaritalStatus;
valueType net.sourceforge.fenixedu.util.MarkType                                                as MarkType;
valueType net.sourceforge.fenixedu.domain.masterDegree.MasterDegreeClassification               as MasterDegreeClassification;
valueType net.sourceforge.fenixedu.util.OldPublicationType                                      as OldPublicationType;
valueType net.sourceforge.fenixedu.util.OrientationType                                         as OrientationType;
valueType net.sourceforge.fenixedu.domain.transactions.PaymentType                              as PaymentType;
valueType net.sourceforge.fenixedu.util.PeriodToApplyRestriction                                as PeriodToApplyRestriction;
valueType net.sourceforge.fenixedu.util.PeriodState                                             as PeriodState;
valueType net.sourceforge.fenixedu.util.ProposalState                                           as ProposalState;
valueType net.sourceforge.fenixedu.util.ProviderRegimeType                                      as ProviderRegimeType;
valueType net.sourceforge.fenixedu.util.PublicationArea                                         as PublicationArea;
valueType net.sourceforge.fenixedu.util.PublicationType                                         as PublicationType;
valueType net.sourceforge.fenixedu.domain.person.RoleType                                       as RoleType;
valueType net.sourceforge.fenixedu.domain.gratuity.ReimbursementGuideState                      as ReimbursementGuideState;
valueType net.sourceforge.fenixedu.util.Season                                                  as Season;
valueType net.sourceforge.fenixedu.util.SecretaryEnrolmentStudentReason                         as SecretaryEnrolmentStudentReason; 
valueType net.sourceforge.fenixedu.domain.credits.ServiceExemptionType                          as ServiceExemptionType;
valueType net.sourceforge.fenixedu.domain.ShiftType                                             as ShiftType; 
valueType net.sourceforge.fenixedu.domain.gratuity.SibsPaymentStatus                            as SibsPaymentStatus; 
valueType net.sourceforge.fenixedu.domain.gratuity.SibsPaymentType                              as SibsPaymentType;
valueType net.sourceforge.fenixedu.util.SituationName                                           as SituationName;
valueType net.sourceforge.fenixedu.domain.sms.SmsDeliveryType                                   as SmsDeliveryType; 
valueType net.sourceforge.fenixedu.domain.studentCurricularPlan.Specialization                  as Specialization;
valueType net.sourceforge.fenixedu.util.State                                                   as State;
valueType net.sourceforge.fenixedu.domain.studentCurricularPlan.StudentCurricularPlanState      as StudentCurricularPlanState;
valueType net.sourceforge.fenixedu.util.StudentState                                            as StudentState;
valueType net.sourceforge.fenixedu.util.StudentType                                             as StudentType;
valueType net.sourceforge.fenixedu.util.StudentPersonalDataAuthorizationChoice					as StudentPersonalDataAuthorizationChoice;
valueType net.sourceforge.fenixedu.util.TipoAula                                                as TipoAula;
valueType net.sourceforge.fenixedu.util.TipoSala                                                as TipoSala; 
valueType net.sourceforge.fenixedu.domain.transactions.TransactionType                          as TransactionType;
valueType net.sourceforge.fenixedu.domain.IDomainObject                  				        as IDomainObject;
valueType net.sourceforge.fenixedu.util.tests.CorrectionFormula                                 as CorrectionFormula;
valueType net.sourceforge.fenixedu.util.tests.CorrectionAvailability                            as CorrectionAvailability;
valueType net.sourceforge.fenixedu.util.tests.TestType                  				        as TestType;


/*
*
* Class definitions
*
*/

class net.sourceforge.fenixedu.domain.DomainObject implements java.io.Serializable {
	Integer ackOptLock;
	Integer idInternal;
}


class net.sourceforge.fenixedu.domain.Advisory extends net.sourceforge.fenixedu.domain.DomainObject {
	Date created;
	String subject;
	Boolean onlyShowOnce;
	Date expires;
	String message;
	String sender;
}


class net.sourceforge.fenixedu.domain.Announcement extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keySite;
	String information;
	String title;
    Date creationDate;
    Date lastModifiedDate;
    
    interface "
    public void edit(String newAnnouncementTitle, String newAnnouncementInformation);
	public void delete();
    "
}


class net.sourceforge.fenixedu.domain.AttendInAttendsSet extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyAttend;
	Integer keyAttendsSet;
        
}


class net.sourceforge.fenixedu.domain.Attends extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer chaveDisciplinaExecucao;
	Integer chaveAluno;
	Integer keyEnrolment;
	
	interface "
	public java.util.List getAttendsSets();

	public boolean existsAttendInAttendsSet(IAttendInAttendsSet attendInAttendsSet);
	
	public void delete() throws net.sourceforge.fenixedu.domain.exceptions.DomainException;
	"	
}


class net.sourceforge.fenixedu.domain.AttendsSet extends net.sourceforge.fenixedu.domain.DomainObject {
    String name;
    Integer keyGroupProperties;
    
    interface "
   	public java.util.List getAttends();
    
    public boolean existsAttendInAttendsSet(IAttendInAttendsSet attendInAttendsSet);

	public void addStudentGroup(IStudentGroup studentGroup);

	public void removeStudentGroup(IStudentGroup studentGroup);

	public boolean existsStudentGroup(IStudentGroup studentGroup);

	public IAttends getStudentAttend(IStudent student);

	public java.util.List getStudentGroupsWithoutShift();

	public java.util.List getStudentGroupsWithShift();

	public Integer getNumberOfStudentsInAttendsSet();

	public Integer getNumberOfStudentsNotInAttendsSet();
	"
}


class net.sourceforge.fenixedu.domain.BibliographicReference extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyExecutionCourse;
	Boolean optional;
	String year;
	String authors;
	String title;
	String reference;
	
	interface "
	public void edit(String title, String authors, String reference, String year, Boolean optional);
    
    public void delete();	
	"
}


class net.sourceforge.fenixedu.domain.Branch extends net.sourceforge.fenixedu.domain.DomainObject {
    Integer secondaryCredits;
    String code;
    Integer keyDegreeCurricularPlan;
    Integer specializationCredits;
    String name;
    String nameEn;
    String acronym;
    BranchType branchType;
    
    interface "
    public java.util.List getAreaCurricularCourseGroups(net.sourceforge.fenixedu.tools.enrollment.AreaType areaType);
	public void delete() throws net.sourceforge.fenixedu.domain.exceptions.DomainException;
	public Boolean canBeDeleted();
	public Boolean representsCommonBranch();
	public void edit(String name, String nameEn, String code);
    "
}


class net.sourceforge.fenixedu.domain.Building extends net.sourceforge.fenixedu.domain.DomainObject {
	String name;
}


class net.sourceforge.fenixedu.domain.Campus extends net.sourceforge.fenixedu.domain.DomainObject {
	String name;
}


class net.sourceforge.fenixedu.domain.CostCenter extends net.sourceforge.fenixedu.domain.DomainObject {
    String code;
    String section2;
    String section1;
    String departament;
}


class net.sourceforge.fenixedu.domain.Seminaries.Candidacy extends net.sourceforge.fenixedu.domain.DomainObject {
    Boolean approved;
    Integer studentIdInternal;
    Integer curricularCourseIdInternal;
    Integer seminaryIdInternal;
    Integer themeIdInternal;
    String motivation;
    Integer modalityIdInternal;
}


class net.sourceforge.fenixedu.domain.CandidateEnrolment extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer curricularCourseKey;
	Integer masterDegreeCandidateKey;
}

class net.sourceforge.fenixedu.domain.CandidateSituation extends net.sourceforge.fenixedu.domain.DomainObject {
	String remarks;
	Integer candidateKey;
	Integer situationKey;
	Date date;
    State validation;
    SituationName situation;
}


class net.sourceforge.fenixedu.domain.teacher.Career extends net.sourceforge.fenixedu.domain.DomainObject {
    String ojbConcreteClass;
    Integer beginYear;
    Integer endYear;
    Integer keyTeacher;
    Date lastModificationDate;
}


    class net.sourceforge.fenixedu.domain.teacher.ProfessionalCareer extends net.sourceforge.fenixedu.domain.teacher.Career {
        String entity;
        String function;
    }

    class net.sourceforge.fenixedu.domain.teacher.TeachingCareer extends net.sourceforge.fenixedu.domain.teacher.Career {
        String courseOrPosition;
        Integer keyCategory;
    }


class net.sourceforge.fenixedu.domain.Seminaries.CaseStudy extends net.sourceforge.fenixedu.domain.DomainObject {
    String code;
    String description;
    Integer seminaryThemeIdInternal;
    String name;
}


class net.sourceforge.fenixedu.domain.Seminaries.CaseStudyChoice extends net.sourceforge.fenixedu.domain.DomainObject {
    Integer caseStudyIdInternal;
    Integer order;
    Integer candidacyIdInternal;
}


class net.sourceforge.fenixedu.domain.teacher.Category extends net.sourceforge.fenixedu.domain.DomainObject {
	String code;
	String longName;
	Boolean canBeExecutionCourseResponsible;
	String shortName;
}

class net.sourceforge.fenixedu.domain.Contributor extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer contributorNumber;
	String contributorAddress;
	String contributorName;
}

class net.sourceforge.fenixedu.domain.Coordinator extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyExecutionDegree;
	Integer keyTeacher;
	Boolean responsible;
}

class net.sourceforge.fenixedu.domain.Country extends net.sourceforge.fenixedu.domain.DomainObject {
	String code;
	String nationality;
	String name;
}

class net.sourceforge.fenixedu.domain.Seminaries.CourseEquivalency extends net.sourceforge.fenixedu.domain.DomainObject {
    Integer curricularCourseIdInternal;
    Integer seminaryIdInternal;
    Integer modalityIdInternal;
}

class net.sourceforge.fenixedu.domain.gesdis.CourseHistoric extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyCurricularCourse;
	String curricularYear;
	Integer approved;
	Integer enrolled;
	Integer semester;
	Integer evaluated;
}


class net.sourceforge.fenixedu.domain.gesdis.CourseReport extends net.sourceforge.fenixedu.domain.DomainObject {
	String report;
	Date lastModificationDate;
	Integer keyExecutionCourse;
	
	interface "
	public void edit(String newReport);
    
    public void delete();
	"
}


class net.sourceforge.fenixedu.domain.credits.CreditLine extends net.sourceforge.fenixedu.domain.DomainObject implements net.sourceforge.fenixedu.domain.credits.event.ICreditsEventOriginator {
    Integer keyTeacher;
}


    class net.sourceforge.fenixedu.domain.credits.DatePeriodBaseCreditLine extends net.sourceforge.fenixedu.domain.credits.CreditLine {
        Date start;
        Date end;
    }
    
        class net.sourceforge.fenixedu.domain.credits.ManagementPositionCreditLine extends net.sourceforge.fenixedu.domain.credits.DatePeriodBaseCreditLine {
            Double credits;
            String position;
        }    
    
        
        class net.sourceforge.fenixedu.domain.credits.ServiceExemptionCreditLine extends net.sourceforge.fenixedu.domain.credits.DatePeriodBaseCreditLine {
            ServiceExemptionType type;
        }

        
    class net.sourceforge.fenixedu.domain.credits.OtherTypeCreditLine extends net.sourceforge.fenixedu.domain.credits.CreditLine {
        String reason;
        Double credits;
        Integer keyExecutionPeriod;
    }


class net.sourceforge.fenixedu.domain.CreditsInAnySecundaryArea extends net.sourceforge.fenixedu.domain.DomainObject {
    Integer givenCredits;
    Integer studentCurricularPlanKey;
    Integer enrolmentKey;

	interface "
	public void delete();
	"
}
    
    
class net.sourceforge.fenixedu.domain.CreditsInScientificArea extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer givenCredits;
	Integer studentCurricularPlanKey;
	Integer enrolmentKey;
	Integer scientificAreaKey;
	
	interface "
	public void delete();
	"
}


class net.sourceforge.fenixedu.domain.CurricularCourse extends net.sourceforge.fenixedu.domain.DomainObject {
	Double ectsCredits;
	Boolean basic;
	Integer universityKey;
	Boolean mandatoryEnrollment;
	Integer maximumValueForAcumulatedEnrollments;
	Double theoPratHours;
	Double weigth;
	Integer keyScientificArea;
	Integer degreeCurricularPlanKey;
	String code;
	Boolean enrollmentAllowed;
	Double theoreticalHours;
	Integer keyCompetenceCourse;
	Integer keyStudentCourseReport;
	Integer keyCourseHistoric;
	Double labHours;
	Double credits;
	Integer enrollmentWeigth;
	Double praticalHours;
	Boolean mandatory;
	String name;
	String nameEn;
	String acronym;
	Integer minimumValueForAcumulatedEnrollments;
    CurricularCourseType type;
    CurricularCourseExecutionScope curricularCourseExecutionScope;
	
	interface "
    public ICurricularYear getCurricularYearByBranchAndSemester(final IBranch branch,final Integer semester);

    public ICurricularYear getCurricularYearByBranchAndSemester(final IBranch branch, final Integer semester, final java.util.Date date);

    public String getCurricularCourseUniqueKeyForEnrollment();

    public boolean hasActiveScopeInGivenSemester(final Integer semester);

    public boolean hasActiveScopeInGivenSemesterForGivenBranch(final Integer semester, final IBranch branch);

    public boolean hasActiveScopeInGivenSemesterForGivenBranch(final ICurricularSemester curricularSemester, final IBranch branch);

    public boolean hasActiveScopeInGivenSemesterForCommonAndGivenBranch(final Integer semester, final IBranch branch);

    public java.util.List<ICurricularCourseScope> getActiveScopesInExecutionPeriod(final IExecutionPeriod executionPeriod);
    
     public ICurriculum insertCurriculum(String program, String programEn, String operacionalObjectives, 
    	String operacionalObjectivesEn, String generalObjectives, String generalObjectivesEn);
	 
	 public java.util.List getExecutionCoursesByExecutionPeriod (final IExecutionPeriod executionPeriod);
	"
}


class net.sourceforge.fenixedu.domain.CurricularCourseEquivalence extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer oldCurricularCourseKey;
	Integer equivalentCurricularCourseKey;
	Integer degreeCurricularPlanKey;

	interface "
	public void delete();
	"
}

class net.sourceforge.fenixedu.domain.CurricularCourseGroup extends net.sourceforge.fenixedu.domain.DomainObject {
    String ojbConcreteClass;
    Integer keyBranch;
    String name;
    Integer minimumValue;
    Integer maximumValue;

    interface "
    public Integer getMaximumCredits();
    public Integer getMinimumCredits();
    public Integer getMinimumNumberOfOptionalCourses();
    public Integer getMaximumNumberOfOptionalCourses();

    public void setMaximumCredits(Integer maximumCredits);
    public void setMinimumCredits(Integer minimumCredits);
    public void setMinimumNumberOfOptionalCourses(Integer minimumNumberOfOptionalCourses);
    public void setMaximumNumberOfOptionalCourses(Integer maximumNumberOfOptionalCourses);
    
    public net.sourceforge.fenixedu.tools.enrollment.AreaType getAreaType();
    public void setAreaType(net.sourceforge.fenixedu.tools.enrollment.AreaType areaType);
	
	public void delete() throws net.sourceforge.fenixedu.domain.exceptions.DomainException;
	
	public void edit(String name, IBranch branch, Integer minimumValue, Integer maximumValue);
	public void edit(String name, IBranch branch, Integer minimumValue, Integer maximumValue, net.sourceforge.fenixedu.tools.enrollment.AreaType areaType);
    "
}

    class net.sourceforge.fenixedu.domain.AreaCurricularCourseGroup extends net.sourceforge.fenixedu.domain.CurricularCourseGroup {
        AreaType areaType;
    }
    
    class net.sourceforge.fenixedu.domain.OptionalCurricularCourseGroup extends net.sourceforge.fenixedu.domain.CurricularCourseGroup {
    }

class net.sourceforge.fenixedu.domain.CurricularCourseScope extends net.sourceforge.fenixedu.domain.DomainObject {
    Integer branchKey;
    Integer curricularCourseKey;
    Integer curricularSemesterKey;
    String anotation;
    Date begin;
    Date end;

    interface "
    public java.util.Calendar getBeginDate();

    public java.util.Calendar getEndDate();

    public void setBeginDate(java.util.Calendar beginDate);
    
    public void setEndDate(java.util.Calendar endDate);
    
    public Boolean isActive();
    
    public Boolean isActive(java.util.Date date);

	public void edit(IBranch branch, ICurricularSemester curricularSemester, java.util.Calendar beginDate, java.util.Calendar endDate, String Annotation);
	
	public void end(java.util.Calendar endDate);
	
	public void delete() throws net.sourceforge.fenixedu.domain.exceptions.DomainException;
	
	public Boolean canBeDeleted();
    "
}

class net.sourceforge.fenixedu.domain.CurricularSemester extends net.sourceforge.fenixedu.domain.DomainObject {
    Integer curricularYearKey;
    Integer semester;
}

class net.sourceforge.fenixedu.domain.CurricularYear extends net.sourceforge.fenixedu.domain.DomainObject {
    Integer year;
}

class net.sourceforge.fenixedu.domain.Curriculum extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyPersonWhoAltered;
	Integer keyCurricularCourse;
	Date lastModificationDate;
	String generalObjectives;
	String operacionalObjectives;
	String operacionalObjectivesEn;
	String programEn;
	String generalObjectivesEn;
	String program;
	
	interface"	
	
	public void edit(String generalObjectives, String operacionalObjectives, String program, String generalObjectivesEn, String operacionalObjectivesEn, String programEn, String language, IPerson person);	
	
	"
}


class net.sourceforge.fenixedu.domain.Degree extends net.sourceforge.fenixedu.domain.DomainObject {
	String concreteClassForDegreeCurricularPlans;
	String nome;
	String nameEn;
	String sigla;
    DegreeType tipoCurso;
	
	interface "

	public void edit(String name, String nameEn, String sigla, net.sourceforge.fenixedu.domain.degree.DegreeType degreeType);
	public void delete() throws net.sourceforge.fenixedu.domain.exceptions.DomainException;
	"
}


class net.sourceforge.fenixedu.domain.DegreeCurricularPlan extends net.sourceforge.fenixedu.domain.DomainObject {
    String concreteClassForStudentCurricularPlans;
    Integer degreeDuration;
    Integer degreeKey;
    String description;
    String descriptionEn;
    Date endDate;
    Date initialDate;
    Integer minimalYearForOptionalCourses;
    String name;
    Double neededCredits;
    Integer numerusClausus;
    String ojbConcreteClass;
    String anotation;
    DegreeCurricularPlanState state;
    MarkType markType;
    
    interface "
    public IStudentCurricularPlan getNewStudentCurricularPlan();

    public java.util.List getListOfEnrollmentRules(IStudentCurricularPlan studentCurricularPlan, IExecutionPeriod executionPeriod);
    
    public java.util.List getCurricularCoursesFromArea(IBranch area, net.sourceforge.fenixedu.tools.enrollment.AreaType areaType);
    
    public java.util.List getCurricularCoursesFromAnyArea();
    
    public ICurricularCourse getCurricularCourseByCode(String code);
    
    public java.util.List getCommonAreas();
    
    public java.util.List getSpecializationAreas();
    
    public java.util.List getSecundaryAreas();
    
    public java.util.List getTFCs();
    
    public java.util.List getAllOptionalCurricularCourseGroups();
    
    public java.util.List getCurricularCoursesByYearAndSemesterAndBranch(int year, Integer semester, IBranch area);
    
    public java.util.List getSpecialListOfCurricularCourses();
	
	public void edit(String name, net.sourceforge.fenixedu.domain.degree.degreeCurricularPlan.DegreeCurricularPlanState state, 
			java.util.Date inicialDate, java.util.Date endDate, Integer degreeDuration, Integer minimalYearForOptionalCourses, 
			Double neededCredits, net.sourceforge.fenixedu.util.MarkType markType, Integer numerusClausus, String annotation);

	public void delete();
	
	public boolean isGradeValid(String grade);
    "
}

    class net.sourceforge.fenixedu.domain.DegreeCurricularPlanLEC extends net.sourceforge.fenixedu.domain.DegreeCurricularPlan {
    }
    
    class net.sourceforge.fenixedu.domain.DegreeCurricularPlanLEEC extends net.sourceforge.fenixedu.domain.DegreeCurricularPlan {
    }
    
    class net.sourceforge.fenixedu.domain.DegreeCurricularPlanLEIC extends net.sourceforge.fenixedu.domain.DegreeCurricularPlan {
    }
    
    class net.sourceforge.fenixedu.domain.DegreeCurricularPlanLEICTAGUS extends net.sourceforge.fenixedu.domain.DegreeCurricularPlan {
    }
    
    class net.sourceforge.fenixedu.domain.DegreeCurricularPlanLEM extends net.sourceforge.fenixedu.domain.DegreeCurricularPlan {
    }
    
	class net.sourceforge.fenixedu.domain.DegreeCurricularPlanLET extends net.sourceforge.fenixedu.domain.DegreeCurricularPlan {
    }
    
    class net.sourceforge.fenixedu.domain.DegreeCurricularPlanLEA extends net.sourceforge.fenixedu.domain.DegreeCurricularPlan {
    }


class net.sourceforge.fenixedu.domain.DegreeInfo extends net.sourceforge.fenixedu.domain.DomainObject {
    String additionalInfoEn;
    String historyEn;
    Double markMax;
    String additionalInfo;
    String professionalExitsEn;
    String professionalExits;
    String linksEn;
    String classificationsEn;
    String descriptionEn;
    String objectives;
    String testIngressionEn;
    String links;
    String classifications;
    String testIngression;
    Integer driftsInitial;
    String objectivesEn;
    Double markMin;
    Integer driftsFirst;
    String description;
    Double markAverage;
    Integer driftsSecond;
    String history;
    Integer degreeKey;
    Date lastModificationDate;
    String qualificationLevel;
    String qualificationLevelEn;
    String recognitions;
    String recognitionsEn;    
	
	interface "

	public void delete();
	
	"
}



class net.sourceforge.fenixedu.domain.student.Delegate extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyExecutionYear;
	Integer keyDegree;
	Boolean type;
	Integer keyStudent;
    DelegateYearType yearType;
	
	interface "

	public void delete();
	
	"
}
	
	
class net.sourceforge.fenixedu.domain.Department extends net.sourceforge.fenixedu.domain.DomainObject {
	String code;
	String name;
}


class net.sourceforge.fenixedu.domain.CompetenceCourse extends net.sourceforge.fenixedu.domain.DomainObject {
	String name;
	String code;
	Integer keyDepartment;
	interface "
	public void delete();
	public void addCurricularCourses(java.util.List<ICurricularCourse> curricularCourses);
	public void edit(String code, String name, IDepartment department);
	"
}

class net.sourceforge.fenixedu.domain.DislocatedStudent extends net.sourceforge.fenixedu.domain.DomainObject {
    Integer keyCountry;
    Integer keyStudent;
    Integer keyDislocatedCountry;
    Integer keyDistrict;
}

class net.sourceforge.fenixedu.domain.onlineTests.DistributedTest extends net.sourceforge.fenixedu.domain.DomainObject {
    String testInformation;
    Boolean imsFeedback;
    String title;
    Integer keyTestScope;
    Integer numberOfQuestions;
    Date beginDateDate;
    Date endDateDate;
    Date beginHourDate;
    Date endHourDate;
    CorrectionAvailability correctionAvailability;
    TestType testType;
    
    interface "
    public abstract java.util.Calendar getBeginDate();

    public abstract void setBeginDate(java.util.Calendar beginDate);

    public abstract java.util.Calendar getBeginHour();

    public abstract void setBeginHour(java.util.Calendar beginHour);

    public abstract java.util.Calendar getEndDate();

    public abstract void setEndDate(java.util.Calendar endDate);

    public abstract java.util.Calendar getEndHour();

    public abstract void setEndHour(java.util.Calendar endHour);

    public abstract boolean equals(Object obj);
    "
}


class net.sourceforge.fenixedu.domain.onlineTests.DistributedTestAdvisory extends net.sourceforge.fenixedu.domain.DomainObject {
    Integer keyAdvisory;
    Integer keyDistributedTest;
    
    interface "
    public abstract boolean equals(Object obj);
    "
}

class net.sourceforge.fenixedu.domain.District extends net.sourceforge.fenixedu.domain.DomainObject {
	String name;
	String code;	
}

class net.sourceforge.fenixedu.domain.Employee extends net.sourceforge.fenixedu.domain.DomainObject {
	Boolean active;
	Integer employeeNumber;
	Date antiquity;
	Integer keyPerson;
	Integer workingHours;

    interface "
	public ICostCenter findWorkingCostCenter();
	"
}


class net.sourceforge.fenixedu.domain.EmployeeHistoric extends net.sourceforge.fenixedu.domain.DomainObject {
    String calendar;
    Integer keyWorkingPlaceCostCenter;
    Date beginDate;
    Integer keySalaryCostCenter;
    Integer keyMailingCostCenter;
    Integer keyResponsableEmployee;
    Date endDate;
    Integer keyStatus;
    Integer who;
    Integer keyEmployee;
    Date when;
}


class net.sourceforge.fenixedu.domain.EmployeeNotTeacher extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyEmployee;
}


class net.sourceforge.fenixedu.domain.Enrolment extends net.sourceforge.fenixedu.domain.DomainObject 
    implements org.apache.ojb.broker.PersistenceBrokerAware {
    String createdBy;
    Date creationDate;
    Integer curricularCourseKey;
    Integer keyExecutionPeriod;
    String ojbConcreteClass;
    Integer studentCurricularPlanKey;
    EnrollmentState enrollmentState;
    EnrollmentCondition condition;
    EnrolmentEvaluationType enrolmentEvaluationType;
	
	interface "
	public void delete();
	public void initializeAsNew(IStudentCurricularPlan studentCurricularPlan, ICurricularCourse curricularCourse, IExecutionPeriod executionPeriod, net.sourceforge.fenixedu.domain.curriculum.EnrollmentCondition enrolmentCondition, String createdBy);
	public void unEnroll() throws net.sourceforge.fenixedu.domain.exceptions.DomainException;
	public void unEnrollImprovement(IExecutionPeriod executionPeriod) throws net.sourceforge.fenixedu.domain.exceptions.DomainException;
	public IEnrolmentEvaluation getImprovementEvaluation();
	public IEnrolmentEvaluation getEnrolmentEvaluationByEnrolmentEvaluationTypeAndGrade (final net.sourceforge.fenixedu.domain.curriculum.EnrolmentEvaluationType evaluationType, final String grade);
	
	public void createEnrolmentEvaluationForImprovement(IEmployee employee, IExecutionPeriod currentExecutionPeriod, IStudent student);
	public IEnrolmentEvaluation submitEnrolmentEvaluation (net.sourceforge.fenixedu.domain.curriculum.EnrolmentEvaluationType enrolmentEvaluationType, IMark publishedMark, IEmployee employee, IPerson personResponsibleForGrade, java.util.Date evaluationDate, String observation);
	public boolean isImprovementForExecutionCourse (IExecutionCourse executionCourse);
	public Integer getAccumulatedWeight();
	public void setAccumulatedWeight(Integer accumulatedWeight);
	"
}

    class net.sourceforge.fenixedu.domain.EnrolmentInExtraCurricularCourse extends net.sourceforge.fenixedu.domain.Enrolment {
    }
    
    class net.sourceforge.fenixedu.domain.EnrolmentInOptionalCurricularCourse extends net.sourceforge.fenixedu.domain.Enrolment {
    }

class net.sourceforge.fenixedu.domain.EnrolmentEquivalence extends net.sourceforge.fenixedu.domain.DomainObject {
    Integer enrolmentKey;

	interface "
	public void delete();
	"
}


class net.sourceforge.fenixedu.domain.EnrolmentEvaluation extends net.sourceforge.fenixedu.domain.DomainObject 
    implements Comparable {
    String checkSum;
    Date when;
    Integer personResponsibleForGradeKey;
    String observation;
    Integer employeeKey;
    Integer enrolmentKey;
    Date gradeAvailableDate;
    Date examDate;
    String grade;
    EnrolmentEvaluationType enrolmentEvaluationType;
    EnrolmentEvaluationState enrolmentEvaluationState;
    
    interface "
    public boolean isNormal();
    public boolean isImprovment();
	public void edit(IPerson responsibleFor, String grade, java.util.Date availableDate, java.util.Date examDate, String checksum);
	public void confirmSubmission(IEmployee employee, String observation);
	public void delete();
	public void alterStudentEnrolmentEvaluationForMasterDegree(String grade, IEmployee employee, IPerson responsibleFor,
			net.sourceforge.fenixedu.domain.curriculum.EnrolmentEvaluationType evaluationType, java.util.Date evaluationAvailableDate, 
			java.util.Date examDate, String observation) throws net.sourceforge.fenixedu.domain.exceptions.DomainException;
	public void insertStudentFinalEvaluationForMasterDegree(String grade, IPerson responsibleFor, java.util.Date examDate) throws net.sourceforge.fenixedu.domain.exceptions.DomainException;
    "
}


class net.sourceforge.fenixedu.domain.log.EnrolmentLog extends net.sourceforge.fenixedu.domain.DomainObject {
    Integer keyCurricularCourse;
    Date date;
    Integer keyStudent;
    EnrolmentAction action;
}
    

class net.sourceforge.fenixedu.domain.EnrolmentPeriod extends net.sourceforge.fenixedu.domain.DomainObject {
    String ojbConcreteClass;
    Date endDate;
    Date startDate;
    Integer keyDegreeCurricularPlan;
    Integer keyExecutionPeriod;
}

    class net.sourceforge.fenixedu.domain.EnrolmentPeriodInClasses extends net.sourceforge.fenixedu.domain.EnrolmentPeriod {
    }
    
    class net.sourceforge.fenixedu.domain.EnrolmentPeriodInCurricularCourses extends net.sourceforge.fenixedu.domain.EnrolmentPeriod {
    }

class net.sourceforge.fenixedu.domain.EquivalentEnrolmentForEnrolmentEquivalence extends net.sourceforge.fenixedu.domain.DomainObject {
    Integer enrolmentEquivalenceKey;
    Integer equivalentEnrolmentKey;

	interface "
	public void delete();
	"
}

class net.sourceforge.fenixedu.domain.Evaluation extends net.sourceforge.fenixedu.domain.DomainObject {
	String ojbConcreteClass;
	String publishmentMessage;
}


	class net.sourceforge.fenixedu.domain.FinalEvaluation extends net.sourceforge.fenixedu.domain.Evaluation {		
		interface "
		public boolean deleteFrom(IExecutionCourse executionCourse);
		"
	}
	
	class net.sourceforge.fenixedu.domain.onlineTests.OnlineTest extends net.sourceforge.fenixedu.domain.Evaluation {
    	Integer keyDistributedTest;
	}


	class net.sourceforge.fenixedu.domain.WrittenEvaluation extends net.sourceforge.fenixedu.domain.Evaluation {
        Date dayDate;
        Date beginningDate;
        Date endDate;
        Date enrollmentBeginDayDate;
        Date enrollmentBeginTimeDate;
        Date enrollmentEndDayDate;
        Date enrollmentEndTimeDate;
        
        interface"
		public java.util.Calendar getDay();
		
		public void setDay(java.util.Calendar calendar);
		
		public java.util.Calendar getBeginning();
		
		public void setBeginning(java.util.Calendar calendar);
		
		public java.util.Calendar getEnd();
		
		public void setEnd(java.util.Calendar calendar);
		
		public java.util.Calendar getEnrollmentBeginDay();
		
		public void setEnrollmentBeginDay(java.util.Calendar calendar);
	
	    public java.util.Calendar getEnrollmentBeginTime();
	    
	    public void setEnrollmentBeginTime(java.util.Calendar calendar);
	
	    public java.util.Calendar getEnrollmentEndDay();
	    
	    public void setEnrollmentEndDay(java.util.Calendar calendar);
	    
		public java.util.Calendar getEnrollmentEndTime();
	    
	    public void setEnrollmentEndTime(java.util.Calendar calendar);
		"
	}

		class net.sourceforge.fenixedu.domain.Exam extends net.sourceforge.fenixedu.domain.WrittenEvaluation {
            Season season;
            
			interface "
			public java.util.List getAssociatedRooms();
			public void delete() throws net.sourceforge.fenixedu.applicationTier.Servico.exceptions.notAuthorizedServiceDeleteException;
			"	
		}

		class net.sourceforge.fenixedu.domain.WrittenTest extends net.sourceforge.fenixedu.domain.WrittenEvaluation {
		}


class net.sourceforge.fenixedu.domain.EvaluationMethod extends net.sourceforge.fenixedu.domain.DomainObject {
	String evaluationElements;
	String evaluationElementsEn;
	Integer keyExecutionCourse;
	
	interface "
	public void edit(String evaluationElements, String evaluationElementsEng);
	
	public void delete();
	"
}


	

class net.sourceforge.fenixedu.domain.ExamStudentRoom extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyRoom;
	Integer keyStudent;
	Integer keyExam;
}


class net.sourceforge.fenixedu.domain.ExecutionCourse extends net.sourceforge.fenixedu.domain.DomainObject implements net.sourceforge.fenixedu.fileSuport.INode {
	String nome;
	Double theoreticalHours;
	String sigla;
	Double labHours;
	Integer keyExecutionPeriod;
	Integer keyCourseReport;
	Integer keyEvaluationMethod;
	Integer keySite;
	Double praticalHours;
	String comment;
	Double theoPratHours;
	
	interface "
	public String getSlideName();
	
	public net.sourceforge.fenixedu.fileSuport.INode getParentNode();

	public java.util.List getGroupProperties();
	
	public IGroupProperties getGroupPropertiesByName(String name);
	
	public boolean existsGroupPropertiesExecutionCourse(IGroupPropertiesExecutionCourse groupPropertiesExecutionCourse);
		
	public boolean existsGroupPropertiesExecutionCourse();
	
	public boolean hasProposals();
	
    public boolean isMasterDegreeOnly();
    
    public void edit(String name, String acronym, double theoreticalHours,
            double theoreticalPraticalHours, double praticalHours, double laboratoryHours, String comment);
    
    public void createSite();
        
    public void createEvaluationMethod(String evaluationElements, String evaluationElementsEng);
    
    public void createBibliographicReference(String title, String authors, String reference, String year, Boolean optional);
    
    public void createCourseReport(String report);
    
    public ISummary createSummary(String title, String summaryText, Integer studentsNumber,
            Boolean isExtraLesson, IProfessorship professorship);
            
    public ISummary createSummary(String title, String summaryText, Integer studentsNumber,
            Boolean isExtraLesson, ITeacher teacher);
            
    public ISummary createSummary(String title, String summaryText, Integer studentsNumber,
            Boolean isExtraLesson, String teacherName);

	public java.util.List responsibleFors();	

	public IAttends getAttendsByStudent (final IStudent student);
    "
}


class net.sourceforge.fenixedu.domain.ExecutionDegree extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyPeriodExamsSecondSemester;
	Integer keyPeriodLessonsSecondSemester;
	Boolean temporaryExamMap;
	Integer keyPeriodExamsFirstSemester;
	Integer keyPeriodLessonsFirstSemester;
	Integer academicYear;
	Integer keyCurricularPlan;
	Integer keyCampus;
	Integer keyGratuityValues;
}


class net.sourceforge.fenixedu.domain.ExecutionPeriod extends net.sourceforge.fenixedu.domain.DomainObject implements net.sourceforge.fenixedu.fileSuport.INode, java.lang.Comparable{
	Integer keyExecutionYear;
	Date beginDate;
	Integer keyPreviousExecutionPeriod;
	Integer keyNextExecutionPeriod;
	Date endDate;
	String name;
	Integer semester;
    PeriodState state;
}


class net.sourceforge.fenixedu.domain.ExecutionYear extends net.sourceforge.fenixedu.domain.DomainObject implements net.sourceforge.fenixedu.fileSuport.INode {
	Date beginDate;
	Date endDate;
	String year;
	Integer keyInsuranceValue;
    PeriodState state;
}


class net.sourceforge.fenixedu.domain.teacher.ExternalActivity extends net.sourceforge.fenixedu.domain.DomainObject {
    Integer keyTeacher;
    Date lastModificationDate;
    String activity;
}


class net.sourceforge.fenixedu.domain.ExternalPerson extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyWorkLocation;
	Integer keyPerson;
	interface "
	public void edit (String name, String address, String phone, String mobile, String homepage, String email, IWorkLocation workLocation, java.util.List<IExternalPerson> allExternalPersons);
	"
}

class net.sourceforge.fenixedu.domain.support.FAQEntry extends net.sourceforge.fenixedu.domain.DomainObject {
	String answer;
	String question;
	Integer keyParentSection;
}


class net.sourceforge.fenixedu.domain.support.FAQSection extends net.sourceforge.fenixedu.domain.DomainObject {
	String sectionName;
	Integer keyParentSection;
}


class net.sourceforge.fenixedu.domain.gaugingTests.physics.GaugingTestResult extends net.sourceforge.fenixedu.domain.DomainObject {
    String p13;
    String p24;
    Double cf;
    String p17;
    String p28;
    String p25;
    String p2;
    String p11;
    String p22;
    String p3;
    String p15;
    Integer unanswered;
    Integer correct;
    String p21;
    String p7;
    String p5;
    String p4;
    Integer wrong;
    String p10;
    String p16;
    Integer test;
    String p27;
    String p8;
    String p6;
    String p1;
    String p9;
    String p14;
    String p26;
    String p18;
    String p23;
    String p12;
    String p19;
    String p20;
    Integer keyStudent;
}


class net.sourceforge.fenixedu.domain.classProperties.GeneralClassProperty extends net.sourceforge.fenixedu.domain.DomainObject {
    String ojbConcreteClass;
    String nameString;
    String valueString;
    
    interface "
    public net.sourceforge.fenixedu.util.classProperties.GeneralClassPropertyName getName();

    public void setName(net.sourceforge.fenixedu.util.classProperties.GeneralClassPropertyName name);

    public net.sourceforge.fenixedu.util.classProperties.GeneralClassPropertyValue getValue();

    public void setValue(net.sourceforge.fenixedu.util.classProperties.GeneralClassPropertyValue value);
    "
}


    class net.sourceforge.fenixedu.domain.classProperties.ExecutionCourseProperty extends net.sourceforge.fenixedu.domain.classProperties.GeneralClassProperty {
        Integer keyExecutionCourse;
    }


class net.sourceforge.fenixedu.domain.support.GlossaryEntry extends net.sourceforge.fenixedu.domain.DomainObject {
	String definition;
	String term;
}


class net.sourceforge.fenixedu.domain.grant.contract.GrantContract extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer costCenterKey;
	String endContractMotive;
	Integer keyGrantOwner;
	Integer contractNumber;
	Date dateAcceptTerm;
	Integer keyGrantType;
}


class net.sourceforge.fenixedu.domain.grant.contract.GrantContractMovement extends net.sourceforge.fenixedu.domain.DomainObject {
	Date departureDate;
	Integer keyGrantContract;
	String location;
	Date arrivalDate;
}


class net.sourceforge.fenixedu.domain.grant.contract.GrantContractRegime extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyTeacher;
	Integer keyGrantContract;
	Integer costCenterKey;
	Date dateBeginContract;
	Integer state;
	Date dateDispatchCC;
	Date dateSendDispatchCC;
	Date dateDispatchCD;
	Date dateSendDispatchCD;
	Date dateEndContract;
	
	interface "
	public Boolean getContractRegimeActive();
	"
}


class net.sourceforge.fenixedu.domain.grant.contract.GrantInsurance extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyGrantPaymentEntity;
	Double totalValue;
	Integer keyGrantContract;
	Date dateEndInsurance;
	Date dateBeginInsurance;
}


class net.sourceforge.fenixedu.domain.grant.contract.GrantOrientationTeacher extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyTeacher;
	Date beginDate;
	Date endDate;
	Integer keyContract;
}


class net.sourceforge.fenixedu.domain.grant.owner.GrantOwner extends net.sourceforge.fenixedu.domain.DomainObject {
	Date dateSendCGD;
	Integer cardCopyNumber;
	Integer keyPerson;
	Integer number;
}


class net.sourceforge.fenixedu.domain.grant.contract.GrantPart extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyGrantPaymentEntity;
	Integer keyResponsibleTeacher;
	Integer keyGrantSubsidy;
	Integer percentage;
}

class net.sourceforge.fenixedu.domain.grant.contract.GrantPaymentEntity extends net.sourceforge.fenixedu.domain.DomainObject {
    String number;
	String designation;
	String ojbConcreteClass;
	Integer keyResponsibleTeacher;
}

	class net.sourceforge.fenixedu.domain.grant.contract.GrantCostCenter extends net.sourceforge.fenixedu.domain.grant.contract.GrantPaymentEntity {
	}

	class net.sourceforge.fenixedu.domain.grant.contract.GrantProject extends net.sourceforge.fenixedu.domain.grant.contract.GrantPaymentEntity {
		Integer keyGrantCostCenter;
	}


class net.sourceforge.fenixedu.domain.grant.contract.GrantSubsidy extends net.sourceforge.fenixedu.domain.DomainObject {
	Double value;
	Integer keyGrantContract;
	Date dateEndSubsidy;
	Integer state;
	Double totalCost;
	Date dateBeginSubsidy;
	String valueFullName;
}


class net.sourceforge.fenixedu.domain.grant.contract.GrantType extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer minPeriodDays;
	String sigla;
	Integer maxPeriodDays;
	Double indicativeValue;
	Date state;
	String source;
	String name;
}


class net.sourceforge.fenixedu.domain.GratuitySituation extends net.sourceforge.fenixedu.domain.DomainObject {
    Date when;
    Integer exemptionPercentage;
	String exemptionDescription;
	Double totalValue;
	Integer keyStudentCurricularPlan;
	Double exemptionValue;
	Integer keyEmployee;
	Integer keyGratuityValues;
	Double remainingValue;
    ExemptionGratuityType exemptionType;
}


class net.sourceforge.fenixedu.domain.GratuityValues extends net.sourceforge.fenixedu.domain.DomainObject {
    Date startPayment;
    Date endPayment;
    Date when;    
    Double scholarShipValue;
	Double courseValue;
	Boolean proofRequestPayment;
	Double anualValue;
	Double creditValue;
	Double finalProofValue;
	Integer keyExecutionDegree;
	Integer keyEmployee;
}


class net.sourceforge.fenixedu.domain.finalDegreeWork.Group extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyExecutionDegree;
}


class net.sourceforge.fenixedu.domain.finalDegreeWork.GroupProposal extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyFinalDegreeWorkProposal;
	Integer orderOfPreference;
	Integer keyFinalDegreeDegreeWorkGroup;
}


class net.sourceforge.fenixedu.domain.finalDegreeWork.GroupStudent extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyFinalDegreeWorkProposalConfirmation;
	Integer keyStudent;
	Integer keyFinalDegreeDegreeWorkGroup;
}


class net.sourceforge.fenixedu.domain.GroupProperties extends net.sourceforge.fenixedu.domain.DomainObject {
    String projectDescription;
    Integer keyAttendsSet;
    Integer maximumCapacity;
    Integer groupMaximumNumber;
    Integer idealCapacity;
    Integer minimumCapacity;
    String name;
    EnrolmentGroupPolicyType enrolmentPolicy;
    ShiftType shiftType;
    Date enrolmentBeginDayDate;
    Date enrolmentEndDayDate;

    interface "
    public java.util.Calendar getEnrolmentBeginDay();
    
	public void setEnrolmentBeginDay(java.util.Calendar enrolmentBeginDay);
	
	public java.util.Calendar getEnrolmentEndDay();

	public void setEnrolmentEndDay(java.util.Calendar enrolmentEndDay);
    
    public java.util.List getExecutionCourses();
    "
}

class net.sourceforge.fenixedu.domain.GroupPropertiesExecutionCourse extends net.sourceforge.fenixedu.domain.DomainObject {
        Integer keySenderExecutionCourse;
        Integer keySenderPerson;
        Integer keyExecutionCourse;
        Integer keyReceiverPerson;
        Integer keyGroupProperties;
    ProposalState proposalState;
}
        
        
class net.sourceforge.fenixedu.domain.Guide extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyContributor;
	String remarks;
	Integer version;
	Double total;
	Integer year;
	Integer keyPerson;
	Integer keyExecutionDegree;
	Integer number;
    Date creationDate;
    Date paymentDate;
    PaymentType paymentType;
    GuideRequester guideRequester;
	
	interface "
	public IGuideSituation getActiveSituation();
	"
}

class net.sourceforge.fenixedu.domain.GuideEntry extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyGuide;
	Double price;
	String description;
	Integer quantity;
    DocumentType documentType;
    GraduationType graduationType;
}
	
    	
class net.sourceforge.fenixedu.domain.GuideSituation extends net.sourceforge.fenixedu.domain.DomainObject {
    Date date;
    Integer keyGuide;
	String remarks;
    State state;
    GuideState situation;
}


class net.sourceforge.fenixedu.domain.inquiries.InquiriesCourse extends net.sourceforge.fenixedu.domain.DomainObject {
    Integer keyExecutionPeriod;
    Integer keyExecutionCourse;
    Integer keyExecutionDegreeCourse;
    Integer keyExecutionDegreeStudent;
    Integer keySchoolClass;
    Integer studentCurricularYear;
    Integer studentFirstEnrollment;
    Double classCoordination;
    Double studyElementsContribution;
    Double previousKnowledgeArticulation;
    Double contributionForGraduation;
    Double evaluationMethodAdequation;
    Integer weeklySpentHours;
    Double globalAppreciation;
}

class net.sourceforge.fenixedu.domain.inquiries.InquiriesRegistry extends net.sourceforge.fenixedu.domain.DomainObject {
    Integer keyExecutionPeriod;
	Integer keyExecutionCourse;
    Integer keyExecutionDegreeCourse;
    Integer keyExecutionDegreeStudent;
    Integer keyStudent;
}

class net.sourceforge.fenixedu.domain.inquiries.InquiriesRoom extends net.sourceforge.fenixedu.domain.DomainObject {
    Integer keyInquiriesCourse;
    Integer keyExecutionPeriod;
	Integer keyExecutionCourse;
    Integer keyExecutionDegreeCourse;
    Integer keyExecutionDegreeStudent;
    Integer keyRoom;
    Integer spaceAdequation;
    Integer environmentalConditions;
    Integer equipmentQuality;
}

class net.sourceforge.fenixedu.domain.inquiries.InquiriesTeacher extends net.sourceforge.fenixedu.domain.DomainObject {
    Integer keyInquiriesCourse;
    Integer keyExecutionPeriod;
    Integer keyExecutionCourse;
    Integer keyExecutionDegreeCourse;
    Integer keyExecutionDegreeStudent;
    Integer keyTeacher;
    Integer keyNonAffiliatedTeacher;
    Integer studentAssiduity;
    ShiftType shiftType;
    Integer teacherAssiduity;
    Double teacherPunctuality;
    Double teacherClarity;
    Double teacherAssurance;
    Double teacherInterestStimulation;
    Double teacherAvailability;
    Double teacherReasoningStimulation;
    Double globalAppreciation;
}


class net.sourceforge.fenixedu.domain.Institution extends net.sourceforge.fenixedu.domain.DomainObject {
    String name;
}


class net.sourceforge.fenixedu.domain.InsuranceValue extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyExecutionYear;
	Double annualValue;
    Date endDate;
}

class net.sourceforge.fenixedu.domain.Item extends net.sourceforge.fenixedu.domain.DomainObject implements net.sourceforge.fenixedu.fileSuport.INode {
	Integer keySection;
	Boolean urgent;
	Integer itemOrder;
	String information;
	String name;
	
	interface "
		public void delete();
		public void edit(String itemName, String itemInformation, Boolean itemUrgent, Integer insertItemOrder);
	"
}

class net.sourceforge.fenixedu.domain.Lesson extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyExecutionPeriod;
	Integer keyShift;
	Integer keyRoomOccupation;
	Integer chaveSala;
    DiaSemana diaSemana;
    ShiftType tipo;
    Date begin;
    Date end;

	interface "
	public java.util.Calendar getInicio();
	
	public void setInicio(java.util.Calendar inicio);

	public java.util.Calendar getFim();
	
	public void setFim(java.util.Calendar fim);

	public double hours();
	"
}


class net.sourceforge.fenixedu.domain.Mark extends net.sourceforge.fenixedu.domain.DomainObject {
    String publishedMark;
    String mark;
    Integer keyEvaluation;
    Integer keyAttend;
}


class net.sourceforge.fenixedu.domain.MasterDegreeCandidate extends net.sourceforge.fenixedu.domain.DomainObject {
	Double average;
	String specializationArea;
	Integer majorDegreeYear;
	String majorDegreeSchool;
	Integer executionDegreeKey;
	Integer personKey;
	Integer substituteOrder;
	Double givenCredits;
	String givenCreditsRemarks;
	String majorDegree;
	Integer candidateNumber;
    Specialization specialization;
	Boolean courseAssistant;
	String coursesToAssist;
	Integer guiderKey;
	Boolean hasGuider;
	
	interface "
	public ICandidateSituation getActiveCandidateSituation();
	"
}

class net.sourceforge.fenixedu.domain.MasterDegreeProofVersion extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyMasterDegreeThesis;
	Integer attachedCopiesNumber;
	Integer keyEmployee;
    Date thesisDeliveryDate;
    Date proofDate;
    State currentState;
    MasterDegreeClassification finalResult;
    Date lastModification;
}

class net.sourceforge.fenixedu.domain.MasterDegreeThesis extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyStudentCurricularPlan;
}

class net.sourceforge.fenixedu.domain.MasterDegreeThesisDataVersion extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyMasterDegreeThesis;
	String dissertationTitle;
	Integer keyEmployee;
	State currentState;
    Date lastModification;
}

class net.sourceforge.fenixedu.domain.onlineTests.Metadata extends net.sourceforge.fenixedu.domain.DomainObject {
    String level;
    Boolean visibility;
    String metadataFile;
    String mainSubject;
    String description;
    String difficulty;
    Integer keyExecutionCourse;
    String author;
    Integer numberOfMembers;
    String secondarySubject;
    Date learningTimeDate;

    interface "
        public abstract java.util.Calendar getLearningTime();

	    public abstract void setLearningTime(java.util.Calendar calendar);
    "
}

class net.sourceforge.fenixedu.domain.Seminaries.Modality extends net.sourceforge.fenixedu.domain.DomainObject {
    String description;
    String name;
}


class net.sourceforge.fenixedu.domain.NonAffiliatedTeacher extends net.sourceforge.fenixedu.domain.DomainObject {
    String name;
    Integer keyInstitution;
}    


class net.sourceforge.fenixedu.domain.NonTeacherEmployee extends net.sourceforge.fenixedu.domain.DomainObject {
    Integer chaveFuncionario;
}


class net.sourceforge.fenixedu.domain.degree.enrollment.NotNeedToEnrollInCurricularCourse extends net.sourceforge.fenixedu.domain.DomainObject {
    Integer studentCurricularPlanKey;
    Integer curricularCourseKey;
	
	interface "

	public void delete();
	
	"
}


class net.sourceforge.fenixedu.domain.inquiries.OldInquiriesCoursesRes extends net.sourceforge.fenixedu.domain.DomainObject {
	Double tolerance2_3;
	Double deviation2_3;
	Double tolerance2_2;
	Integer numAnswers2_4;
	Integer gepCourseId;
	Integer numAnswers2_5_number;
	Double average2_8;
	Integer numAnswers2_3;
	String gepCourseName;
	String average2_7;
	Double numberEvaluated;
	Integer numAnswers2_6;
	Double tolerance2_4;
	Double deviation2_2;
	Double average2_6;
	Integer semester;
	Integer numAnswers2_7;
	Double average2_3;
	Integer numAnswers2_8;
	Integer keyExecutionPeriod;
	Double tolerance2_6;
	Double deviation2_4;
	Double numberApproved;
	Integer curricularYear;
	Double average2_4;
	Double tolerance2_5;
	Double deviation2_5;
	Integer firstEnrollment;
	Double average2_2;
	String courseCode;
	Integer keyDegree;
	Double average2_5;
	Integer numAnswers2_2;
	Double numberEnrollments;
	Integer gepExecutionYear;
	Double representationQuota;
	Double deviation2_8;
	Double deviation2_6;
	Double tolerance2_8;
	Integer numAnswers2_5_text;
	Integer numberAnswers;
	Integer inquiryId;
	
	interface "

	public void delete();
	
	"
}


class net.sourceforge.fenixedu.domain.inquiries.OldInquiriesSummary extends net.sourceforge.fenixedu.domain.DomainObject {
	Double average3_9;
	Double average3_4_numerical;
	Integer gepCourseId;
	Double average2_8;
	Double roomAverage;
	String average3_3_interval;
	String gepCourseName;
	Integer numberEvaluated;
	Double averageAppreciationTeachers;
	Double average3_3_numerical;
	Double averageAppreciationCourse;
	Double average2_6;
	Integer semester;
	Double average6_2;
	Double average2_7_numerical;
	Double average2_3;
	Double average3_6;
	Integer keyExecutionPeriod;
	String average2_7_interval;
	Integer numberApproved;
	Integer curricularYear;
	Double average6_1;
	Double average2_4;
	Double average3_11;
	Double average3_10;
	String average3_4_interval;
	String gepDegreeName;
	Double firstEnrollment;
	Double average2_2;
	String courseCode;
	Integer keyDegree;
	Double average3_7;
	Double average2_5;
	Integer numberEnrollments;
	Integer gepExecutionYear;
	Double average3_5;
	Double representationQuota;
	Double average6_3;
	Double average3_8;
	Integer numberAnswers;
	Integer inquiryId;
	
	interface "

	public void delete();
	
	"
}


class net.sourceforge.fenixedu.domain.inquiries.OldInquiriesTeachersRes extends net.sourceforge.fenixedu.domain.DomainObject {
	String classTypeLong;
	Double average3_9;
	Double deviation3_4;
	Double tolerance3_4;
	Integer numAnswers3_5;
	Integer keyTeacher;
	Double tolerance3_10;
	String average3_4;
	String classType;
	Integer numAnswers3_7;
	Double tolerance3_5;
	String active;
	Integer numAnswers3_8;
	Integer numAnswers3_9;
	Double average3_6;
	Integer mail;
	Double average3_11;
	Integer numAnswers3_3;
	Double deviation3_7;
	String courseCode;
	Integer numAnswers3_10;
	Double tolerance3_11;
	Integer gepExecutionYear;
	Double deviation3_6;
	Integer numAnswers3_4;
	Double average3_8;
	Integer inquiryId;
	Double tolerance3_6;
	Integer gepCourseId;
	Integer numAnswers3_11;
	String average3_3;
	Double tolerance3_3;
	String gepCourseName;
	Double deviation3_11;
	Double deviation3_10;
	Double deviation3_3;
	Integer semester;
	Double tolerance3_8;
	Integer keyExecutionPeriod;
	String category;
	Double deviation3_8;
	Integer curricularYear;
	Double tolerance3_7;
	Double deviation3_5;
	Double average3_10;
	Integer totalNumberAnswers;
	String teacherName;
	Integer teacherNumber;
	Integer keyDegree;
	Integer numAnswers3_6;
	Double average3_7;
	Double average3_5;
	Double tolerance3_9;
	Integer departmentCode;
	Double deviation3_9;
	
	interface "

	public void delete();
	
	"
}


class net.sourceforge.fenixedu.domain.teacher.OldPublication extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyTeacher;
	Date lastModificationDate;
	String publication;
    OldPublicationType oldPublicationType;
}


class net.sourceforge.fenixedu.domain.teacher.Orientation extends net.sourceforge.fenixedu.domain.DomainObject {
    Integer keyTeacher;
    String description;
    Integer numberOfStudents;
    Date lastModificationDate;
    OrientationType orientationType;
}


class net.sourceforge.fenixedu.domain.PaymentPhase extends net.sourceforge.fenixedu.domain.DomainObject {
	Double value;
	String description;
	Integer keyGratuityValues;
    Date endDate;
    Date startDate;
}

class net.sourceforge.fenixedu.domain.Period extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyPeriod;
    Date start;
    Date end;
	
	interface "
    public java.util.Calendar getStartDate();
    
    public void setStartDate(java.util.Calendar calendar);
    
    public java.util.Calendar getEndDate();
	
	public void setEndDate(java.util.Calendar calendar);

	public java.util.Calendar getEndDateOfComposite();
	
	public boolean intersectPeriods(final java.util.Calendar start, final java.util.Calendar end);

	public boolean intersectPeriods(IPeriod period);
	
	public boolean containsDay(java.util.Calendar day);
	
	public void deleteIfEmpty();
	"
}

class net.sourceforge.fenixedu.domain.Person extends net.sourceforge.fenixedu.domain.DomainObject {
	String localidade;
	String codigoFiscal;
	String telemovel;
	String enderecoWeb;
	Date dataValidadeDocumentoIdentificacao;
	String distritoMorada;
	String numeroDocumentoIdentificacao;
	Integer chavePais;
	String profissao;
	String concelhoNaturalidade;
	Date dataEmissaoDocumentoIdentificacao;
	String morada;
	Boolean availableWebSite;
	String nacionalidade;
	String numContribuinte;
	String localidadeCodigoPostal;
	String username;
	String telefone;
	String localEmissaoDocumentoIdentificacao;
	String distritoNaturalidade;
	String password;
	Boolean availableEmail;
	String workPhone;
	String nome;
	String freguesiaNaturalidade;
	String codigoPostal;
	String nomePai;
	String nomeMae;
	Boolean availablePhoto;
	String email;
	String concelhoMorada;
	Date nascimento;
	String freguesiaMorada;
	Integer keyAuthor;
    MaritalStatus maritalStatus;
    Gender gender;
    IDDocumentType idDocumentType; 
	Integer keyExternalPerson;
	Boolean isPassInKerberos;
	String istUsername;
	
	interface "
    public String getSlideName();
    
    public String getSlideNameForCandidateDocuments();
    
    public void delete();
    
    public void edit(net.sourceforge.fenixedu.dataTransferObject.InfoPerson personToEdit, net.sourceforge.fenixedu.domain.ICountry country);
    
    public void changePassword(String oldPassword, String newPassword);
    
    public void editPersonalContactInformation(net.sourceforge.fenixedu.dataTransferObject.InfoPerson personToEdit);
    
    public void changeUsername(String newUsername, java.util.List<IPerson> persons);
    
    public void edit(String name, String address, String phone, String mobile, String homepage, String email);
    "
}

class net.sourceforge.fenixedu.domain.PersonAccount extends net.sourceforge.fenixedu.domain.DomainObject {
	Double balance;
	Integer keyPerson;
	
	interface "
    public java.util.List getPaymentTransactions();    
    public java.util.List getInsuranceTransactions();        
    "
}


class net.sourceforge.fenixedu.domain.student.PersonalDataUseInquiryAnswers extends net.sourceforge.fenixedu.domain.DomainObject {
    Boolean answer5;
    Boolean answer1;
    Boolean answer3;
    Boolean answer7;
    Boolean answer6;
    Integer keyStudent;
    Boolean answer4;
    Boolean answer2;
    
    interface "
    public void setAnswer(Integer id, Boolean answer);
    "
}


class net.sourceforge.fenixedu.domain.PersonRole extends net.sourceforge.fenixedu.domain.DomainObject {
    Integer keyPerson;
    Integer keyRole;
}


class net.sourceforge.fenixedu.domain.precedences.Precedence extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyCurricularCourse;
	
	interface " 
	public net.sourceforge.fenixedu.domain.curriculum.CurricularCourseEnrollmentType evaluate(net.sourceforge.fenixedu.domain.precedences.PrecedenceContext precedenceContext);
	public void delete();
	public void mergePrecedences(IPrecedence sourcePrecedence);
	"
}

class net.sourceforge.fenixedu.domain.Price extends net.sourceforge.fenixedu.domain.DomainObject {
	String description;
	Double price;
    GraduationType graduationType;
    DocumentType documentType;
}
	
	    
class net.sourceforge.fenixedu.domain.Professorship extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyTeacher;
	Integer keyExecutionCourse;
	Double hours;
	Boolean responsibleFor;

    interface "
	public boolean belongsToExecutionPeriod(IExecutionPeriod executionPeriod);
	
	public void delete();
	"
}


class net.sourceforge.fenixedu.domain.finalDegreeWork.Proposal extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer minimumNumberOfGroupElements;
	String title;
	Integer orientatorsCreditsPercentage;
	Integer keyCoorientator;
	Integer keyGroupAttributedByTeacher;
	String companionName;
	String deliverable;
	Integer keyExecutionDegree;
	String url;
	String companyAdress;
	Integer keyGroupAttributed;
	Integer coorientatorsCreditsPercentage;
	String location;
	Integer proposalNumber;
	String observations;
	Integer companionPhone;
	String framing;
	Integer maximumNumberOfGroupElements;
	String requirements;
	Integer keyOrientator;
	String objectives;
	String companyName;
	String description;
	String companionMail;
	DegreeType degreeType;
    FinalDegreeWorkProposalStatus status;
}

class net.sourceforge.fenixedu.domain.projectsManagement.ProjectAccess extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyProject;
	Integer keyPerson;
	Integer keyProjectCoordinator;
    Date begin;
    Date end;
    Boolean costCenter;

	interface " 
    public abstract java.util.Calendar getBeginDate();

    public abstract void setBeginDate(java.util.Calendar beginDate);

    public abstract java.util.Calendar getEndDate();

    public abstract void setEndDate(java.util.Calendar endDate);
    "
}


class net.sourceforge.fenixedu.domain.Qualification extends net.sourceforge.fenixedu.domain.DomainObject {
    Date lastModificationDate;
    String degreeRecognition;
    String equivalenceSchool;
    String mark;
    String title;
    String specializationArea;
    Date date;
    Integer personKey;
    String branch;
    Date equivalenceDate;
    String degree;
    Integer countryKey;
    String school;
}

class net.sourceforge.fenixedu.domain.onlineTests.Question extends net.sourceforge.fenixedu.domain.DomainObject {
    Integer keyMetadata;
    String xmlFile;
    Boolean visibility;
    String xmlFileName;
    
    interface "
    public void delete();
    "
}

class net.sourceforge.fenixedu.domain.reimbursementGuide.ReimbursementGuide extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyGuide;
	Integer number;
    Date creation;

	interface "
	public java.util.Calendar getCreationDate();
	
	public void setCreationDate(java.util.Calendar creationDate);
	
	public IReimbursementGuideSituation getActiveReimbursementGuideSituation();
	"
}

class net.sourceforge.fenixedu.domain.reimbursementGuide.ReimbursementGuideEntry extends net.sourceforge.fenixedu.domain.DomainObject {
	String justification;
	Double value;
	Integer keyReimbursementGuide;
	Integer keyGuideEntry;
}

class net.sourceforge.fenixedu.domain.reimbursementGuide.ReimbursementGuideSituation extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyReimbursementGuide;
	String remarks;
	Integer keyEmployee;
    State state;
    ReimbursementGuideState reimbursementGuideState;
    Date modification;
    Date official;
	
	interface "
    public java.util.Calendar getModificationDate();
    
    public void setModificationDate(java.util.Calendar modificationDate);
    
    public java.util.Calendar getOfficialDate();
    
	public void setOfficialDate(java.util.Calendar officialDate);
	"	
}


class net.sourceforge.fenixedu.domain.student.ResidenceCandidacies extends net.sourceforge.fenixedu.domain.DomainObject {
    Date creationDate;
    String observations;
    Boolean dislocated;
    Integer keyStudent;
}


class net.sourceforge.fenixedu.domain.precedences.Restriction extends net.sourceforge.fenixedu.domain.DomainObject {
    String ojbConcreteClass;
	Integer keyPrecedence;	
	
	interface " 	
	public net.sourceforge.fenixedu.domain.curriculum.CurricularCourseEnrollmentType evaluate(net.sourceforge.fenixedu.domain.precedences.PrecedenceContext precedenceContext);
	public void delete();
	"
}


class net.sourceforge.fenixedu.domain.precedences.RestrictionByCurricularCourse extends net.sourceforge.fenixedu.domain.precedences.Restriction {
	Integer keyPrecedentCurricularCourse;
}


class net.sourceforge.fenixedu.domain.precedences.RestrictionByNumberOfCurricularCourses extends net.sourceforge.fenixedu.domain.precedences.Restriction {
	Integer numberOfCurricularCourses;
}


class net.sourceforge.fenixedu.domain.precedences.RestrictionByNumberOfDoneCurricularCourses extends net.sourceforge.fenixedu.domain.precedences.RestrictionByNumberOfCurricularCourses {
}

class net.sourceforge.fenixedu.domain.precedences.RestrictionDoneCurricularCourse extends net.sourceforge.fenixedu.domain.precedences.RestrictionByCurricularCourse {
}

class net.sourceforge.fenixedu.domain.precedences.RestrictionDoneOrHasEverBeenEnrolledInCurricularCourse extends net.sourceforge.fenixedu.domain.precedences.RestrictionDoneCurricularCourse {
}

class net.sourceforge.fenixedu.domain.precedences.RestrictionHasEverBeenOrIsCurrentlyEnrolledInCurricularCourse extends net.sourceforge.fenixedu.domain.precedences.RestrictionDoneOrHasEverBeenEnrolledInCurricularCourse {
}

class net.sourceforge.fenixedu.domain.precedences.RestrictionHasEverBeenOrWillBeAbleToBeEnrolledInCurricularCourse extends net.sourceforge.fenixedu.domain.precedences.RestrictionDoneOrHasEverBeenEnrolledInCurricularCourse {
}

class net.sourceforge.fenixedu.domain.precedences.RestrictionNotDoneCurricularCourse extends net.sourceforge.fenixedu.domain.precedences.RestrictionByCurricularCourse {
}

class net.sourceforge.fenixedu.domain.precedences.RestrictionNotEnrolledInCurricularCourse extends net.sourceforge.fenixedu.domain.precedences.RestrictionNotDoneCurricularCourse {
}

class net.sourceforge.fenixedu.domain.precedences.RestrictionPeriodToApply extends net.sourceforge.fenixedu.domain.precedences.Restriction {
    PeriodToApplyRestriction periodToApplyRestriction;
}


class net.sourceforge.fenixedu.domain.Role extends net.sourceforge.fenixedu.domain.DomainObject {
	String portalSubApplication;
	String pageNameProperty;
	String page;
    RoleType roleType;
}


class net.sourceforge.fenixedu.domain.Room extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyBuilding;
	String nome;
	Integer capacidadeNormal;
	Integer capacidadeExame;
	Integer piso;
    TipoSala tipo;

	interface "
	public void createRoomOccupation(net.sourceforge.fenixedu.domain.IPeriod period, java.util.Calendar startTime, java.util.Calendar endTime,
            net.sourceforge.fenixedu.util.DiaSemana dayOfWeek, Integer frequency, Integer week, net.sourceforge.fenixedu.domain.IWrittenEvaluation writtenEvaluation) throws net.sourceforge.fenixedu.applicationTier.Servico.exceptions.ExistingServiceException;
	"
}

class net.sourceforge.fenixedu.domain.RoomOccupation extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer weekOfQuinzenalStart;
	Integer keyRoom;
	Integer frequency;
	Integer keyPeriod;
    DiaSemana dayOfWeek;
    Date startTimeDate;
    Date endTimeDate;
    Integer keyWrittenEvaluation;
    Integer keyLesson;

	interface "
    public java.util.Calendar getStartTime();

    public void setStartTime(java.util.Calendar calendar);
    
    public java.util.Calendar getEndTime();
	
	public void setEndTime(java.util.Calendar calendar);

	public boolean roomOccupationForDateAndTime(IRoomOccupation roomOccupation);
	
	public boolean roomOccupationForDateAndTime(IPeriod period, java.util.Calendar startTime, java.util.Calendar endTime, net.sourceforge.fenixedu.util.DiaSemana dayOfWeek, Integer frequency, Integer week, IRoom room);
	
	public boolean roomOccupationForDateAndTime(IPeriod period, java.util.Calendar startTime, java.util.Calendar endTime, net.sourceforge.fenixedu.util.DiaSemana dayOfWeek, Integer frequency, Integer week);
	
    public boolean roomOccupationForDateAndTime(java.util.Calendar startDate, java.util.Calendar endDate, java.util.Calendar startTime, java.util.Calendar endTime, net.sourceforge.fenixedu.util.DiaSemana dayOfWeek, Integer frequency, Integer week);

	public boolean containedIn(java.util.Calendar day, java.util.Calendar beginning, java.util.Calendar end);

	public void delete();
	"
}


class net.sourceforge.fenixedu.domain.Seminaries.Seminary extends net.sourceforge.fenixedu.domain.DomainObject {
    Boolean hasTheme;
    String description;
    Boolean hasCaseStudy;
    Integer allowedCandidaciesPerStudent;
    String name;
    Date enrollmentBegin;
    Date enrollmentTimeBegin;
    Date enrollmentEnd;
    Date enrollmentTimeEnd;

    interface "
    public java.util.Calendar getEnrollmentBeginDate();

    public java.util.Calendar getEnrollmentBeginTime();

    public java.util.Calendar getEnrollmentEndDate();

    public java.util.Calendar getEnrollmentEndTime();

    public void setEnrollmentBeginDate(java.util.Calendar calendar);

    public void setEnrollmentBeginTime(java.util.Calendar calendar);

    public void setEnrollmentEndDate(java.util.Calendar calendar);

    public void setEnrollmentEndTime(java.util.Calendar calendar);
    "
}


class net.sourceforge.fenixedu.domain.student.Senior extends net.sourceforge.fenixedu.domain.DomainObject {
    String extracurricularActivities;
    String specialtyField;
    Date lastModificationDate;
    Date expectedDegreeTermination;
    String informaticsSkills;
    String professionalExperience;
    String languageSkills;
    Integer expectedDegreeAverageGrade;
    String professionalInterests;
    Integer keyStudent;
}


class net.sourceforge.fenixedu.domain.sms.SentSms extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyPerson;
	Integer destinationNumber;
    Date deliveryDate;
    Date sendDate;
    SmsDeliveryType deliveryType;
}


class net.sourceforge.fenixedu.domain.finalDegreeWork.Scheduleing extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer maximumNumberOfStudents;
	Date endOfProposalPeriodDate;
	Date endOfProposalPeriodTime;
	Date endOfCandidacyPeriodTime;
	Date startOfCandidacyPeriodDate;
	Date endOfCandidacyPeriodDate;
	Integer minimumNumberOfStudents;
	Integer maximumNumberOfProposalCandidaciesPerGroup;
	Integer minimumNumberOfCompletedCourses;
	Integer keyExecutionDegree;
	Integer currentProposalNumber;
	Date startOfProposalPeriodTime;
	Date startOfProposalPeriodDate;
	Date startOfCandidacyPeriodTime;
	
	interface "
	public java.util.Date getEndOfProposalPeriod();

    public void setEndOfProposalPeriod(java.util.Date endOfProposalPeriod);

    public java.util.Date getStartOfProposalPeriod();

    public void setStartOfProposalPeriod(java.util.Date startOfProposalPeriod);

    public java.util.Date getStartOfCandidacyPeriod();

    public void setStartOfCandidacyPeriod(java.util.Date startOfCandidacyPeriod);

    public java.util.Date getEndOfCandidacyPeriod();

    public void setEndOfCandidacyPeriod(java.util.Date endOfCandidacyPeriod);
	"
}


class net.sourceforge.fenixedu.domain.SchoolClass extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyExecutionDegree;
	String nome;
	Integer keyExecutionPeriod;
	Integer anoCurricular;
	
	interface "
	public void associateShift(net.sourceforge.fenixedu.domain.IShift shift);
	"
}

class net.sourceforge.fenixedu.domain.SecretaryEnrolmentStudent extends net.sourceforge.fenixedu.domain.DomainObject {
    String reasonDescription;
    Integer keyStudent;
    SecretaryEnrolmentStudentReason reasonType;
}


class net.sourceforge.fenixedu.domain.ScientificArea extends net.sourceforge.fenixedu.domain.DomainObject {
	String name;
}

class net.sourceforge.fenixedu.domain.Section extends net.sourceforge.fenixedu.domain.DomainObject implements net.sourceforge.fenixedu.fileSuport.INode {
	Integer keySuperiorSection;
	Integer sectionOrder;
	Integer keySite;
	String name;
	Date lastModifiedDate;
	
	interface "
		
		public void insertItem(String itemName, String itemInformation, Boolean itemUrgency, Integer insertItemOrder)
			throws net.sourceforge.fenixedu.domain.exceptions.DomainException;
		
		public void edit(String newSectionName, Integer newOrder);
		
		public void delete();
	"
}


class net.sourceforge.fenixedu.domain.teacher.ServiceProviderRegime extends net.sourceforge.fenixedu.domain.DomainObject {
    Integer keyTeacher;
    Date lastModificationDate;
    ProviderRegimeType providerRegimeType;
}


class net.sourceforge.fenixedu.domain.Shift extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer availabilityFinal;
	Integer chaveDisciplinaExecucao;
	String nome;
	Integer lotacao;
    ShiftType tipo;
		
	interface "
    public double hours();
    
    public void associateSchoolClass(net.sourceforge.fenixedu.domain.ISchoolClass schoolClass);
    
    public void transferSummary(ISummary summary, java.util.Date summaryDate, java.util.Date summaryHour, IRoom room);
	"
}


class net.sourceforge.fenixedu.domain.ShiftProfessorship extends net.sourceforge.fenixedu.domain.DomainObject {
    Integer keyShift;
    Integer keyProfessorship;
    Double percentage;
}


class net.sourceforge.fenixedu.domain.gratuity.masterDegree.SibsPaymentFile extends net.sourceforge.fenixedu.domain.DomainObject {
	String filename;
}

class net.sourceforge.fenixedu.domain.gratuity.masterDegree.SibsPaymentFileEntry extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer studentNumber;
	Integer keySibsPaymentFile;
	Integer year;
	Double payedValue;
    SibsPaymentType paymentType;
    SibsPaymentStatus paymentStatus;
    Date transactionDate;
}

class net.sourceforge.fenixedu.domain.Site extends net.sourceforge.fenixedu.domain.DomainObject {
	String style;
	String initialStatement;
	String mail;
	Integer keyExecutionCourse;
	String introduction;
	String alternativeSite;
	
	interface "
	public void edit(String initialStatement, String introduction, String mail, String alternativeSite);
	
	public void createAnnouncement(String announcementTitle, String announcementInformation);			
	
	public net.sourceforge.fenixedu.domain.ISection createSection(String sectionName, ISection parentSection, Integer sectionOrder);
	"
}


class net.sourceforge.fenixedu.domain.StatusAssiduidade extends net.sourceforge.fenixedu.domain.DomainObject {
    String designacao;
    String sigla;
    String estado;
    String assiduidade;
    Integer quem;
    Date quando;
}


class net.sourceforge.fenixedu.domain.Student extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer studentKindKey;
	Double entryGrade;
	String istUniversity;
	Boolean enrollmentForbidden;
	String ingression;
	String contigent;
	Integer personKey;
	Boolean payedTuition;
	Boolean specialSeason;
	Integer keyRegistrationYear;
	Integer number;
	DegreeType degreeType;
    StudentState state;
    AgreementType agreementType;
    EntryPhase entryPhase;
    Boolean flunked;
    Boolean requestedChangeDegree;
    Boolean requestedChangeBranch;
    Integer keyStudentPersonalDataAuthorization;
    Boolean interruptedStudies;

	interface "
    public IStudentCurricularPlan getActiveStudentCurricularPlan();
	"
}


class net.sourceforge.fenixedu.domain.gesdis.StudentCourseReport extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyCurricularCourse;
	Date lastModificationDate;
	String strongPoints;
	String weakPoints;
	String studentReport;
}

class net.sourceforge.fenixedu.domain.StudentCurricularPlan extends net.sourceforge.fenixedu.domain.DomainObject {
    Integer branchKey;
    Double  classification;
    Integer completedCourses;
    Integer degreeCurricularPlanKey;
    Integer employeeKey;
    Integer masterDegreeThesisKey;
    Integer enrolledCourses;
    Double givenCredits;
    String observations;
    String ojbConcreteClass;
    Date startDate;
    Integer studentKey;
    Date when;
    StudentCurricularPlanState currentState;
    Specialization specialization;
    
    interface "
    public IBranch getSecundaryBranch();

    public void setSecundaryBranch(IBranch secundaryBranch);
    
    public boolean areNewAreasCompatible(IBranch specializationArea, IBranch secundaryArea)
        throws net.sourceforge.fenixedu.persistenceTier.ExcepcaoPersistencia, net.sourceforge.fenixedu.applicationTier.Servico.exceptions.BothAreasAreTheSameServiceException, net.sourceforge.fenixedu.applicationTier.Servico.exceptions.InvalidArgumentsServiceException;

    public java.util.List getAllStudentEnrolledEnrollmentsInExecutionPeriod(IExecutionPeriod executionPeriod);

    public java.util.List getAllStudentEnrollmentsInExecutionPeriod(IExecutionPeriod executionPeriod);
    
    public java.util.List getAprovedEnrolmentsInExecutionPeriod(final IExecutionPeriod executionPeriod);
    
    public boolean getCanChangeSpecializationArea();
    
    public Integer getCreditsInSecundaryArea();
    
    public Integer getCreditsInSpecializationArea();
    
    public Integer getCurricularCourseAcumulatedEnrollments(ICurricularCourse curricularCourse);
    
    public net.sourceforge.fenixedu.domain.curriculum.CurricularCourseEnrollmentType getCurricularCourseEnrollmentType(ICurricularCourse curricularCourse, IExecutionPeriod currentExecutionPeriod);
    
    public java.util.List getCurricularCoursesToEnroll(IExecutionPeriod executionPeriod) 
        throws net.sourceforge.fenixedu.domain.exceptions.FenixDomainException;
    
    public Integer getMaximumNumberOfAcumulatedEnrollments();
    
    public Integer getMaximumNumberOfCoursesToEnroll();
    
    public Integer getMinimumNumberOfCoursesToEnroll();
    
    public int getNumberOfApprovedCurricularCourses();
    
    public int getNumberOfEnrolledCurricularCourses();
    
    public boolean isCurricularCourseApproved(ICurricularCourse curricularCourse);
    
    public boolean isCurricularCourseEnrolled(ICurricularCourse curricularCourse);
    
    public boolean isCurricularCourseEnrolledInExecutionPeriod(ICurricularCourse curricularCourse, IExecutionPeriod executionPeriod);
    
    public boolean isCurricularCourseApprovedInCurrentOrPreviousPeriod(ICurricularCourse course, IExecutionPeriod executionPeriod);
	
    public boolean isCurricularCourseApprovedWithoutEquivalencesInCurrentOrPreviousPeriod(ICurricularCourse course, IExecutionPeriod executionPeriod);
    
    public void setCreditsInSecundaryArea(Integer creditsInSecundaryArea);
    
    public void setCreditsInSpecializationArea(Integer creditsInSpecializationArea);
	
	public void changeState(net.sourceforge.fenixedu.domain.studentCurricularPlan.StudentCurricularPlanState studentCurricularPlanState) throws net.sourceforge.fenixedu.domain.exceptions.DomainException;
	
	public void delete() throws net.sourceforge.fenixedu.domain.exceptions.DomainException;
	
	public IEnrolment getEnrolmentByCurricularCourseAndExecutionPeriod(final ICurricularCourse curricularCourse, final IExecutionPeriod executionPeriod);
	
	public void setStudentAreasWithoutRestrictions(IBranch specializationArea, IBranch secundaryArea) throws net.sourceforge.fenixedu.domain.exceptions.DomainException;
	
	public void setStudentAreas(IBranch specializationArea, IBranch secundaryArea) throws 
				net.sourceforge.fenixedu.applicationTier.Servico.exceptions.NotAuthorizedBranchChangeException, 
				net.sourceforge.fenixedu.applicationTier.Servico.exceptions.BothAreasAreTheSameServiceException, 
				net.sourceforge.fenixedu.applicationTier.Servico.exceptions.InvalidArgumentsServiceException, 
				net.sourceforge.fenixedu.domain.exceptions.DomainException;
    
    public java.util.List initAcumulatedEnrollments(java.util.List elements);
    "
}


    class net.sourceforge.fenixedu.domain.StudentCurricularPlanLEIC extends net.sourceforge.fenixedu.domain.StudentCurricularPlan {
        Integer creditsInSecundaryArea;
        Integer creditsInSpecializationArea;
        Integer secundaryBranchKey;
    }
    
    class net.sourceforge.fenixedu.domain.StudentCurricularPlanLEEC extends net.sourceforge.fenixedu.domain.StudentCurricularPlan {
        Integer creditsInSecundaryArea;
        Integer creditsInSpecializationArea;
        Integer secundaryBranchKey;
    }
    
    class net.sourceforge.fenixedu.domain.StudentCurricularPlanLEM extends net.sourceforge.fenixedu.domain.StudentCurricularPlan {
    }
    
class net.sourceforge.fenixedu.domain.StudentGroup extends net.sourceforge.fenixedu.domain.DomainObject {
    Integer keyShift;
    Integer groupNumber;
    Integer keyAttendsSet;
}

class net.sourceforge.fenixedu.domain.StudentGroupAttend extends net.sourceforge.fenixedu.domain.DomainObject {
    Integer keyStudentGroup;
    Integer keyAttend;        
}

class net.sourceforge.fenixedu.domain.StudentKind extends net.sourceforge.fenixedu.domain.DomainObject {
    Integer minCoursesToEnrol;
    Integer maxNACToEnrol;
    Integer maxCoursesToEnrol;
    StudentType studentType;
}

class net.sourceforge.fenixedu.domain.student.StudentPersonalDataAuthorization extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyStudent;
	Integer keyExecutionYear;
	StudentPersonalDataAuthorizationChoice answer;
}

class net.sourceforge.fenixedu.domain.onlineTests.StudentTestLog extends net.sourceforge.fenixedu.domain.DomainObject {
    String event;
    Integer keyDistributedTest;
    Date date;
    Integer keyStudent;
}

class net.sourceforge.fenixedu.domain.onlineTests.StudentTestQuestion extends net.sourceforge.fenixedu.domain.DomainObject {
    Integer keyQuestion;
    Integer testQuestionOrder;
    String optionShuffle;
    Integer oldResponse;
    Double testQuestionValue;
    Integer keyDistributedTest;
    Integer keyStudent;
    String response;
    Double testQuestionMark;
    CorrectionFormula correctionFormula;
    
    interface "
    public void delete();
    "
}

class net.sourceforge.fenixedu.domain.Summary extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer studentsNumber;
	Integer keyProfessorship;
	String title;
	Integer keyExecutionCourse;
	Integer keyTeacher;
	Integer keyRoom;
	String teacherName;
	String summaryText;
	Date lastModifiedDate;
	Integer keyShift;
	Boolean isExtraLesson;
    Date summaryDate;
    Date summaryHour;
    ShiftType summaryType;
    
    interface "
    public void edit(String title, String summaryText, Integer studentsNumber, Boolean isExtraLesson,
            IProfessorship professorship);
            
    public void edit(String title, String summaryText, Integer studentsNumber, Boolean isExtraLesson,
            ITeacher teacher);
            
    public void edit(String title, String summaryText, Integer studentsNumber, Boolean isExtraLesson,
            String teacherName);
            
	public void modifyShift(IShift shift, java.util.Date summaryDate, java.util.Date summaryHour, IRoom room);            
	
	public void delete();
    "
}

class net.sourceforge.fenixedu.domain.SupportLesson extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyProfessorship;
	Date startTime;
	String place;
	Date endTime;
	DiaSemana weekDay;
    
	interface "
	public double hours();
	
	public boolean belongsToExecutionPeriod(IExecutionPeriod executionPeriod);
	"
}


class net.sourceforge.fenixedu.domain.Teacher extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer teacherNumber;
	Integer keyPerson;
	Integer keyCategory;
	Integer keyServiceProviderRegime;
	Integer keyPublicationsNumber;
	
	interface "
	public net.sourceforge.fenixedu.dataTransferObject.credits.InfoCredits getExecutionPeriodCredits(IExecutionPeriod executionPeriod);
	
	public void addToTeacherInformationSheet(net.sourceforge.fenixedu.domain.publication.IPublication publication, net.sourceforge.fenixedu.util.PublicationArea publicationArea) throws net.sourceforge.fenixedu.domain.exceptions.DomainException;
	
	public void removeFromTeacherInformationSheet(net.sourceforge.fenixedu.domain.publication.IPublication publication) throws net.sourceforge.fenixedu.domain.exceptions.DomainException;
	
	public Boolean canAddPublicationToTeacherInformationSheet(net.sourceforge.fenixedu.util.PublicationArea area);

	public java.util.List responsibleFors();
	
	public IProfessorship responsibleFor(Integer executionCourseId);
	
	public void updateResponsabilitiesFor(Integer executionYearId, java.util.List<Integer> executionCourses) 
		throws net.sourceforge.fenixedu.applicationTier.Servico.teacher.professorship.ResponsibleForValidator.MaxResponsibleForExceed, 
		net.sourceforge.fenixedu.applicationTier.Servico.teacher.professorship.ResponsibleForValidator.InvalidCategory;
	"
}


class net.sourceforge.fenixedu.domain.degree.finalProject.TeacherDegreeFinalProjectStudent extends net.sourceforge.fenixedu.domain.DomainObject {
    Integer keyTeacher;
    Integer keyStudent;
    Integer keyExecutionPeriod;
    Double percentage;
}


class net.sourceforge.fenixedu.domain.teacher.workTime.TeacherInstitutionWorkTime extends net.sourceforge.fenixedu.domain.DomainObject {
    Integer keyTeacher;
    Date startTime;
    Integer keyExecutionPeriod;
    Date endTime;
    DiaSemana weekDay;
    
    interface "
    public double hours();
    "
}

class net.sourceforge.fenixedu.domain.onlineTests.Test extends net.sourceforge.fenixedu.domain.DomainObject {
    Date creationDate;
    String information;
    String title;
    Date lastModifiedDate;
    Integer keyTestScope;
    Integer numberOfQuestions;
    
    interface "
    public void insertTestQuestion(IQuestion question, Integer testQuestionOrder, Double testQuestionValue, net.sourceforge.fenixedu.util.tests.CorrectionFormula formula);
    
    public void deleteTestQuestion(ITestQuestion testQuestion);
    "
}

class net.sourceforge.fenixedu.domain.onlineTests.TestQuestion extends net.sourceforge.fenixedu.domain.DomainObject {
    Integer keyTest;
    Integer keyQuestion;
    Integer testQuestionOrder;
    Double testQuestionValue;
    CorrectionFormula correctionFormula;
    
    interface "
    public void editTestQuestion(Integer newTestQuestionOrder, Double newTestQuestionValue, net.sourceforge.fenixedu.util.tests.CorrectionFormula newFormula);
    
  	public void delete();
    "
}

class net.sourceforge.fenixedu.domain.onlineTests.TestScope extends net.sourceforge.fenixedu.domain.DomainObject {
    Integer keyClass;
    String className;
    IDomainObject domainObject;
}

class net.sourceforge.fenixedu.domain.Seminaries.Theme extends net.sourceforge.fenixedu.domain.DomainObject {
    String description;
    String shortName;
    String name;
}


class net.sourceforge.fenixedu.domain.University extends net.sourceforge.fenixedu.domain.DomainObject {
	String code;
	String name;
}


class net.sourceforge.fenixedu.domain.teacher.WeeklyOcupation extends net.sourceforge.fenixedu.domain.DomainObject {
    Integer keyTeacher;
    Integer other;
    Date lastModificationDate;
    Integer lecture;
    Integer management;
    Integer research;
    Integer support;
}

class net.sourceforge.fenixedu.domain.publication.PublicationType extends net.sourceforge.fenixedu.domain.DomainObject {
	String publicationType;
		
	interface "
	public java.util.List<IAttribute> getRequiredAttributes();

    public java.util.List<IAttribute> getNonRequiredAttributes();
	"
}


class net.sourceforge.fenixedu.domain.publication.PublicationTeacher extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyTeacher;
	Integer keyPublication;
    PublicationArea publicationArea;
    interface "
    public void delete();
    "
}


class net.sourceforge.fenixedu.domain.publication.Authorship extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyAuthor;
	Integer keyPublication;
	Integer order;
	interface "
	public void delete();
	"
}


class net.sourceforge.fenixedu.domain.publication.Publication extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer issn;
	String volume;
	String observation;
	String subType;
	String title;
	String editorCity;
	String criticizedAuthor;
	String instituition;
	String translatedAuthor;
	Integer edition;
	String local;
	String scope;
	Integer year_end;
	String url;
	Integer fascicle;
	String originalLanguage;
	Integer firstPage;
	Integer lastPage;
	Integer number;
	String month_end;
	String month;
	Integer serie;
	String conference;
	String publicationType;
	String university;
	Integer isbn;
	String journalName;
	String language;
	Integer numberPages;
	String editor;
	String country;
	Integer year;
	String format;
	Integer keyPublicationType;
	String publicationString;
	
	interface "
	public void edit(net.sourceforge.fenixedu.dataTransferObject.publication.PublicationDTO publicationDTO, net.sourceforge.fenixedu.domain.publication.IPublicationType publicationType, java.util.List<net.sourceforge.fenixedu.domain.IPerson> authors);
	public void delete();
	"
}

class net.sourceforge.fenixedu.domain.teacher.PublicationsNumber extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer national;
	Integer keyTeacher;
	Date lastModificationDate;
	Integer international;
    PublicationType publicationType;
}

class net.sourceforge.fenixedu.domain.publication.PublicationFormat extends net.sourceforge.fenixedu.domain.DomainObject {
	String format;
}

class net.sourceforge.fenixedu.domain.publication.Attribute extends net.sourceforge.fenixedu.domain.DomainObject {
	String attributeType;
		
	interface "
	public java.util.List<IPublicationType> getPublicationTypes();
	"
}

class net.sourceforge.fenixedu.domain.publication.PublicationSubtype extends net.sourceforge.fenixedu.domain.DomainObject {
	String subtype;
	Integer keyPublicationType;
}	

class net.sourceforge.fenixedu.domain.publication.PublicationTypeAttribute extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyPublicationType;
    Integer keyAttribute;
    Boolean required;
}


class net.sourceforge.fenixedu.domain.Tutor extends net.sourceforge.fenixedu.domain.DomainObject {
    Integer teacherKey;
    Integer studentKey;
}


class net.sourceforge.fenixedu.domain.WebSite extends net.sourceforge.fenixedu.domain.DomainObject {
    String ojbConcreteClass;
    String style;
    String mail;
    String name;
}


    class net.sourceforge.fenixedu.domain.SiteIST extends net.sourceforge.fenixedu.domain.WebSite {
    }


class net.sourceforge.fenixedu.domain.WebSiteItem extends net.sourceforge.fenixedu.domain.DomainObject {
    String authorName;
    Date onlineEndDay;
    String title;
    Date itemBeginDay;
    Integer keyWebSiteSection;
    String keywords;
    Date onlineBeginDay;
    Date itemEndDay;
    Boolean published;
    String excerpt;
    String authorEmail;
    String mainEntryText;
    Integer keyEditor;
    Date creationDate;
}


class net.sourceforge.fenixedu.domain.WebSiteSection extends net.sourceforge.fenixedu.domain.DomainObject {
    Integer keyWebSite;
    String whatToSort;
    String ftpName;
    Integer size;
    Integer excerptSize;
    String name;
    String sortingOrder;
}

class net.sourceforge.fenixedu.domain.transactions.Transaction extends net.sourceforge.fenixedu.domain.DomainObject {
	Double value;
	String remarks;
	Boolean wasInternalBalance;
	Integer keyResponsiblePerson;
	Integer keyPersonAccount;
    PaymentType paymentType;
    TransactionType transactionType;
    Date transactionDate;
}

    class net.sourceforge.fenixedu.domain.transactions.PaymentTransaction extends net.sourceforge.fenixedu.domain.transactions.Transaction {
    	Integer keyGuideEntry;
    }

        class net.sourceforge.fenixedu.domain.transactions.GratuityTransaction extends net.sourceforge.fenixedu.domain.transactions.PaymentTransaction {
            Integer keyGratuitySituation;
        }

        class net.sourceforge.fenixedu.domain.transactions.SmsTransaction extends net.sourceforge.fenixedu.domain.transactions.PaymentTransaction {
        }

        class net.sourceforge.fenixedu.domain.transactions.InsuranceTransaction extends net.sourceforge.fenixedu.domain.transactions.PaymentTransaction {
            Integer keyExecutionYear;
            Integer keyStudent;
        }
        
    class net.sourceforge.fenixedu.domain.transactions.ReimbursementTransaction extends net.sourceforge.fenixedu.domain.transactions.Transaction {
    	Integer keyReimbursementGuideEntry;
    }

    
class net.sourceforge.fenixedu.domain.WorkLocation extends net.sourceforge.fenixedu.domain.DomainObject {
	String name;
}




/*
 * Relations definitions
 * 
 */

relation AnswerExportProposal {
	net.sourceforge.fenixedu.domain.GroupPropertiesExecutionCourse playsRole groupPropertiesExecutionCourseReceiver {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Person playsRole receiverPerson;
}


relation AttendBelongsToAttendsSet {
	net.sourceforge.fenixedu.domain.AttendInAttendsSet playsRole attendInAttendsSet {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Attends playsRole attend;
}


relation AttendsEnrolment {
	net.sourceforge.fenixedu.domain.Attends playsRole attends {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Enrolment playsRole enrolment;
}


relation AttendsSetHasAttend {
	net.sourceforge.fenixedu.domain.AttendInAttendsSet playsRole attendInAttendsSet {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.AttendsSet playsRole attendsSet;
}


relation AttendsStudent {
	net.sourceforge.fenixedu.domain.Attends playsRole associatedAttends {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Student playsRole aluno;
}


relation BelongsTo {
	net.sourceforge.fenixedu.domain.GroupPropertiesExecutionCourse playsRole groupPropertiesExecutionCourse {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.GroupProperties playsRole groupProperties;
}

relation BranchCurricularCourseGroup {
    net.sourceforge.fenixedu.domain.Branch playsRole branch;

    net.sourceforge.fenixedu.domain.CurricularCourseGroup playsRole curricularCourseGroups {
        multiplicity *;
    }
}

relation BranchCurricularCourseScope {
    net.sourceforge.fenixedu.domain.Branch playsRole branch;
    
    net.sourceforge.fenixedu.domain.CurricularCourseScope playsRole scopes {
        multiplicity *;
    }
}


relation BuildingRoom {
	net.sourceforge.fenixedu.domain.Room playsRole rooms {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Building playsRole building;
}


relation CandidacyCaseStudyChoice {
    net.sourceforge.fenixedu.domain.Seminaries.Candidacy playsRole candidacy;
    net.sourceforge.fenixedu.domain.Seminaries.CaseStudyChoice playsRole caseStudyChoices {
        multiplicity *;
    }
}


relation CandidacyCurricularCourse {
    net.sourceforge.fenixedu.domain.Seminaries.Candidacy playsRole associatedCandidancies {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.CurricularCourse playsRole curricularCourse;
}


relation CandidacyModality {
    net.sourceforge.fenixedu.domain.Seminaries.Candidacy playsRole associatedModalities {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.Seminaries.Modality playsRole modality;
}


relation CandidacyStudent {
    net.sourceforge.fenixedu.domain.Seminaries.Candidacy playsRole associatedCandidancies {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.Student playsRole student;
}

relation CandidateEnrolmentCurricularCourse {
	net.sourceforge.fenixedu.domain.CandidateEnrolment playsRole candidateEnrolments {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.CurricularCourse playsRole curricularCourse;
}

relation CandidateEnrolmentMasterDegreeCandidate {
	net.sourceforge.fenixedu.domain.CandidateEnrolment playsRole candidateEnrolments {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.MasterDegreeCandidate playsRole masterDegreeCandidate;
}

relation CandidateSituationMasterDegreeCandidate {
	net.sourceforge.fenixedu.domain.CandidateSituation playsRole situations {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.MasterDegreeCandidate playsRole masterDegreeCandidate;
}

relation CareerTeacher {
    net.sourceforge.fenixedu.domain.teacher.Career playsRole associatedCareers {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.Teacher playsRole teacher;
}


relation CaseStudyCaseStudyChoice {
    net.sourceforge.fenixedu.domain.Seminaries.CaseStudy playsRole caseStudy;
    net.sourceforge.fenixedu.domain.Seminaries.CaseStudyChoice playsRole seminaryCandidacies {
        multiplicity *;
    }
}

relation CoordinatorTeacher {
	net.sourceforge.fenixedu.domain.Coordinator playsRole coordinators {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Teacher playsRole teacher;
}

relation CourseEquivalencyTheme {
    net.sourceforge.fenixedu.domain.Seminaries.CourseEquivalency playsRole courseEquivalencies {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.Seminaries.Theme playsRole themes {
        multiplicity *;
    }
}


relation CurricularCourseCourseEquivalency {
    net.sourceforge.fenixedu.domain.Seminaries.CourseEquivalency playsRole courseEquivalencies {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.CurricularCourse playsRole curricularCourse;
}


relation CurricularCourseCurricularCourseEquivalence {
	net.sourceforge.fenixedu.domain.CurricularCourseEquivalence playsRole curricularCourseEquivalences {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.CurricularCourse playsRole equivalentCurricularCourse;
}


relation NonAffiliatedTeacherExecutionCourse {
    net.sourceforge.fenixedu.domain.NonAffiliatedTeacher playsRole nonAffiliatedTeachers {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.ExecutionCourse playsRole executionCourses {
        multiplicity *;
    }
}


relation NonTeacherEmployeeEmployee {
    net.sourceforge.fenixedu.domain.NonTeacherEmployee playsRole nonTeacherEmployees {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.Employee playsRole funcionario;
}


relation OldCurricularCourseCurricularCourseEquivalence {
	net.sourceforge.fenixedu.domain.CurricularCourseEquivalence playsRole oldCurricularCourseEquivalences {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.CurricularCourse playsRole oldCurricularCourse;
}


relation OrientationTeacher {
    net.sourceforge.fenixedu.domain.teacher.Orientation playsRole associatedOrientations {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.Teacher playsRole teacher;
}


relation OtherTypeCreditLineExecutionPeriod {
    net.sourceforge.fenixedu.domain.credits.OtherTypeCreditLine playsRole associatedOtherTypeCreditLines {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.ExecutionPeriod playsRole executionPeriod;
}


relation CurricularCourseCurricularCourseGroup {
	net.sourceforge.fenixedu.domain.CurricularCourseGroup playsRole curricularCourseGroups {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.CurricularCourse playsRole curricularCourses {
		multiplicity *;
	}
}

relation CurricularCourseCurricularCourseScope {
	net.sourceforge.fenixedu.domain.CurricularCourse playsRole curricularCourse;
	net.sourceforge.fenixedu.domain.CurricularCourseScope playsRole scopes {
		multiplicity *;
	}
}


relation CurricularCourseCurriculum {
	net.sourceforge.fenixedu.domain.Curriculum playsRole associatedCurriculums {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.CurricularCourse playsRole curricularCourse;
}


relation CurricularCourseCompetenceCourse {
	net.sourceforge.fenixedu.domain.CurricularCourse playsRole associatedCurricularCourses {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.CompetenceCourse playsRole competenceCourse;
}

relation CurricularCourseEnrolment {
	net.sourceforge.fenixedu.domain.Enrolment playsRole enrolments {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.CurricularCourse playsRole curricularCourse;
}

relation CurricularCourseEnrolmentLog {
	net.sourceforge.fenixedu.domain.log.EnrolmentLog playsRole enrolmentLogs {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.CurricularCourse playsRole curricularCourse;
}

relation CurricularCourseExecutionCourse {
	net.sourceforge.fenixedu.domain.CurricularCourse playsRole associatedCurricularCourses {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.ExecutionCourse playsRole associatedExecutionCourses {
		multiplicity *;
	}
}


relation CurricularCourseHistoric {
	net.sourceforge.fenixedu.domain.gesdis.CourseHistoric playsRole courseHistoric;
	net.sourceforge.fenixedu.domain.CurricularCourse playsRole curricularCourse;
}


relation CurricularCourseNotNeedToEnrollInCurricularCourse {
	net.sourceforge.fenixedu.domain.degree.enrollment.NotNeedToEnrollInCurricularCourse playsRole notNeedToEnrollInCurricularCourses {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.CurricularCourse playsRole curricularCourse;
}

relation CurricularCoursePrecedence {
	net.sourceforge.fenixedu.domain.precedences.Precedence playsRole precedences {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.CurricularCourse playsRole curricularCourse;
}

relation CurricularCourseRestrictionByCurricularCourse {
	net.sourceforge.fenixedu.domain.precedences.RestrictionByCurricularCourse playsRole restrictionsByCurricularCourse {
	    multiplicity *;
	}
 
	net.sourceforge.fenixedu.domain.CurricularCourse playsRole precedentCurricularCourse;
}

relation CurricularCourseScientificArea {
	net.sourceforge.fenixedu.domain.CurricularCourse playsRole associatedCurricularCourses {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.ScientificArea playsRole scientificArea;
}

relation CurricularCourseGroupScientificArea {
    net.sourceforge.fenixedu.domain.CurricularCourseGroup playsRole curricularCourseGroups {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.ScientificArea playsRole scientificAreas {
        multiplicity *;
    }
}

relation CurricularCourseScopeCurricularSemester {
    net.sourceforge.fenixedu.domain.CurricularCourseScope playsRole scopes {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.CurricularSemester playsRole curricularSemester;
}

relation CurricularCourseStudentReport {
	net.sourceforge.fenixedu.domain.gesdis.StudentCourseReport playsRole studentCourseReport {
		multiplicity 1;
	}
	net.sourceforge.fenixedu.domain.CurricularCourse playsRole curricularCourse;
}


relation CurricularCourseUniversity {
	net.sourceforge.fenixedu.domain.CurricularCourse playsRole associatedCurricularCourses {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.University playsRole university;
}

relation CurricularSemesterCurricularYear {
    net.sourceforge.fenixedu.domain.CurricularSemester playsRole curricularSemesters {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.CurricularYear playsRole curricularYear;
}

relation CurriculumPerson {
	net.sourceforge.fenixedu.domain.Curriculum playsRole associatedAlteredCurriculums {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Person playsRole personWhoAltered;
}

relation DegreeCurricularPlanBranch {
	net.sourceforge.fenixedu.domain.DegreeCurricularPlan playsRole degreeCurricularPlan;

	net.sourceforge.fenixedu.domain.Branch playsRole areas {
		multiplicity *;
	}
}

relation DegreeCurricularPlanCurricularCourseEquivalence {
	net.sourceforge.fenixedu.domain.DegreeCurricularPlan playsRole degreeCurricularPlan;

	net.sourceforge.fenixedu.domain.CurricularCourseEquivalence playsRole curricularCourseEquivalences {
		multiplicity *;
	}
}

relation DegreeCurricularPlanEnrolmentPeriod {
	net.sourceforge.fenixedu.domain.EnrolmentPeriod playsRole enrolmentPeriods {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.DegreeCurricularPlan playsRole degreeCurricularPlan;
}

relation DegreeCurricularPlanCurricularCourse {
	net.sourceforge.fenixedu.domain.CurricularCourse playsRole curricularCourses {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.DegreeCurricularPlan playsRole degreeCurricularPlan;
}


relation DegreeDegreeCurricularPlan {
	net.sourceforge.fenixedu.domain.DegreeCurricularPlan playsRole degreeCurricularPlans {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Degree playsRole degree;
}


relation DegreeDegreeInfo {
	net.sourceforge.fenixedu.domain.Degree playsRole degree;
	net.sourceforge.fenixedu.domain.DegreeInfo playsRole degreeInfos {
		multiplicity *;
	}
}


relation DelegateDegree {
	net.sourceforge.fenixedu.domain.student.Delegate playsRole delegate {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Degree playsRole degree;
}


relation DelegateExecutionYear {
	net.sourceforge.fenixedu.domain.student.Delegate playsRole delegate {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.ExecutionYear playsRole executionYear;
}


relation DelegateStudent {
	net.sourceforge.fenixedu.domain.student.Delegate playsRole delegate {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Student playsRole student;
}


relation DepartmentCompetenceCourse {
	net.sourceforge.fenixedu.domain.CompetenceCourse playsRole competenceCourses {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Department playsRole department;
}


relation DislocatedStudentCountry {
	net.sourceforge.fenixedu.domain.DislocatedStudent playsRole concluedStudents {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Country playsRole country;
}

relation DislocatedStudentDislocatedCountry {
	net.sourceforge.fenixedu.domain.DislocatedStudent playsRole dislocatedStudents {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Country playsRole dislocatedCountry;
}

relation DislocatedStudentDistrict {
	net.sourceforge.fenixedu.domain.DislocatedStudent playsRole dislocatedStudents {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.District playsRole district;
}

relation DislocatedStudentStudent {
	net.sourceforge.fenixedu.domain.DislocatedStudent playsRole dislocatedStudent;
	net.sourceforge.fenixedu.domain.Student playsRole student;
}

relation DistributedTestAdvisories {
    net.sourceforge.fenixedu.domain.onlineTests.DistributedTestAdvisory playsRole distributedTestAdvisories {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.onlineTests.DistributedTest playsRole distributedTest;
}


relation DistributedTestScope {
    net.sourceforge.fenixedu.domain.onlineTests.DistributedTest playsRole distributedTests {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.onlineTests.TestScope playsRole testScope;
}


relation DistributedTestQuestions {
    net.sourceforge.fenixedu.domain.onlineTests.DistributedTest playsRole distributedTest;
    net.sourceforge.fenixedu.domain.onlineTests.StudentTestQuestion playsRole distributedTestQuestions {
        multiplicity *;
    }
}

relation AdvisoryFromDistributedTests {
    net.sourceforge.fenixedu.domain.Advisory playsRole advisory;
    net.sourceforge.fenixedu.domain.onlineTests.DistributedTestAdvisory playsRole distributedTestsAdvisories {
        multiplicity *;
    }
}


relation EmployeeHistoricEmployee {
    net.sourceforge.fenixedu.domain.EmployeeHistoric playsRole historicList {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.Employee playsRole employee;
}


relation EmployeeHistoricMailingCostCenter {
    net.sourceforge.fenixedu.domain.EmployeeHistoric playsRole mailingCostCenterAssociatedEmployeeHistorics {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.CostCenter playsRole mailingCostCenter;
}


relation EmployeeHistoricResponsibleEmployee {
    net.sourceforge.fenixedu.domain.EmployeeHistoric playsRole responsibleEmployeeAssociatedEmployeeHistorics {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.Employee playsRole responsableEmployee;
}


relation EmployeeHistoricSalaryCostCenter {
    net.sourceforge.fenixedu.domain.EmployeeHistoric playsRole salaryCostCenterAssociatedEmployeeHistorics {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.CostCenter playsRole salaryCostCenter;
}


relation EmployeeHistoricStatusAssiduidade {
    net.sourceforge.fenixedu.domain.EmployeeHistoric playsRole associatedEmployeeHistorics {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.StatusAssiduidade playsRole status;
}


relation EmployeeHistoricWorkingPlaceCostCenter {
    net.sourceforge.fenixedu.domain.EmployeeHistoric playsRole workingPlaceCostCenterAssociatedEmployeeHistorics {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.CostCenter playsRole workingPlaceCostCenter;
}


relation EmployeeNotTeacherEmployee {
    net.sourceforge.fenixedu.domain.EmployeeNotTeacher playsRole employeesNotTeacher {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.Employee playsRole employee;
}


relation EmployeePerson {
	net.sourceforge.fenixedu.domain.Employee playsRole employee;
	net.sourceforge.fenixedu.domain.Person playsRole person;
}


relation EnrolmentCreditsInAnySecundaryArea {
    net.sourceforge.fenixedu.domain.CreditsInAnySecundaryArea playsRole creditsInAnySecundaryAreas {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.Enrolment playsRole enrolment;
}


relation EnrolmentCreditsInScientificArea {
	net.sourceforge.fenixedu.domain.CreditsInScientificArea playsRole creditsInScientificAreas {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Enrolment playsRole enrolment;
}

relation EnrolmentEnrolmentEquivalence {
	net.sourceforge.fenixedu.domain.EnrolmentEquivalence playsRole enrolmentEquivalences {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Enrolment playsRole enrolment;
}

relation EnrolmentEnrolmentEvaluation {
	net.sourceforge.fenixedu.domain.Enrolment playsRole enrolment;

	net.sourceforge.fenixedu.domain.EnrolmentEvaluation playsRole evaluations {
		multiplicity *;
	}
}

relation EnrolmentEquivalenceEquivalentEnrolmentForEnrolmentEquivalence {
	net.sourceforge.fenixedu.domain.EnrolmentEquivalence playsRole enrolmentEquivalence;

	net.sourceforge.fenixedu.domain.EquivalentEnrolmentForEnrolmentEquivalence playsRole equivalenceRestrictions {
		multiplicity *;
	}
}

relation EnrolmentEquivalentEnrolmentForEnrolmentEquivalence {
	net.sourceforge.fenixedu.domain.EquivalentEnrolmentForEnrolmentEquivalence playsRole equivalentEnrolmentForEnrolmentEquivalences {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Enrolment playsRole equivalentEnrolment;
}

relation EnrolmentEvaluationEmployee {
	net.sourceforge.fenixedu.domain.EnrolmentEvaluation playsRole enrolmentEvaluations {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Employee playsRole employee;
}

relation EnrolmentEvaluationPerson {
	net.sourceforge.fenixedu.domain.EnrolmentEvaluation playsRole enrolmentEvaluations {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Person playsRole personResponsibleForGrade;
}

relation EnrolmentExecutionPeriod {
	net.sourceforge.fenixedu.domain.Enrolment playsRole enrolments {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.ExecutionPeriod playsRole executionPeriod;
}

relation EnrolmentPeriodExecutionPeriod {
	net.sourceforge.fenixedu.domain.EnrolmentPeriod playsRole enrolmentPeriod {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.ExecutionPeriod playsRole executionPeriod;
}

relation EvaluationExecutionCourse {
	net.sourceforge.fenixedu.domain.ExecutionCourse playsRole associatedExecutionCourses {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Evaluation playsRole associatedEvaluations {
		multiplicity *;
	}
}

relation ExamStudentRoomExam {
	net.sourceforge.fenixedu.domain.ExamStudentRoom playsRole examStudentRooms {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Exam playsRole exam;
}

relation ExamStudentRoomRoom {
	net.sourceforge.fenixedu.domain.ExamStudentRoom playsRole examStudentRooms {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Room playsRole room;
}

relation ExamStudentRoomStudent {
	net.sourceforge.fenixedu.domain.ExamStudentRoom playsRole examStudentRooms {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Student playsRole student;
}

relation ExecutionCourseAttends {
	net.sourceforge.fenixedu.domain.ExecutionCourse playsRole disciplinaExecucao;
	net.sourceforge.fenixedu.domain.Attends playsRole attends {
		multiplicity *;
	}
}


relation ExecutionCourseBibliographicReference {
	net.sourceforge.fenixedu.domain.BibliographicReference playsRole associatedBibliographicReferences {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.ExecutionCourse playsRole executionCourse;
}


relation ExecutionCourseEvaluationMethod {
	net.sourceforge.fenixedu.domain.EvaluationMethod playsRole evaluationMethod;
	net.sourceforge.fenixedu.domain.ExecutionCourse playsRole executionCourse;
}


relation ExecutionCourseExecutionCourseProperty {
	net.sourceforge.fenixedu.domain.ExecutionCourse playsRole executionCourse;
	net.sourceforge.fenixedu.domain.classProperties.ExecutionCourseProperty playsRole executionCourseProperties {
		multiplicity *;
	}
}


relation ExecutionCourseProfessorship {
	net.sourceforge.fenixedu.domain.ExecutionCourse playsRole executionCourse;
	net.sourceforge.fenixedu.domain.Professorship playsRole professorships {
		multiplicity *;
	}
}


relation ExecutionCourseReport {
	net.sourceforge.fenixedu.domain.gesdis.CourseReport playsRole courseReport {
		multiplicity 1;
	}
	net.sourceforge.fenixedu.domain.ExecutionCourse playsRole executionCourse;
}

relation ExecutionCourseSite {
	net.sourceforge.fenixedu.domain.Site playsRole site {
		multiplicity 1;
	}
	net.sourceforge.fenixedu.domain.ExecutionCourse playsRole executionCourse;
}


relation ExecutionCourseSummary {
	net.sourceforge.fenixedu.domain.Summary playsRole associatedSummaries {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.ExecutionCourse playsRole executionCourse;
}

relation ExecutionDegreeCampus {
	net.sourceforge.fenixedu.domain.ExecutionDegree playsRole executionDegrees {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Campus playsRole campus;
}

relation ExecutionDegreeCoordinator {
	net.sourceforge.fenixedu.domain.ExecutionDegree playsRole executionDegree;
	net.sourceforge.fenixedu.domain.Coordinator playsRole coordinatorsList {
		multiplicity *;
	}
}

relation ExecutionDegreeDegreeCurricularPlan {
	net.sourceforge.fenixedu.domain.ExecutionDegree playsRole executionDegrees {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.DegreeCurricularPlan playsRole degreeCurricularPlan;
}

relation ExecutionDegreeExecutionYear {
	net.sourceforge.fenixedu.domain.ExecutionDegree playsRole executionDegrees {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.ExecutionYear playsRole executionYear;
}

relation ExecutionDegreePeriodExamsFirstSemester {
	net.sourceforge.fenixedu.domain.ExecutionDegree playsRole executionDegreesForExamsFirstSemester {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Period playsRole periodExamsFirstSemester;
}

relation ExecutionDegreePeriodExamsSecondSemester {
	net.sourceforge.fenixedu.domain.ExecutionDegree playsRole executionDegreesForExamsSecondSemester {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Period playsRole periodExamsSecondSemester;
}

relation ExecutionDegreePeriodLessonsFirstSemester {
	net.sourceforge.fenixedu.domain.ExecutionDegree playsRole executionDegreesForLessonsFirstSemester {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Period playsRole periodLessonsFirstSemester;
}

relation ExecutionDegreePeriodLessonsSecondSemester {
	net.sourceforge.fenixedu.domain.ExecutionDegree playsRole executionDegreesForLessonsSecondSemester {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Period playsRole periodLessonsSecondSemester;
}

relation ExecutionPeriodExecutionCourse {
	net.sourceforge.fenixedu.domain.ExecutionCourse playsRole associatedExecutionCourses {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.ExecutionPeriod playsRole executionPeriod;
}


relation ExecutionPeriodExecutionPeriod {
	net.sourceforge.fenixedu.domain.ExecutionPeriod playsRole nextExecutionPeriod;
	net.sourceforge.fenixedu.domain.ExecutionPeriod playsRole previousExecutionPeriod;
}


relation ExecutionPeriodExecutionYear {
	net.sourceforge.fenixedu.domain.ExecutionPeriod playsRole executionPeriods {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.ExecutionYear playsRole executionYear;
}


relation ExecutionPeriodSchoolClass {
	net.sourceforge.fenixedu.domain.ExecutionPeriod playsRole executionPeriod;
	net.sourceforge.fenixedu.domain.SchoolClass playsRole schoolClasses {
		multiplicity *;
	}
}


relation ExternalActivityTeacher {
    net.sourceforge.fenixedu.domain.teacher.ExternalActivity playsRole externalActivities {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.Teacher playsRole teacher;
}

relation ExternalPersonPerson {
	net.sourceforge.fenixedu.domain.ExternalPerson playsRole externalPerson;
	net.sourceforge.fenixedu.domain.Person playsRole person;
}

relation ExternalPersonWorkLocation {
	net.sourceforge.fenixedu.domain.ExternalPerson playsRole externalPersons {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.WorkLocation playsRole workLocation;
}


relation GaugingTestResultStudent {
    net.sourceforge.fenixedu.domain.gaugingTests.physics.GaugingTestResult playsRole associatedGaugingTestResult;
    net.sourceforge.fenixedu.domain.Student playsRole student;
}


relation GoalExecutionCourse {
	net.sourceforge.fenixedu.domain.GroupPropertiesExecutionCourse playsRole groupPropertiesExecutionCourse {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.ExecutionCourse playsRole executionCourse;
}


relation GrantContractGrantCostCenter {
	net.sourceforge.fenixedu.domain.grant.contract.GrantContract playsRole associatedGrantContracts {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.grant.contract.GrantCostCenter playsRole grantCostCenter;
}


relation GrantContractGrantType {
	net.sourceforge.fenixedu.domain.grant.contract.GrantContract playsRole associatedGrantContracts {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.grant.contract.GrantType playsRole grantType;
}


relation GrantContractMovementGrantContract {
	net.sourceforge.fenixedu.domain.grant.contract.GrantContractMovement playsRole associatedGrantContractMovements {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.grant.contract.GrantContract playsRole grantContract;
}


relation GrantContractRegimeGrantContract {
	net.sourceforge.fenixedu.domain.grant.contract.GrantContractRegime playsRole contractRegimes {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.grant.contract.GrantContract playsRole grantContract;
}


relation GrantContractRegimeGrantCostCenter {
	net.sourceforge.fenixedu.domain.grant.contract.GrantContractRegime playsRole associatedGrantContractRegimes {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.grant.contract.GrantCostCenter playsRole grantCostCenter;
}


relation GrantContractRegimeTeacher {
	net.sourceforge.fenixedu.domain.grant.contract.GrantContractRegime playsRole associatedGrantContractRegimes {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Teacher playsRole teacher;
}


relation GrantInsuranceGrantContract {
	net.sourceforge.fenixedu.domain.grant.contract.GrantInsurance playsRole associatedGrantInsurances {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.grant.contract.GrantContract playsRole grantContract;
}


relation GrantInsuranceGrantPaymentEntity {
	net.sourceforge.fenixedu.domain.grant.contract.GrantInsurance playsRole associatedGrantInsurances {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.grant.contract.GrantPaymentEntity playsRole grantPaymentEntity;
}


relation GrantOrientationTeacherGrantContract {
	net.sourceforge.fenixedu.domain.grant.contract.GrantOrientationTeacher playsRole grantOrientationTeacher;
	net.sourceforge.fenixedu.domain.grant.contract.GrantContract playsRole grantContract;
}


relation GrantOrientationTeacherTeacher {
	net.sourceforge.fenixedu.domain.grant.contract.GrantOrientationTeacher playsRole associatedGrantOrientationTeachers {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Teacher playsRole orientationTeacher;
}


relation GrantOwnerGrantContract {
	net.sourceforge.fenixedu.domain.grant.owner.GrantOwner playsRole grantOwner;
	net.sourceforge.fenixedu.domain.grant.contract.GrantContract playsRole grantContracts {
		multiplicity *;
	}
}


relation GrantOwnerPerson {
	net.sourceforge.fenixedu.domain.grant.owner.GrantOwner playsRole grantOwner;
	net.sourceforge.fenixedu.domain.Person playsRole person;
}


relation GrantPartGrantPaymentEntity {
	net.sourceforge.fenixedu.domain.grant.contract.GrantPart playsRole associatedGrantParts {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.grant.contract.GrantPaymentEntity playsRole grantPaymentEntity;
}


relation GrantPartGrantSubsidy {
	net.sourceforge.fenixedu.domain.grant.contract.GrantPart playsRole associatedGrantParts {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.grant.contract.GrantSubsidy playsRole grantSubsidy;
}


relation GrantPartTeacher {
	net.sourceforge.fenixedu.domain.grant.contract.GrantPart playsRole associatedGrantParts {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Teacher playsRole responsibleTeacher;
}


relation GrantPaymentEntityTeacher {
	net.sourceforge.fenixedu.domain.grant.contract.GrantPaymentEntity playsRole associatedGrantPaymentEntities {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Teacher playsRole responsibleTeacher;
}


relation GrantProjectGrantCostCenter {
	net.sourceforge.fenixedu.domain.grant.contract.GrantProject playsRole associatedGrantProjects {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.grant.contract.GrantCostCenter playsRole grantCostCenter;
}


relation GrantSubsidyGrantContract {
	net.sourceforge.fenixedu.domain.grant.contract.GrantSubsidy playsRole associatedGrantSubsidies {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.grant.contract.GrantContract playsRole grantContract;
}

relation GratuitySituationEmployee {
	net.sourceforge.fenixedu.domain.GratuitySituation playsRole gratuitySituations {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Employee playsRole employee;
}

relation GratuitySituationGratuityValues {
	net.sourceforge.fenixedu.domain.GratuitySituation playsRole gratuitySituations {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.GratuityValues playsRole gratuityValues;
}

relation GratuitySituationStudentCurricularPlan {
    net.sourceforge.fenixedu.domain.GratuitySituation playsRole gratuitySituations {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.StudentCurricularPlan playsRole studentCurricularPlan;
}

relation GratuityTransactionGratuitySituation {
	net.sourceforge.fenixedu.domain.transactions.GratuityTransaction playsRole transactionList {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.GratuitySituation playsRole gratuitySituation;
}

relation GratuityValuesEmployee {
	net.sourceforge.fenixedu.domain.GratuityValues playsRole gratuityValues {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Employee playsRole employee;
}

relation GratuityValuesExecutionDegree {
	net.sourceforge.fenixedu.domain.GratuityValues playsRole gratuityValues;
	net.sourceforge.fenixedu.domain.ExecutionDegree playsRole executionDegree;
}

relation GroupProposal {
	net.sourceforge.fenixedu.domain.finalDegreeWork.Proposal playsRole proposalAttributed;
	net.sourceforge.fenixedu.domain.finalDegreeWork.Group playsRole groupAttributed;
}


relation GroupProposalProposal {
	net.sourceforge.fenixedu.domain.finalDegreeWork.Proposal playsRole finalDegreeWorkProposal;
	net.sourceforge.fenixedu.domain.finalDegreeWork.GroupProposal playsRole groupProposals {
		multiplicity *;
	}
}


relation GroupProposalByTeacher {
	net.sourceforge.fenixedu.domain.finalDegreeWork.Proposal playsRole proposalAttributedByTeacher;
	net.sourceforge.fenixedu.domain.finalDegreeWork.Group playsRole groupAttributedByTeacher;
}


relation GroupExecutionDegree {
	net.sourceforge.fenixedu.domain.finalDegreeWork.Group playsRole associatedFinalDegreeWorkGroups {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.ExecutionDegree playsRole executionDegree;
}


relation GroupGroupStudent {
	net.sourceforge.fenixedu.domain.finalDegreeWork.Group playsRole finalDegreeDegreeWorkGroup;
	net.sourceforge.fenixedu.domain.finalDegreeWork.GroupStudent playsRole groupStudents {
		multiplicity *;
	}
}


relation GroupGroupProposal {
	net.sourceforge.fenixedu.domain.finalDegreeWork.Group playsRole finalDegreeDegreeWorkGroup;
	net.sourceforge.fenixedu.domain.finalDegreeWork.GroupProposal playsRole groupProposals {
		multiplicity *;
	}
}


relation GroupStudentProposal {
	net.sourceforge.fenixedu.domain.finalDegreeWork.GroupStudent playsRole associatedGroupStudents {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.finalDegreeWork.Proposal playsRole finalDegreeWorkProposalConfirmation;
}


relation GroupStudentStudent {
	net.sourceforge.fenixedu.domain.finalDegreeWork.GroupStudent playsRole associatedGroupStudents {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Student playsRole student;
}


relation GroupPropertiesAttendsSet {
	net.sourceforge.fenixedu.domain.AttendsSet playsRole attendsSet;
	net.sourceforge.fenixedu.domain.GroupProperties playsRole groupProperties;
}

relation GuideContributor {
	net.sourceforge.fenixedu.domain.Guide playsRole guides {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Contributor playsRole contributor;
}

relation GuideEntryGuide {
	net.sourceforge.fenixedu.domain.GuideEntry playsRole guideEntries {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Guide playsRole guide;
}

relation GuideExecutionDegree {
	net.sourceforge.fenixedu.domain.Guide playsRole guides {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.ExecutionDegree playsRole executionDegree;
}

relation GuidePerson {
	net.sourceforge.fenixedu.domain.Guide playsRole guides {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Person playsRole person;
}

relation GuideSituationGuide {
	net.sourceforge.fenixedu.domain.GuideSituation playsRole guideSituations {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Guide playsRole guide;
}


relation InquiriesCourseExecutionCourse {
    net.sourceforge.fenixedu.domain.inquiries.InquiriesCourse playsRole associatedInquiriesCourses {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.ExecutionCourse playsRole executionCourse;
}


relation InquiriesCourseExecutionDegreeCourse {
    net.sourceforge.fenixedu.domain.inquiries.InquiriesCourse playsRole associatedInquiriesCoursesByCourse {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.ExecutionDegree playsRole executionDegreeCourse;
}


relation InquiriesCourseExecutionDegreeStudent {
    net.sourceforge.fenixedu.domain.inquiries.InquiriesCourse playsRole associatedInquiriesCoursesByStudent {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.ExecutionDegree playsRole executionDegreeStudent;
}


relation InquiriesCourseExecutionPeriod {
    net.sourceforge.fenixedu.domain.inquiries.InquiriesCourse playsRole associatedInquiriesCourses {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.ExecutionPeriod playsRole executionPeriod;
}


relation InquiriesCourseSchoolClass {
    net.sourceforge.fenixedu.domain.inquiries.InquiriesCourse playsRole associatedInquiriesCourses {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.SchoolClass playsRole studentSchoolClass;
}


relation InquiriesRegistryExecutionCourse {
	net.sourceforge.fenixedu.domain.inquiries.InquiriesRegistry playsRole inquiriesRegistries {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.ExecutionCourse playsRole executionCourse;
}


relation InquiriesRegistryExecutionDegreeCourse {
	net.sourceforge.fenixedu.domain.inquiries.InquiriesRegistry playsRole inquiriesRegistriesCourse {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.ExecutionDegree playsRole executionDegreeCourse;
}


relation InquiriesRegistryExecutionDegreeStudent {
	net.sourceforge.fenixedu.domain.inquiries.InquiriesRegistry playsRole inquiriesRegistriesStudent {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.ExecutionDegree playsRole executionDegreeStudent;
}


relation InquiriesRegistryExecutionPeriod {
	net.sourceforge.fenixedu.domain.inquiries.InquiriesRegistry playsRole inquiriesRegistries {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.ExecutionPeriod playsRole executionPeriod;
}


relation InquiriesRegistryStudent {
	net.sourceforge.fenixedu.domain.inquiries.InquiriesRegistry playsRole inquiriesRegistries {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Student playsRole student;
}


relation InquiriesRoomExecutionCourse {
    net.sourceforge.fenixedu.domain.inquiries.InquiriesRoom playsRole inquiriesRoom {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.ExecutionCourse playsRole executionCourse;
}

relation InquiriesRoomExecutionDegreeCourse {
    net.sourceforge.fenixedu.domain.inquiries.InquiriesRoom playsRole inquiriesRoomCourse {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.ExecutionDegree playsRole executionDegreeCourse;
}

relation InquiriesRoomExecutionDegreeStudent {
    net.sourceforge.fenixedu.domain.inquiries.InquiriesRoom playsRole inquiriesRoomStudent {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.ExecutionDegree playsRole executionDegreeStudent;
}

relation InquiriesRoomExecutionPeriod {
    net.sourceforge.fenixedu.domain.inquiries.InquiriesRoom playsRole inquiriesRoom {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.ExecutionPeriod playsRole executionPeriod;
}

relation InquiriesRoomInquiriesCourse {
    net.sourceforge.fenixedu.domain.inquiries.InquiriesRoom playsRole inquiriesRoom {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.inquiries.InquiriesCourse playsRole inquiriesCourse;
}

relation InquiriesRoomDomainRoom {
    net.sourceforge.fenixedu.domain.inquiries.InquiriesRoom playsRole inquiriesRoom {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.Room playsRole room;
}


relation InquiriesTeacherExecutionCourse {
    net.sourceforge.fenixedu.domain.inquiries.InquiriesTeacher playsRole inquiriesTeacher {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.ExecutionCourse playsRole executionCourse;
}

relation InquiriesTeacherExecutionDegreeCourse {
    net.sourceforge.fenixedu.domain.inquiries.InquiriesTeacher playsRole inquiriesTeacherCourse {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.ExecutionDegree playsRole executionDegreeCourse;
}

relation InquiriesTeacherExecutionDegreeStudent {
    net.sourceforge.fenixedu.domain.inquiries.InquiriesTeacher playsRole inquiriesTeacherStudent {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.ExecutionDegree playsRole executionDegreeStudent;
}

relation InquiriesTeacherExecutionPeriod {
    net.sourceforge.fenixedu.domain.inquiries.InquiriesTeacher playsRole inquiriesTeacher {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.ExecutionPeriod playsRole executionPeriod;
}

relation InquiriesTeacherInquiriesCourse {
    net.sourceforge.fenixedu.domain.inquiries.InquiriesTeacher playsRole inquiriesTeacher {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.inquiries.InquiriesCourse playsRole inquiriesCourse;
}

relation InquiriesTeacherNonAffiliatedTeacher {
    net.sourceforge.fenixedu.domain.inquiries.InquiriesTeacher playsRole inquiriesTeacher {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.NonAffiliatedTeacher playsRole nonAffiliatedTeacher;
}

relation InquiriesTeacherDomainTeacher {
    net.sourceforge.fenixedu.domain.inquiries.InquiriesTeacher playsRole inquiriesTeacher {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.Teacher playsRole teacher;
}


relation InstitutionNonAffiliatedTeacher {
    net.sourceforge.fenixedu.domain.Institution playsRole institution;
    net.sourceforge.fenixedu.domain.NonAffiliatedTeacher playsRole associatedNonAffiliatedTeachers {
        multiplicity *;
    }
}

relation InsuranceTransactionExecutionYear {
	net.sourceforge.fenixedu.domain.transactions.InsuranceTransaction playsRole insuranceTransactions {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.ExecutionYear playsRole executionYear;
}

relation InsuranceValueExecutionYear {
	net.sourceforge.fenixedu.domain.InsuranceValue playsRole insuranceValue;
	net.sourceforge.fenixedu.domain.ExecutionYear playsRole executionYear;
}

relation InsuranceTransactionStudent {
	net.sourceforge.fenixedu.domain.transactions.InsuranceTransaction playsRole insuranceTransactions {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Student playsRole student;
}

relation LessonExecutionPeriod {
	net.sourceforge.fenixedu.domain.Lesson playsRole lessons {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.ExecutionPeriod playsRole executionPeriod;
}

relation LessonRoomOccupation {
	net.sourceforge.fenixedu.domain.Lesson playsRole lesson;
	
	net.sourceforge.fenixedu.domain.RoomOccupation playsRole roomOccupation;
}

relation LessonShift {
	net.sourceforge.fenixedu.domain.Lesson playsRole associatedLessons {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Shift playsRole shift;
}

relation MarkAttends {
	net.sourceforge.fenixedu.domain.Mark playsRole mark;
	net.sourceforge.fenixedu.domain.Attends playsRole attend;
}

relation MarkEvaluation {
	net.sourceforge.fenixedu.domain.Mark playsRole marks {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Evaluation playsRole evaluation;
}


relation MakeExportProposal {
	net.sourceforge.fenixedu.domain.GroupPropertiesExecutionCourse playsRole groupPropertiesExecutionCourseSender {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Person playsRole senderPerson;
}

relation MasterDegreeCandidateExecutionDegree {
	net.sourceforge.fenixedu.domain.MasterDegreeCandidate playsRole masterDegreeCandidates {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.ExecutionDegree playsRole executionDegree;
}

relation MasterDegreeCandidateGuider {
	net.sourceforge.fenixedu.domain.MasterDegreeCandidate playsRole masterDegreeCandidates {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Teacher playsRole guider;
}

relation MasterDegreeCandidatePerson {
	net.sourceforge.fenixedu.domain.MasterDegreeCandidate playsRole masterDegreeCandidates {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Person playsRole person;
}

relation MasterDegreeProofVersionEmployee {
	net.sourceforge.fenixedu.domain.MasterDegreeProofVersion playsRole masterDegreeProofVersions {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Employee playsRole responsibleEmployee;
}

relation MasterDegreeProofVersionExternalPerson {
	net.sourceforge.fenixedu.domain.MasterDegreeProofVersion playsRole masterDegreeProofsExternalJury {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.ExternalPerson playsRole externalJuries {
		multiplicity *;
	}
}

relation MasterDegreeProofVersionTeacher {
	net.sourceforge.fenixedu.domain.MasterDegreeProofVersion playsRole masterDegreeProofsJury {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Teacher playsRole juries {
		multiplicity *;
	}
}

relation MasterDegreeProofVersionMasterDegreeThesis {
	net.sourceforge.fenixedu.domain.MasterDegreeProofVersion playsRole masterDegreeProofVersions {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.MasterDegreeThesis playsRole masterDegreeThesis;
}

relation MasterDegreeThesisStudentCurricularPlan {
	net.sourceforge.fenixedu.domain.MasterDegreeThesis playsRole masterDegreeThesis;
	net.sourceforge.fenixedu.domain.StudentCurricularPlan playsRole studentCurricularPlan;
}

relation MasterDegreeThesisDataVersionEmployee {
	net.sourceforge.fenixedu.domain.MasterDegreeThesisDataVersion playsRole masterDegreeThesisDataVersions {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Employee playsRole responsibleEmployee;
}

relation MasterDegreeThesisDataVersionExternalGuider {
	net.sourceforge.fenixedu.domain.MasterDegreeThesisDataVersion playsRole masterDegreeThesisExternalGuider {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.ExternalPerson playsRole externalGuiders {
		multiplicity *;
	}
}

relation MasterDegreeThesisDataVersionExternalAssistentGuider {
	net.sourceforge.fenixedu.domain.MasterDegreeThesisDataVersion playsRole masterDegreeThesisExternalAssistentGuider {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.ExternalPerson playsRole externalAssistentGuiders {
		multiplicity *;
	}
}

relation MasterDegreeThesisDataVersionMasterDegreeThesis {
	net.sourceforge.fenixedu.domain.MasterDegreeThesisDataVersion playsRole masterDegreeThesisDataVersions {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.MasterDegreeThesis playsRole masterDegreeThesis;
}

relation MasterDegreeThesisDataVersionTeacher {
	net.sourceforge.fenixedu.domain.MasterDegreeThesisDataVersion playsRole masterDegreeThesisGuider {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Teacher playsRole guiders {
		multiplicity *;
	}
}

relation MasterDegreeThesisDataVersionAssistentTeacher {
	net.sourceforge.fenixedu.domain.MasterDegreeThesisDataVersion playsRole masterDegreeThesisAssistentGuider {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Teacher playsRole assistentGuiders {
		multiplicity *;
	}
}

relation MetadataFromExecutionCourse {
    net.sourceforge.fenixedu.domain.onlineTests.Metadata playsRole metadatas {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.ExecutionCourse playsRole executionCourse;
}

relation ModalityCourseEquivalency {
    net.sourceforge.fenixedu.domain.Seminaries.CourseEquivalency playsRole courseEquivalencies {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.Seminaries.Modality playsRole modality;
}

relation OldInquiriesCoursesResDegree {
	net.sourceforge.fenixedu.domain.inquiries.OldInquiriesCoursesRes playsRole oldInquiriesCoursesRes {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Degree playsRole degree;
}


relation OldInquiriesCoursesResExecutionPeriod {
	net.sourceforge.fenixedu.domain.inquiries.OldInquiriesCoursesRes playsRole oldInquiriesCoursesRes {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.ExecutionPeriod playsRole executionPeriod;
}


relation OldInquiriesSummaryDegree {
	net.sourceforge.fenixedu.domain.inquiries.OldInquiriesSummary playsRole oldInquiriesSummary {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Degree playsRole degree;
}


relation OldInquiriesSummaryExecutionPeriod {
	net.sourceforge.fenixedu.domain.inquiries.OldInquiriesSummary playsRole oldInquiriesSummary {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.ExecutionPeriod playsRole executionPeriod;
}


relation OldInquiriesTeachersResDegree {
	net.sourceforge.fenixedu.domain.inquiries.OldInquiriesTeachersRes playsRole oldInquiriesTeachersRes {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Degree playsRole degree;
}


relation OldInquiriesTeachersResExecutionPeriod {
	net.sourceforge.fenixedu.domain.inquiries.OldInquiriesTeachersRes playsRole oldInquiriesTeachersRes {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.ExecutionPeriod playsRole executionPeriod {
		multiplicity 1;
	}
}


relation OldInquiriesTeachersResTeacher {
	net.sourceforge.fenixedu.domain.inquiries.OldInquiriesTeachersRes playsRole oldInquiriesTeacherRes {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Teacher playsRole teacher;
}

relation OnlineDistributedTest {
    net.sourceforge.fenixedu.domain.onlineTests.OnlineTest playsRole onlineTest {
        multiplicity 1;
    }
    net.sourceforge.fenixedu.domain.onlineTests.DistributedTest playsRole distributedTest;
}

relation OnlineTestExecutionCourse {
    net.sourceforge.fenixedu.domain.onlineTests.OnlineTest playsRole onlineTest {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.ExecutionCourse playsRole associatedExecutionCoursesForOnlineTest {
        multiplicity *;
    }
}

relation ParentFAQSectionChildFAQEntry {
    net.sourceforge.fenixedu.domain.support.FAQEntry playsRole childEntries {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.support.FAQSection playsRole parentSection;
}

relation ParentFAQSectionChildFAQSection {
    net.sourceforge.fenixedu.domain.support.FAQSection playsRole childSections {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.support.FAQSection playsRole parentSection;
}

relation PaymentPhaseGratuityValues {
	net.sourceforge.fenixedu.domain.PaymentPhase playsRole paymentPhaseList {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.GratuityValues playsRole gratuityValues;
}


relation PaymentTransactionGuideEntry {
	net.sourceforge.fenixedu.domain.transactions.PaymentTransaction playsRole paymentTransaction;
	net.sourceforge.fenixedu.domain.GuideEntry playsRole guideEntry;
}


relation PeriodRoomOccupation {
	net.sourceforge.fenixedu.domain.Period playsRole period;
	net.sourceforge.fenixedu.domain.RoomOccupation playsRole roomOccupations {
		multiplicity *;
	}
}

relation PeriodNextPeriod {
    net.sourceforge.fenixedu.domain.Period playsRole previousPeriod;
    net.sourceforge.fenixedu.domain.Period playsRole nextPeriod;
}

relation PersonAccountPerson {
    net.sourceforge.fenixedu.domain.PersonAccount playsRole associatedPersonAccount;
    net.sourceforge.fenixedu.domain.Person playsRole person;
}


relation PersonAdvisory {
	net.sourceforge.fenixedu.domain.Person playsRole people {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Advisory playsRole advisories {
		multiplicity *;
	}
}


relation PersonalDataUseInquiryAnswersStudent {
    net.sourceforge.fenixedu.domain.student.PersonalDataUseInquiryAnswers playsRole personalDataUseInquiryAnswers;
    net.sourceforge.fenixedu.domain.Student playsRole student;
}


relation PersonCountry {
	net.sourceforge.fenixedu.domain.Person playsRole associatedPersons {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Country playsRole pais;
}


relation PersonDepartment {
	net.sourceforge.fenixedu.domain.Person playsRole associatedPersons {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Department playsRole manageableDepartmentCredits {
		multiplicity *;
	}
}

relation PersonProjectAccess {
	net.sourceforge.fenixedu.domain.projectsManagement.ProjectAccess playsRole projectAccesses {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Person playsRole person;
}

relation PersonRole {
	net.sourceforge.fenixedu.domain.Person playsRole associatedPersons {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Role playsRole personRoles {
		multiplicity *;
	}
}


relation PersonRolePerson {
    net.sourceforge.fenixedu.domain.PersonRole playsRole associatedPersonRoles {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.Person playsRole person;
}


relation PersonTeacher {
	net.sourceforge.fenixedu.domain.Teacher playsRole associatedTeachers {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Person playsRole person;
}

relation PrecedenceRestriction {
	net.sourceforge.fenixedu.domain.precedences.Precedence playsRole precedence;

	net.sourceforge.fenixedu.domain.precedences.Restriction playsRole restrictions {
		multiplicity *;
	}
}


relation ProfessorshipShiftProfessorship {
    net.sourceforge.fenixedu.domain.Professorship playsRole professorship;
    net.sourceforge.fenixedu.domain.ShiftProfessorship playsRole associatedShiftProfessorship {
        multiplicity *;
    }
}


relation ProfessorshipSummary {
	net.sourceforge.fenixedu.domain.Summary playsRole associatedSummaries {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Professorship playsRole professorship;
}


relation ProfessorshipSupportLesson {
	net.sourceforge.fenixedu.domain.SupportLesson playsRole supportLessons {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Professorship playsRole professorship;
}


relation ProposalTeacherByOrientator {
	net.sourceforge.fenixedu.domain.finalDegreeWork.Proposal playsRole associatedProposalsByOrientator {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Teacher playsRole orientator;
}


relation ProposalExecutionDegree {
	net.sourceforge.fenixedu.domain.finalDegreeWork.Proposal playsRole associatedFinalDegreeWorkProposals {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.ExecutionDegree playsRole executionDegree;
}


relation ProposalTeacherByCoorientator {
	net.sourceforge.fenixedu.domain.finalDegreeWork.Proposal playsRole associatedProposalsByCoorientator {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Teacher playsRole coorientator;
}


relation ProposalBranch {
	net.sourceforge.fenixedu.domain.finalDegreeWork.Proposal playsRole associatedFinalDegreeWorkProposals {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Branch playsRole branches {
		multiplicity *;
	}
}


relation QualificationCountry {
    net.sourceforge.fenixedu.domain.Qualification playsRole associatedQualifications {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.Country playsRole country;
}


relation QualificationPerson {
    net.sourceforge.fenixedu.domain.Qualification playsRole qualification;
    net.sourceforge.fenixedu.domain.Person playsRole person;
}

relation QuestionsFromMetadata {
    net.sourceforge.fenixedu.domain.onlineTests.Question playsRole visibleQuestions {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.onlineTests.Metadata playsRole metadata;
}

relation QuestionsFromTest {
    net.sourceforge.fenixedu.domain.onlineTests.TestQuestion playsRole testQuestions {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.onlineTests.Test playsRole test;
}

relation QuestionFromTestQuestion {
    net.sourceforge.fenixedu.domain.onlineTests.Question playsRole question;
    net.sourceforge.fenixedu.domain.onlineTests.TestQuestion playsRole testQuestions {
        multiplicity *;
    }
}

relation ReimbursementGuideEntryGuideEntry {
	net.sourceforge.fenixedu.domain.reimbursementGuide.ReimbursementGuideEntry playsRole reimbursementGuideEntries {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.GuideEntry playsRole guideEntry;
}

relation ReimbursementGuideEntryReimbursementGuide {
	net.sourceforge.fenixedu.domain.reimbursementGuide.ReimbursementGuideEntry playsRole reimbursementGuideEntries {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.reimbursementGuide.ReimbursementGuide playsRole reimbursementGuide;
}

relation ReimbursementGuideGuide {
	net.sourceforge.fenixedu.domain.reimbursementGuide.ReimbursementGuide playsRole reimbursementGuides {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Guide playsRole guide;
}

relation ReimbursementGuideSituationEmployee {
	net.sourceforge.fenixedu.domain.reimbursementGuide.ReimbursementGuideSituation playsRole reimbursementGuideSituations {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Employee playsRole employee;
}

relation ReimbursementGuideSituationReimbursementGuide {
	net.sourceforge.fenixedu.domain.reimbursementGuide.ReimbursementGuideSituation playsRole reimbursementGuideSituations {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.reimbursementGuide.ReimbursementGuide playsRole reimbursementGuide;
}


relation ReimbursementTransactionReimbursementGuideEntry {
	net.sourceforge.fenixedu.domain.transactions.ReimbursementTransaction playsRole reimbursementTransaction;
	net.sourceforge.fenixedu.domain.reimbursementGuide.ReimbursementGuideEntry playsRole reimbursementGuideEntry;
}


relation ResidenceCandidaciesStudent {
    net.sourceforge.fenixedu.domain.student.ResidenceCandidacies playsRole associatedResidenceCandidacies {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.Student playsRole student;
}


relation RolePersonRole {
    net.sourceforge.fenixedu.domain.Role playsRole role;
    net.sourceforge.fenixedu.domain.PersonRole playsRole associatedPersonRoles {
        multiplicity *;
    }
}


relation RoomLesson {
	net.sourceforge.fenixedu.domain.Lesson playsRole associatedLessons {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Room playsRole sala;
}



relation RoomRoomOccupation {
	net.sourceforge.fenixedu.domain.RoomOccupation playsRole roomOccupations {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Room playsRole room;
}


relation RoomSummary {
	net.sourceforge.fenixedu.domain.Summary playsRole associatedSummaries {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Room playsRole room;
}

relation SectionItem {
	net.sourceforge.fenixedu.domain.Item playsRole associatedItems {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Section playsRole section;
}

relation SectionSuperiorSection {
	net.sourceforge.fenixedu.domain.Section playsRole associatedSections {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Section playsRole superiorSection;
}


relation ServiceProviderRegimeTeacher {
    net.sourceforge.fenixedu.domain.teacher.ServiceProviderRegime playsRole serviceProviderRegime;
    net.sourceforge.fenixedu.domain.Teacher playsRole teacher;
}


relation SchedulingExecutionDegree {
	net.sourceforge.fenixedu.domain.finalDegreeWork.Scheduleing playsRole scheduling;
	net.sourceforge.fenixedu.domain.ExecutionDegree playsRole executionDegree;
}

relation SchoolClassExecutionDegree {
	net.sourceforge.fenixedu.domain.SchoolClass playsRole schoolClasses {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.ExecutionDegree playsRole executionDegree;
}

relation ScientificAreaCreditsInScientificArea {
	net.sourceforge.fenixedu.domain.CreditsInScientificArea playsRole creditsInScientificAreas {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.ScientificArea playsRole scientificArea;
}


relation SeminaryCandidacy {
    net.sourceforge.fenixedu.domain.Seminaries.Seminary playsRole seminary;
    net.sourceforge.fenixedu.domain.Seminaries.Candidacy playsRole candidacies {
        multiplicity *;
    }
}


relation SendProposal {
	net.sourceforge.fenixedu.domain.GroupPropertiesExecutionCourse playsRole groupPropertiesSenderExecutionCourse {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.ExecutionCourse playsRole senderExecutionCourse;
}

relation SentSmsPerson {
	net.sourceforge.fenixedu.domain.sms.SentSms playsRole sentSms {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Person playsRole person;
}

relation SeniorStudent {
    net.sourceforge.fenixedu.domain.student.Senior playsRole senior;
    net.sourceforge.fenixedu.domain.Student playsRole student;
}


relation ShiftExecutionCourse {
	net.sourceforge.fenixedu.domain.Shift playsRole associatedShifts {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.ExecutionCourse playsRole disciplinaExecucao;
}


relation ShiftSchoolClass {
	net.sourceforge.fenixedu.domain.SchoolClass playsRole associatedClasses {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Shift playsRole associatedShifts {
		multiplicity *;
	}
}


relation ShiftShiftProfessorship {
	net.sourceforge.fenixedu.domain.Shift playsRole shift;
	net.sourceforge.fenixedu.domain.ShiftProfessorship playsRole associatedShiftProfessorship {
		multiplicity *;
	}
}

relation ShiftStudent {
	net.sourceforge.fenixedu.domain.Shift playsRole shifts {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Student playsRole students {
		multiplicity *;
	}
}

relation ShiftSummary {
	net.sourceforge.fenixedu.domain.Summary playsRole associatedSummaries {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Shift playsRole shift;
}

relation SibsPaymentFileEntrySibsPaymentFile {
	net.sourceforge.fenixedu.domain.gratuity.masterDegree.SibsPaymentFileEntry playsRole sibsPaymentFileEntries {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.gratuity.masterDegree.SibsPaymentFile playsRole sibsPaymentFile;
}

relation SiteSection {
	net.sourceforge.fenixedu.domain.Section playsRole associatedSections {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Site playsRole site;
}

relation SiteAnnouncement {
	net.sourceforge.fenixedu.domain.Announcement playsRole associatedAnnouncements {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Site playsRole site;
}


relation StudentCurricularPlanBranch {
    net.sourceforge.fenixedu.domain.StudentCurricularPlan playsRole studentCurricularPlans {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.Branch playsRole branch;
}


relation StudentCurricularPlanCreditsInAnySecundaryArea {
    net.sourceforge.fenixedu.domain.CreditsInAnySecundaryArea playsRole creditsInAnySecundaryAreas {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.StudentCurricularPlan playsRole studentCurricularPlan;
}


relation StudentCurricularPlanCreditsInScientificArea {
	net.sourceforge.fenixedu.domain.CreditsInScientificArea playsRole creditsInScientificAreas {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.StudentCurricularPlan playsRole studentCurricularPlan;
}

relation StudentCurricularPlanDegreeCurricularPlan {
    net.sourceforge.fenixedu.domain.StudentCurricularPlan playsRole studentCurricularPlans {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.DegreeCurricularPlan playsRole degreeCurricularPlan;
}

relation StudentCurricularPlanEmployee {
    net.sourceforge.fenixedu.domain.StudentCurricularPlan playsRole studentCurricularPlans {
        multiplicity *;
    }

    net.sourceforge.fenixedu.domain.Employee playsRole employee;
}

relation StudentCurricularPlanEnrolment {
    net.sourceforge.fenixedu.domain.StudentCurricularPlan playsRole studentCurricularPlan;
    
    net.sourceforge.fenixedu.domain.Enrolment playsRole enrolments {
        multiplicity *;
    }
}

relation StudentCurricularPlanLEECSecundaryBranch {
    net.sourceforge.fenixedu.domain.StudentCurricularPlanLEEC playsRole secundaryStudentCurricularPlansLEEC {
        multiplicity *;
    }
    
    net.sourceforge.fenixedu.domain.Branch playsRole secundaryBranch;
}

relation StudentCurricularPlanLEICSecundaryBranch {
    net.sourceforge.fenixedu.domain.StudentCurricularPlanLEIC playsRole secundaryStudentCurricularPlansLEIC {
        multiplicity *;
    }
    
    net.sourceforge.fenixedu.domain.Branch playsRole secundaryBranch;
}

relation StudentCurricularPlanNotNeedToEnrollInCurricularCourse {
    net.sourceforge.fenixedu.domain.StudentCurricularPlan playsRole studentCurricularPlan;

    net.sourceforge.fenixedu.domain.degree.enrollment.NotNeedToEnrollInCurricularCourse playsRole notNeedToEnrollCurricularCourses {
        multiplicity *;
    }
}

relation StudentCurricularPlanStudent {
    net.sourceforge.fenixedu.domain.StudentCurricularPlan playsRole studentCurricularPlans {
        multiplicity *;
    }

    net.sourceforge.fenixedu.domain.Student playsRole student;
}

relation StudentDistributedTestLogs {
    net.sourceforge.fenixedu.domain.onlineTests.StudentTestLog playsRole studentsLogs {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.onlineTests.DistributedTest playsRole distributedTest;
}

relation StudentEnrolmentLog {
	net.sourceforge.fenixedu.domain.log.EnrolmentLog playsRole enrolmentLogs {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Student playsRole student;
}

relation StudentExecutionYear {
    net.sourceforge.fenixedu.domain.Student playsRole students {
        multiplicity *;
    }

    net.sourceforge.fenixedu.domain.ExecutionYear playsRole registrationYear;
}


relation StudentGroup {
	net.sourceforge.fenixedu.domain.StudentGroup playsRole associatedStudentGroups {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Shift playsRole shift;
}


relation StudentGroupAttendAttends {
	net.sourceforge.fenixedu.domain.StudentGroupAttend playsRole studentGroupAttends {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Attends playsRole attend;
}


relation StudentGroupAttendStudentGroup {
	net.sourceforge.fenixedu.domain.StudentGroupAttend playsRole studentGroupAttends {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.StudentGroup playsRole studentGroup;
}


relation StudentGroupBelongsToGroupProperties {
	net.sourceforge.fenixedu.domain.StudentGroup playsRole studentGroups {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.AttendsSet playsRole attendsSet;
}

relation StudentPerson {
    net.sourceforge.fenixedu.domain.Student playsRole students {
        multiplicity *;
    }
    
    net.sourceforge.fenixedu.domain.Person playsRole person;
}

relation StudentSecretaryEnrolmentStudent {
	net.sourceforge.fenixedu.domain.SecretaryEnrolmentStudent playsRole secretaryEnrolmentStudents {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Student playsRole student;
}

relation StudentStudentKind {
	net.sourceforge.fenixedu.domain.Student playsRole students {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.StudentKind playsRole studentKind;
}

relation StudentTestQuestions {
    net.sourceforge.fenixedu.domain.onlineTests.Question playsRole question;
    net.sourceforge.fenixedu.domain.onlineTests.StudentTestQuestion playsRole studentTestsQuestions {
        multiplicity *;
    }
}

relation StudentTestsQuestions {
    net.sourceforge.fenixedu.domain.onlineTests.StudentTestQuestion playsRole studentTestsQuestions {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.Student playsRole student;
}

relation StudentTestsLogs {
    net.sourceforge.fenixedu.domain.onlineTests.StudentTestLog playsRole studentTestsLogs {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.Student playsRole student;
}

relation TeachingCareerCategory {
	net.sourceforge.fenixedu.domain.teacher.TeachingCareer playsRole associatedTeachingCareers {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.teacher.Category playsRole category;
}


relation TeacherCategory {
	net.sourceforge.fenixedu.domain.Teacher playsRole teacher {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.teacher.Category playsRole category;
}


relation TeacherDegreeFinalProjectStudentExecutionPeriod {
    net.sourceforge.fenixedu.domain.degree.finalProject.TeacherDegreeFinalProjectStudent playsRole associatedTeacherDegreeFinalProjectStudents {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.ExecutionPeriod playsRole executionPeriod;
}


relation TeacherDegreeFinalProjectStudentStudent {
    net.sourceforge.fenixedu.domain.degree.finalProject.TeacherDegreeFinalProjectStudent playsRole teacherDegreeFinalProjectStudent {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.Student playsRole student;
}


relation TeacherDegreeFinalProjectStudentTeacher {
    net.sourceforge.fenixedu.domain.degree.finalProject.TeacherDegreeFinalProjectStudent playsRole degreeFinalProjectStudents {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.Teacher playsRole teacher;
}


relation TeacherInstitutionWorkTimeExecutionPeriod {
    net.sourceforge.fenixedu.domain.teacher.workTime.TeacherInstitutionWorkTime playsRole associatedTeacherInstitutionWorkTime {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.ExecutionPeriod playsRole executionPeriod;
}


relation TeacherInstitutionWorkTimeTeacher {
    net.sourceforge.fenixedu.domain.teacher.workTime.TeacherInstitutionWorkTime playsRole institutionWorkTimePeriods {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.Teacher playsRole teacher;
}


relation TeacherManagementPositionCreditLine {
    net.sourceforge.fenixedu.domain.Teacher playsRole teacher;
    net.sourceforge.fenixedu.domain.credits.ManagementPositionCreditLine playsRole managementPositions {
        multiplicity *;
    }
}


relation TeacherOldPublication {
	net.sourceforge.fenixedu.domain.teacher.OldPublication playsRole oldPublication {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Teacher playsRole teacher;
}


relation TeacherOtherTypeCreditLine {
    net.sourceforge.fenixedu.domain.Teacher playsRole teacher;
    net.sourceforge.fenixedu.domain.credits.OtherTypeCreditLine playsRole otherTypeCreditLines {
        multiplicity *;
    }
}


relation TeacherProfessorship {
	net.sourceforge.fenixedu.domain.Professorship playsRole professorships {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Teacher playsRole teacher;
}


relation TeacherServiceExemptionCreditLine {
    net.sourceforge.fenixedu.domain.Teacher playsRole teacher;
    net.sourceforge.fenixedu.domain.credits.ServiceExemptionCreditLine playsRole serviceExemptionSituations {
        multiplicity *;
    }
}


relation TeacherSummary {
	net.sourceforge.fenixedu.domain.Summary playsRole associatedSummaries {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Teacher playsRole teacher;
}


relation TestScope {
    net.sourceforge.fenixedu.domain.onlineTests.Test playsRole tests {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.onlineTests.TestScope playsRole testScope;
}


relation ThemeCandidacy {
    net.sourceforge.fenixedu.domain.Seminaries.Theme playsRole theme;
    net.sourceforge.fenixedu.domain.Seminaries.Candidacy playsRole associatedCandidacies {
        multiplicity *;
    }
}


relation ThemeCaseStudy {
    net.sourceforge.fenixedu.domain.Seminaries.Theme playsRole seminaryTheme;
    net.sourceforge.fenixedu.domain.Seminaries.CaseStudy playsRole caseStudies {
        multiplicity *;
    }
}

relation TransactionPerson {
	net.sourceforge.fenixedu.domain.transactions.Transaction playsRole responsabilityTransactions {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Person playsRole responsiblePerson;
}

relation TransactionPersonAccount {
	net.sourceforge.fenixedu.domain.transactions.Transaction playsRole transactions {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.PersonAccount playsRole personAccount;
}

relation TutorStudent {
    net.sourceforge.fenixedu.domain.Tutor playsRole associatedTutor;
    net.sourceforge.fenixedu.domain.Student playsRole student;
}


relation TutorTeacher {
    net.sourceforge.fenixedu.domain.Tutor playsRole associatedTutors {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.Teacher playsRole teacher;
}


relation WeeklyOcupationTeacher {
    net.sourceforge.fenixedu.domain.teacher.WeeklyOcupation playsRole weeklyOcupations {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.Teacher playsRole teacher;
}


relation WrittenEvaluationCurricularCourseScope {
	net.sourceforge.fenixedu.domain.WrittenEvaluation playsRole associatedWrittenEvaluations {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.CurricularCourseScope playsRole associatedCurricularCourseScope {
		multiplicity *;
	}
}

relation WrittenEvaluationRoomOccupation {
	net.sourceforge.fenixedu.domain.WrittenEvaluation playsRole writtenEvaluation;
	
	net.sourceforge.fenixedu.domain.RoomOccupation playsRole associatedRoomOccupation {
		multiplicity *;
	}
}

relation PublicationTeacherPublication {
	net.sourceforge.fenixedu.domain.publication.PublicationTeacher playsRole publicationTeachers {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.publication.Publication playsRole publication;
}

relation PublicationTeacherTeacher {
	net.sourceforge.fenixedu.domain.publication.PublicationTeacher playsRole teacherPublications {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Teacher playsRole teacher;
}

relation AuthorshipPerson {
	net.sourceforge.fenixedu.domain.publication.Authorship playsRole personAuthorships {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Person playsRole author;
}

relation PublicationAuthorship {
	net.sourceforge.fenixedu.domain.publication.Authorship playsRole publicationAuthorships {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.publication.Publication playsRole publication;
}

relation AttributePublicationTypeAttribute {
	net.sourceforge.fenixedu.domain.publication.PublicationTypeAttribute playsRole publicationTypeAttributes {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.publication.Attribute playsRole attribute;
}

relation PublicationTypePublicationTypeAttribute {
	net.sourceforge.fenixedu.domain.publication.PublicationTypeAttribute playsRole publicationTypeAttributes {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.publication.PublicationType playsRole publicationType;
}

relation PublicationTypePublication {
	net.sourceforge.fenixedu.domain.publication.PublicationType playsRole type;
	net.sourceforge.fenixedu.domain.publication.Publication playsRole publications {
		multiplicity *;
	}
	
}

relation PublicationTypePublicationSubtype {
	net.sourceforge.fenixedu.domain.publication.PublicationType playsRole publicationType;
	net.sourceforge.fenixedu.domain.publication.PublicationSubtype playsRole subtypes {
		multiplicity *;
	}
}

relation PublicationsNumberTeacher {
	net.sourceforge.fenixedu.domain.teacher.PublicationsNumber playsRole publicationsNumber;
	net.sourceforge.fenixedu.domain.Teacher playsRole teacher;
}

relation SeminaryCourseEquivalency {
    net.sourceforge.fenixedu.domain.Seminaries.Seminary playsRole seminary;

    net.sourceforge.fenixedu.domain.Seminaries.CourseEquivalency playsRole equivalencies {
        multiplicity *;
    }
}


relation WebSiteItemPerson {
    net.sourceforge.fenixedu.domain.WebSiteItem playsRole editedWebSiteItems {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.Person playsRole editor;
}


relation WebSiteItemWebSiteSection {
    net.sourceforge.fenixedu.domain.WebSiteItem playsRole includedWebSiteItems {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.WebSiteSection playsRole webSiteSection;
}


relation WebSiteSectionWebSite {
    net.sourceforge.fenixedu.domain.WebSiteSection playsRole associatedWebSiteSections {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.WebSite playsRole webSite;
}

relation StudentPersonalDataAuthorizationStudent {
    net.sourceforge.fenixedu.domain.student.StudentPersonalDataAuthorization playsRole studentPersonalDataAuthorization;
    net.sourceforge.fenixedu.domain.Student playsRole student;
}

relation StudentPersonalDataAuthorizationExecutionYear {
    net.sourceforge.fenixedu.domain.student.StudentPersonalDataAuthorization playsRole studentPersonalDataAuthorizations {
    	multiplicity *;
    }
    net.sourceforge.fenixedu.domain.ExecutionYear playsRole executionYear;
}