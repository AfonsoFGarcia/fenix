/*
 * DOMAIN_MODEL.DML
 *
 * The Fenix Project Domain Model
 * 
 */

class net.sourceforge.fenixedu.domain.DomainObject implements java.io.Serializable {
	Integer ackOptLock;
	Integer idInternal;
}


class net.sourceforge.fenixedu.domain.Advisory extends net.sourceforge.fenixedu.domain.DomainObject {
	Date created;
	String subject;
	Boolean onlyShowOnce;
	Date expires;
	String message;
	String sender;
}


class net.sourceforge.fenixedu.domain.Announcement extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keySite;
	String information;
	String title;
	
	interface "
	public java.sql.Timestamp getCreationDate();
    
    public void setCreationDate(java.sql.Timestamp creationDate);

    public java.sql.Timestamp getLastModifiedDate();

    public void setLastModifiedDate(java.sql.Timestamp lastModifiedDate);	
	"
}


class net.sourceforge.fenixedu.domain.AttendInAttendsSet extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyAttend;
	Integer keyAttendsSet;
        
}


class net.sourceforge.fenixedu.domain.Attends extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer chaveDisciplinaExecucao;
	Integer chaveAluno;
	Integer keyEnrolment;
	
	interface "
	public java.util.List getAttendsSets();

	public void addAttendInAttendsSet(IAttendInAttendsSet attendInAttendsSet);
	
	public void removeAttendInAttendsSet(IAttendInAttendsSet attendInAttendsSet);
	
	public boolean existsAttendInAttendsSet(IAttendInAttendsSet attendInAttendsSet);
	"	
}


class net.sourceforge.fenixedu.domain.AttendsSet extends net.sourceforge.fenixedu.domain.DomainObject {
        String name;
        Integer keyGroupProperties;
        
        interface "
        
       	public java.util.List getAttends();
        
        public void addAttendInAttendsSet (net.sourceforge.fenixedu.domain.IAttendInAttendsSet attendInAttendsSet);

		public void removeAttendInAttendsSet (net.sourceforge.fenixedu.domain.IAttendInAttendsSet attendInAttendsSet);

		public boolean existsAttendInAttendsSet (net.sourceforge.fenixedu.domain.IAttendInAttendsSet attendInAttendsSet);
	
		public void addStudentGroup (net.sourceforge.fenixedu.domain.IStudentGroup studentGroup);

		public void removeStudentGroup (net.sourceforge.fenixedu.domain.IStudentGroup studentGroup);

		public boolean existsStudentGroup (net.sourceforge.fenixedu.domain.IStudentGroup studentGroup);
	
		public net.sourceforge.fenixedu.domain.IAttends getStudentAttend(net.sourceforge.fenixedu.domain.IStudent student);

		public java.util.List getStudentGroupsWithoutShift();

		public java.util.List getStudentGroupsWithShift();

		public Integer getNumberOfStudentsInAttendsSet();

		public Integer getNumberOfStudentsNotInAttendsSet();
		"
}


class net.sourceforge.fenixedu.domain.BibliographicReference extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyExecutionCourse;
	Boolean optional;
	String year;
	String authors;
	String title;
	String reference;
}


class net.sourceforge.fenixedu.domain.Branch extends net.sourceforge.fenixedu.domain.DomainObject {
    Integer secondaryCredits;
    String code;
    Integer keyDegreeCurricularPlan;
    Integer specializationCredits;
    String name;
    String acronym;
    
    interface "

    public net.sourceforge.fenixedu.util.BranchType getBranchType();
    public void setBranchType(net.sourceforge.fenixedu.util.BranchType branchType);
    public java.util.List getAreaCurricularCourseGroups(net.sourceforge.fenixedu.util.AreaType areaType);
    "
}


class net.sourceforge.fenixedu.domain.Building extends net.sourceforge.fenixedu.domain.DomainObject {
	String name;
}


class net.sourceforge.fenixedu.domain.Campus extends net.sourceforge.fenixedu.domain.DomainObject {
	String name;
}


class net.sourceforge.fenixedu.domain.Seminaries.Candidacy extends net.sourceforge.fenixedu.domain.DomainObject {
    Boolean approved;
    Integer studentIdInternal;
    Integer curricularCourseIdInternal;
    Integer seminaryIdInternal;
    Integer themeIdInternal;
    String motivation;
    Integer modalityIdInternal;
}


class net.sourceforge.fenixedu.domain.CandidateEnrolment extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer curricularCourseKey;
	Integer masterDegreeCandidateKey;
	interface "
	public net.sourceforge.fenixedu.domain.IMasterDegreeCandidate getMasterDegreeCandidate();
	public void setMasterDegreeCandidate(net.sourceforge.fenixedu.domain.IMasterDegreeCandidate candidate);
    public net.sourceforge.fenixedu.domain.ICurricularCourse getCurricularCourse();	
	public void setCurricularCourse(net.sourceforge.fenixedu.domain.ICurricularCourse curricularCourse);
	"
}

class net.sourceforge.fenixedu.domain.CandidateSituation extends net.sourceforge.fenixedu.domain.DomainObject {
	String remarks;
	Integer candidateKey;
	Integer situationKey;
	
	interface "
		public java.util.Date getDate();
		
		public void setDate(java.util.Date date);
		
		public net.sourceforge.fenixedu.util.SituationName getSituation();
		
		public void setSituation(net.sourceforge.fenixedu.util.SituationName situation);
		
		public net.sourceforge.fenixedu.domain.IMasterDegreeCandidate getMasterDegreeCandidate();
		
		public void setMasterDegreeCandidate(net.sourceforge.fenixedu.domain.IMasterDegreeCandidate masterDegreeCandidate);
		
		public net.sourceforge.fenixedu.util.State getValidation();
		
		public void setValidation(net.sourceforge.fenixedu.util.State validation);
	"
}


class net.sourceforge.fenixedu.domain.Seminaries.CaseStudy extends net.sourceforge.fenixedu.domain.DomainObject {
    String code;
    String description;
    Integer seminaryThemeIdInternal;
    String name;
}


class net.sourceforge.fenixedu.domain.teacher.Category extends net.sourceforge.fenixedu.domain.DomainObject {
	String code;
	String longName;
	Boolean canBeExecutionCourseResponsible;
	String shortName;
}

class net.sourceforge.fenixedu.domain.Contributor extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer contributorNumber;
	String contributorAddress;
	String contributorName;
}

class net.sourceforge.fenixedu.domain.Coordinator extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyExecutionDegree;
	Integer keyTeacher;
	Boolean responsible;
	
	interface "
    	public net.sourceforge.fenixedu.domain.ITeacher getTeacher();
    	
	    public void setTeacher(net.sourceforge.fenixedu.domain.ITeacher teacher);
	"
	
}

class net.sourceforge.fenixedu.domain.Country extends net.sourceforge.fenixedu.domain.DomainObject {
	String code;
	String nationality;
	String name;
}

class net.sourceforge.fenixedu.domain.Seminaries.CourseEquivalency extends net.sourceforge.fenixedu.domain.DomainObject {
    Integer curricularCourseIdInternal;
    Integer seminaryIdInternal;
    Integer modalityIdInternal;
}

class net.sourceforge.fenixedu.domain.gesdis.CourseHistoric extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyCurricularCourse;
	String curricularYear;
	Integer approved;
	Integer enrolled;
	Integer semester;
	Integer evaluated;
}


class net.sourceforge.fenixedu.domain.gesdis.CourseReport extends net.sourceforge.fenixedu.domain.DomainObject {
	String report;
	Date lastModificationDate;
	Integer keyExecutionCourse;
}


class net.sourceforge.fenixedu.domain.credits.CreditLine extends net.sourceforge.fenixedu.domain.DomainObject implements net.sourceforge.fenixedu.domain.credits.event.ICreditsEventOriginator {
    Integer keyTeacher;
}


    class net.sourceforge.fenixedu.domain.credits.DatePeriodBaseCreditLine extends net.sourceforge.fenixedu.domain.credits.CreditLine {
        Date start;
        Date end;
    }
    
        class net.sourceforge.fenixedu.domain.credits.ManagementPositionCreditLine extends net.sourceforge.fenixedu.domain.credits.DatePeriodBaseCreditLine {
            Double credits;
            String position;
        }    
    
        
        class net.sourceforge.fenixedu.domain.credits.ServiceExemptionCreditLine extends net.sourceforge.fenixedu.domain.credits.DatePeriodBaseCreditLine {
            interface "
            public net.sourceforge.fenixedu.util.credits.ServiceExemptionType getType();
            
            public void setType(net.sourceforge.fenixedu.util.credits.ServiceExemptionType type);
            "
        }

        
    class net.sourceforge.fenixedu.domain.credits.OtherTypeCreditLine extends net.sourceforge.fenixedu.domain.credits.CreditLine {
        String reason;
        Double credits;
        Integer keyExecutionPeriod;
    }


class net.sourceforge.fenixedu.domain.CreditsInAnySecundaryArea extends net.sourceforge.fenixedu.domain.DomainObject {
    Integer givenCredits;
    Integer studentCurricularPlanKey;
    Integer enrolmentKey;
}
    
    
class net.sourceforge.fenixedu.domain.CreditsInScientificArea extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer givenCredits;
	Integer studentCurricularPlanKey;
	Integer enrolmentKey;
	Integer scientificAreaKey;
}


class net.sourceforge.fenixedu.domain.CurricularCourse extends net.sourceforge.fenixedu.domain.DomainObject {
	Double ectsCredits;
	Boolean basic;
	Integer universityKey;
	Boolean mandatoryEnrollment;
	Integer maximumValueForAcumulatedEnrollments;
	Double theoPratHours;
	Double weigth;
	Integer keyScientificArea;
	Integer degreeCurricularPlanKey;
	String code;
	Boolean enrollmentAllowed;
	Double theoreticalHours;
	Integer departmentCourseKey;
	Double labHours;
	Double credits;
	Integer enrollmentWeigth;
	Double praticalHours;
	Boolean mandatory;
	String name;
	String acronym;
	Integer minimumValueForAcumulatedEnrollments;
	
	interface "
	public net.sourceforge.fenixedu.util.CurricularCourseType getType();
    public void setType(net.sourceforge.fenixedu.util.CurricularCourseType type);
	public net.sourceforge.fenixedu.util.CurricularCourseExecutionScope getCurricularCourseExecutionScope();
    public void setCurricularCourseExecutionScope(net.sourceforge.fenixedu.util.CurricularCourseExecutionScope curricularCourseExecutionScope);
    public net.sourceforge.fenixedu.domain.ICurricularYear getCurricularYearByBranchAndSemester(final net.sourceforge.fenixedu.domain.IBranch branch,final Integer semester);
    public String getCurricularCourseUniqueKeyForEnrollment();
    public boolean hasActiveScopeInGivenSemester(final Integer semester);
    public boolean hasActiveScopeInGivenSemesterForGivenBranch(final Integer semester, final net.sourceforge.fenixedu.domain.IBranch branch);
    public boolean hasActiveScopeInGivenSemesterForCommonAndGivenBranch(final Integer semester, final net.sourceforge.fenixedu.domain.IBranch branch);
    public java.util.List<net.sourceforge.fenixedu.domain.ICurricularCourseScope> getActiveScopesInExecutionPeriod(final IExecutionPeriod executionPeriod);
	"
}


class net.sourceforge.fenixedu.domain.CurricularCourseEquivalence extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer oldCurricularCourseKey;
	Integer equivalentCurricularCourseKey;
	Integer degreeCurricularPlanKey;
}

class net.sourceforge.fenixedu.domain.CurricularCourseGroup extends net.sourceforge.fenixedu.domain.DomainObject {
    String ojbConcreteClass;
    Integer keyBranch;
    String name;
    Integer minimumValue;
    Integer maximumValue;

    interface "

    public Integer getMaximumCredits();
    public Integer getMinimumCredits();
    public Integer getMinimumNumberOfOptionalCourses();
    public Integer getMaximumNumberOfOptionalCourses();

    public void setMaximumCredits(Integer maximumCredits);
    public void setMinimumCredits(Integer minimumCredits);
    public void setMinimumNumberOfOptionalCourses(Integer minimumNumberOfOptionalCourses);
    public void setMaximumNumberOfOptionalCourses(Integer maximumNumberOfOptionalCourses);
    
    public net.sourceforge.fenixedu.util.AreaType getAreaType();
    public void setAreaType(net.sourceforge.fenixedu.util.AreaType areaType);
    "
}

    class net.sourceforge.fenixedu.domain.AreaCurricularCourseGroup extends net.sourceforge.fenixedu.domain.CurricularCourseGroup {
    }
    
    class net.sourceforge.fenixedu.domain.OptionalCurricularCourseGroup extends net.sourceforge.fenixedu.domain.CurricularCourseGroup {
    }

class net.sourceforge.fenixedu.domain.CurricularCourseScope extends net.sourceforge.fenixedu.domain.DomainObject {
    Integer branchKey;
    Integer curricularCourseKey;
    Integer curricularSemesterKey;
    String anotation;

    interface "

    public java.util.Calendar getBeginDate();
    public java.util.Calendar getEndDate();
    public void setBeginDate(java.util.Calendar beginDate);
    public void setEndDate(java.util.Calendar endDate);
    public Boolean isActive();
    "
}

class net.sourceforge.fenixedu.domain.CurricularSemester extends net.sourceforge.fenixedu.domain.DomainObject {
    Integer curricularYearKey;
    Integer semester;
}

class net.sourceforge.fenixedu.domain.CurricularYear extends net.sourceforge.fenixedu.domain.DomainObject {
    Integer year;
}

class net.sourceforge.fenixedu.domain.Curriculum extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyPersonWhoAltered;
	Integer keyCurricularCourse;
	Date lastModificationDate;
	String generalObjectives;
	String operacionalObjectives;
	String operacionalObjectivesEn;
	String programEn;
	String generalObjectivesEn;
	String program;
}


class net.sourceforge.fenixedu.domain.Degree extends net.sourceforge.fenixedu.domain.DomainObject {
	String concreteClassForDegreeCurricularPlans;
	String nome;
	String sigla;
	
	interface "
	public net.sourceforge.fenixedu.util.TipoCurso getTipoCurso();
    public void setTipoCurso(net.sourceforge.fenixedu.util.TipoCurso tipoCurso);
	"
}


class net.sourceforge.fenixedu.domain.DegreeCurricularPlan extends net.sourceforge.fenixedu.domain.DomainObject {
    String concreteClassForStudentCurricularPlans;
    Integer degreeDuration;
    Integer degreeKey;
    String description;
    String descriptionEn;
    Date endDate;
    Date initialDate;
    Integer minimalYearForOptionalCourses;
    String name;
    Double neededCredits;
    Integer numerusClausus;
    String ojbConcreteClass;
    String anotation;
    
    interface "

    public net.sourceforge.fenixedu.domain.IStudentCurricularPlan getNewStudentCurricularPlan();
    public net.sourceforge.fenixedu.util.MarkType getMarkType();
    public net.sourceforge.fenixedu.util.DegreeCurricularPlanState getState();
    public java.util.List getListOfEnrollmentRules(net.sourceforge.fenixedu.domain.IStudentCurricularPlan studentCurricularPlan,
            net.sourceforge.fenixedu.domain.IExecutionPeriod executionPeriod);
    public java.util.List getCurricularCoursesFromArea(net.sourceforge.fenixedu.domain.IBranch area, net.sourceforge.fenixedu.util.AreaType areaType);
    public java.util.List getCurricularCoursesFromAnyArea();
    public java.util.List getCommonAreas();
    public java.util.List getSpecializationAreas();
    public java.util.List getSecundaryAreas();
    public java.util.List getTFCs();
    public java.util.List getAllOptionalCurricularCourseGroups();
    public java.util.List getCurricularCoursesByYearAndSemesterAndBranch(int year, Integer semester, net.sourceforge.fenixedu.domain.IBranch area);
    public java.util.List getSpecialListOfCurricularCourses();
    
    public void setMarkType(net.sourceforge.fenixedu.util.MarkType markType);
    public void setState(net.sourceforge.fenixedu.util.DegreeCurricularPlanState state);
   
    "
}

    class net.sourceforge.fenixedu.domain.DegreeCurricularPlanLEC extends net.sourceforge.fenixedu.domain.DegreeCurricularPlan {
    }
    
    class net.sourceforge.fenixedu.domain.DegreeCurricularPlanLEEC extends net.sourceforge.fenixedu.domain.DegreeCurricularPlan {
    }
    
    class net.sourceforge.fenixedu.domain.DegreeCurricularPlanLEIC extends net.sourceforge.fenixedu.domain.DegreeCurricularPlan {
    }
    
    class net.sourceforge.fenixedu.domain.DegreeCurricularPlanLEICTAGUS extends net.sourceforge.fenixedu.domain.DegreeCurricularPlan {
    }
    
    class net.sourceforge.fenixedu.domain.DegreeCurricularPlanLEM extends net.sourceforge.fenixedu.domain.DegreeCurricularPlan {
    }

class net.sourceforge.fenixedu.domain.DegreeInfo extends net.sourceforge.fenixedu.domain.DomainObject {
    String additionalInfoEn;
    String historyEn;
    Double markMax;
    String additionalInfo;
    String professionalExitsEn;
    String professionalExits;
    String linksEn;
    String classificationsEn;
    String descriptionEn;
    String objectives;
    String testIngressionEn;
    String links;
    String classifications;
    String testIngression;
    Integer driftsInitial;
    String objectivesEn;
    Double markMin;
    Integer driftsFirst;
    String description;
    Double markAverage;
    Integer driftsSecond;
    String history;
    Integer degreeKey;

    interface "
    public java.sql.Timestamp getLastModificationDate();
    public void setLastModificationDate(java.sql.Timestamp lastModificationDate);
    "
}



class net.sourceforge.fenixedu.domain.student.Delegate extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyExecutionYear;
	Integer keyDegree;
	Boolean type;
	Integer keyStudent;
	
	interface "
	public net.sourceforge.fenixedu.util.DelegateYearType getYearType();
	
	public void setYearType(net.sourceforge.fenixedu.util.DelegateYearType yearType);
	"
}

class net.sourceforge.fenixedu.domain.Department extends net.sourceforge.fenixedu.domain.DomainObject {
	String code;
	String name;
}


class net.sourceforge.fenixedu.domain.DepartmentCourse extends net.sourceforge.fenixedu.domain.DomainObject {
	String nome;
	String sigla;
	Integer chaveDepartamento;
	Integer codigoInterno;
}

class net.sourceforge.fenixedu.domain.Employee extends net.sourceforge.fenixedu.domain.DomainObject {
	Boolean active;
	Integer employeeNumber;
	Date antiquity;
	Integer keyPerson;
	Integer workingHours;
	interface "
	public net.sourceforge.fenixedu.domain.EmployeeHistoric getEmployeeHistoric();
	
	public void setEmployeeHistoric(net.sourceforge.fenixedu.domain.EmployeeHistoric employeeHistoric);
	
	public java.util.List getHistoricList();
	
	public void setHistoricList(java.util.List historicList);
	
	public void fillEmployeeHistoric();
	"
}

class net.sourceforge.fenixedu.domain.EmployeeNotTeacher extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyEmployee;
	interface "
	public net.sourceforge.fenixedu.domain.IEmployee getEmployee();
	
	public void setEmployee(net.sourceforge.fenixedu.domain.IEmployee employee);
	"
}

class net.sourceforge.fenixedu.domain.Enrolment extends net.sourceforge.fenixedu.domain.DomainObject 
    implements org.apache.ojb.broker.PersistenceBrokerAware {
    String createdBy;
    Date creationDate;
    Integer curricularCourseKey;
    Integer keyExecutionPeriod;
    String ojbConcreteClass;
    Integer studentCurricularPlanKey;
    Integer accumulatedWeight;

    interface "
    
    public net.sourceforge.fenixedu.util.enrollment.EnrollmentCondition getCondition();
    public net.sourceforge.fenixedu.domain.curriculum.EnrollmentState getEnrollmentState();
    public net.sourceforge.fenixedu.util.EnrolmentEvaluationType getEnrolmentEvaluationType();
    public void setCondition(net.sourceforge.fenixedu.util.enrollment.EnrollmentCondition condition);
    public void setEnrollmentState(net.sourceforge.fenixedu.domain.curriculum.EnrollmentState state);
    public void setEnrolmentEvaluationType(net.sourceforge.fenixedu.util.EnrolmentEvaluationType type);
    "
}

    class net.sourceforge.fenixedu.domain.EnrolmentInExtraCurricularCourse extends net.sourceforge.fenixedu.domain.Enrolment {
    }
    
    class net.sourceforge.fenixedu.domain.EnrolmentInOptionalCurricularCourse extends net.sourceforge.fenixedu.domain.Enrolment {
    }

class net.sourceforge.fenixedu.domain.EnrolmentEquivalence extends net.sourceforge.fenixedu.domain.DomainObject {
    Integer enrolmentKey;
}

class net.sourceforge.fenixedu.domain.EnrolmentEvaluation extends net.sourceforge.fenixedu.domain.DomainObject 
    implements Comparable {
    String checkSum;
    Date when;
    Integer personResponsibleForGradeKey;
    String observation;
    Integer employeeKey;
    Integer enrolmentKey;
    Date gradeAvailableDate;
    Date examDate;
    String grade;
    
    interface "

    public abstract net.sourceforge.fenixedu.util.EnrolmentEvaluationType getEnrolmentEvaluationType();
    public abstract net.sourceforge.fenixedu.util.EnrolmentEvaluationState getEnrolmentEvaluationState();
    public abstract void setEnrolmentEvaluationType(net.sourceforge.fenixedu.util.EnrolmentEvaluationType type);
    public abstract void setEnrolmentEvaluationState(net.sourceforge.fenixedu.util.EnrolmentEvaluationState state);
    public abstract boolean isNormal();
    public abstract boolean isImprovment();

    "
}

class net.sourceforge.fenixedu.domain.log.EnrolmentLog extends net.sourceforge.fenixedu.domain.DomainObject {
    Integer keyCurricularCourse;
    Date date;
    Integer keyStudent;
    
    interface "

    public abstract net.sourceforge.fenixedu.util.EnrolmentAction getAction();
    public abstract void setAction(net.sourceforge.fenixedu.util.EnrolmentAction action);
    "
}

class net.sourceforge.fenixedu.domain.EnrolmentPeriod extends net.sourceforge.fenixedu.domain.DomainObject {
    String ojbConcreteClass;
    Date endDate;
    Date startDate;
    Integer keyDegreeCurricularPlan;
    Integer keyExecutionPeriod;
}

    class net.sourceforge.fenixedu.domain.EnrolmentPeriodInClasses extends net.sourceforge.fenixedu.domain.EnrolmentPeriod {
    }
    
    class net.sourceforge.fenixedu.domain.EnrolmentPeriodInCurricularCourses extends net.sourceforge.fenixedu.domain.EnrolmentPeriod {
    }

class net.sourceforge.fenixedu.domain.EquivalentEnrolmentForEnrolmentEquivalence extends net.sourceforge.fenixedu.domain.DomainObject {
    Integer enrolmentEquivalenceKey;
    Integer equivalentEnrolmentKey;
}

class net.sourceforge.fenixedu.domain.Evaluation extends net.sourceforge.fenixedu.domain.DomainObject {
	String ojbConcreteClass;
	String publishmentMessage;
}


	class net.sourceforge.fenixedu.domain.FinalEvaluation extends net.sourceforge.fenixedu.domain.Evaluation {
	}


	class net.sourceforge.fenixedu.domain.WrittenEvaluation extends net.sourceforge.fenixedu.domain.Evaluation {
		interface"
		
		public java.util.Calendar getDay();
		
		public void setDay(java.util.Calendar calendar);
		
		public java.util.Calendar getBeginning();
		
		public void setBeginning(java.util.Calendar calendar);
		
		public java.util.Calendar getEnd();
		
		public void setEnd(java.util.Calendar calendar);
		
		public java.util.Calendar getEnrollmentBeginDay();
		
		public void setEnrollmentBeginDay(java.util.Calendar calendar);
	
	    public java.util.Calendar getEnrollmentBeginTime();
	    
	    public void setEnrollmentBeginTime(java.util.Calendar calendar);
	
	    public java.util.Calendar getEnrollmentEndDay();
	    
	    public void setEnrollmentEndDay(java.util.Calendar calendar);
	    
		public java.util.Calendar getEnrollmentEndTime();
	    
	    public void setEnrollmentEndTime(java.util.Calendar calendar);
		"
	}

		class net.sourceforge.fenixedu.domain.Exam extends net.sourceforge.fenixedu.domain.WrittenEvaluation {
			interface"
			public net.sourceforge.fenixedu.util.Season getSeason();
			
			public void setSeason(net.sourceforge.fenixedu.util.Season season);
			
			public java.util.List getAssociatedRooms();
			"	
		}

		class net.sourceforge.fenixedu.domain.WrittenTest extends net.sourceforge.fenixedu.domain.WrittenEvaluation {
		}


class net.sourceforge.fenixedu.domain.EvaluationExecutionCourse extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyExecutionCourse;
	Integer keyEvaluation;
}

	class net.sourceforge.fenixedu.domain.ExamExecutionCourse extends net.sourceforge.fenixedu.domain.EvaluationExecutionCourse {
		Integer keyExam;
	}


class net.sourceforge.fenixedu.domain.EvaluationMethod extends net.sourceforge.fenixedu.domain.DomainObject {
	String evaluationElements;
	String evaluationElementsEn;
	Integer keyExecutionCourse;
}


	

class net.sourceforge.fenixedu.domain.ExamStudentRoom extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyRoom;
	Integer keyStudent;
	Integer keyExam;
}


class net.sourceforge.fenixedu.domain.ExecutionCourse extends net.sourceforge.fenixedu.domain.DomainObject implements net.sourceforge.fenixedu.fileSuport.INode {
	String nome;
	Double theoreticalHours;
	String sigla;
	Double labHours;
	Integer keyExecutionPeriod;
	Double praticalHours;
	String comment;
	Double theoPratHours;
	
	interface "
	public String getSlideName();
	
	public net.sourceforge.fenixedu.fileSuport.INode getParentNode();

	public java.util.List getGroupProperties();
	
	public net.sourceforge.fenixedu.domain.IGroupProperties getGroupPropertiesByName(String name);
	
	public void addGroupPropertiesExecutionCourse(net.sourceforge.fenixedu.domain.IGroupPropertiesExecutionCourse groupPropertiesExecutionCourse);
	
	public void removeGroupPropertiesExecutionCourse(net.sourceforge.fenixedu.domain.IGroupPropertiesExecutionCourse groupPropertiesExecutionCourse);

	public boolean existsGroupPropertiesExecutionCourse(net.sourceforge.fenixedu.domain.IGroupPropertiesExecutionCourse groupPropertiesExecutionCourse);
		
	public boolean existsGroupPropertiesExecutionCourse();
	
	public boolean hasProposals();
	
    public boolean isMasterDegreeOnly();
    "
}


class net.sourceforge.fenixedu.domain.ExecutionDegree extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyPeriodExamsSecondSemester;
	Integer keyPeriodLessonsSecondSemester;
	Boolean temporaryExamMap;
	Integer keyPeriodExamsFirstSemester;
	Integer keyPeriodLessonsFirstSemester;
	Integer academicYear;
	Integer keyCurricularPlan;
	Integer keyCampus;
}


class net.sourceforge.fenixedu.domain.ExecutionPeriod extends net.sourceforge.fenixedu.domain.DomainObject implements net.sourceforge.fenixedu.fileSuport.INode, java.lang.Comparable{
	Integer keyExecutionYear;
	Date beginDate;
	Integer keyPreviousExecutionPeriod;
	Date endDate;
	String name;
	Integer semester;
	
	interface "
	void setState(net.sourceforge.fenixedu.util.PeriodState newState);

	net.sourceforge.fenixedu.util.PeriodState getState();
	"
}


class net.sourceforge.fenixedu.domain.ExecutionYear extends net.sourceforge.fenixedu.domain.DomainObject implements net.sourceforge.fenixedu.fileSuport.INode {
	Date beginDate;
	Date endDate;
	String year;
	
	interface "
	void setState(net.sourceforge.fenixedu.util.PeriodState newState);

	net.sourceforge.fenixedu.util.PeriodState getState();
	"
}


class net.sourceforge.fenixedu.domain.ExternalPerson extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyWorkLocation;
	Integer keyPerson;

	interface "
	    public void setPerson(net.sourceforge.fenixedu.domain.IPerson person);
		public net.sourceforge.fenixedu.domain.IPerson getPerson();
		public void setWorkLocation(net.sourceforge.fenixedu.domain.IWorkLocation workLocation);
		public net.sourceforge.fenixedu.domain.IWorkLocation getWorkLocation();
	"
	
}

class net.sourceforge.fenixedu.domain.support.FAQEntry extends net.sourceforge.fenixedu.domain.DomainObject {
	String answer;
	String question;
	Integer keyParentSection;

	interface "
    public IFAQSection getParentSection();

    public void setParentSection(IFAQSection parentSection);
    "
}


class net.sourceforge.fenixedu.domain.support.FAQSection extends net.sourceforge.fenixedu.domain.DomainObject {
	String sectionName;
	Integer keyParentSection;

	interface "
    public IFAQSection getParentSection();

    public void setParentSection(IFAQSection parentSection);
    "
}


class net.sourceforge.fenixedu.domain.gaugingTests.physics.GaugingTestResult extends net.sourceforge.fenixedu.domain.DomainObject {
    String p13;
    String p24;
    Double cf;
    String p17;
    String p28;
    String p25;
    String p2;
    String p11;
    String p22;
    String p3;
    String p15;
    Integer unanswered;
    Integer correct;
    String p21;
    String p7;
    String p5;
    String p4;
    Integer wrong;
    String p10;
    String p16;
    Integer test;
    String p27;
    String p8;
    String p6;
    String p1;
    String p9;
    String p14;
    String p26;
    String p18;
    String p23;
    String p12;
    String p19;
    String p20;
    Integer keyStudent;
}


class net.sourceforge.fenixedu.domain.classProperties.GeneralClassProperty extends net.sourceforge.fenixedu.domain.DomainObject {
    String ojbConcreteClass;
    
    interface "
    public net.sourceforge.fenixedu.util.classProperties.GeneralClassPropertyName getName();

    public void setName(net.sourceforge.fenixedu.util.classProperties.GeneralClassPropertyName name);

    public net.sourceforge.fenixedu.util.classProperties.GeneralClassPropertyValue getValue();

    public void setValue(net.sourceforge.fenixedu.util.classProperties.GeneralClassPropertyValue value);
    "
}


    class net.sourceforge.fenixedu.domain.classProperties.ExecutionCourseProperty extends net.sourceforge.fenixedu.domain.classProperties.GeneralClassProperty {
        Integer keyExecutionCourse;
    }


class net.sourceforge.fenixedu.domain.support.GlossaryEntry extends net.sourceforge.fenixedu.domain.DomainObject {
	String definition;
	String term;
}


class net.sourceforge.fenixedu.domain.grant.contract.GrantContract extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer costCenterKey;
	String endContractMotive;
	Integer keyGrantOwner;
	Integer contractNumber;
	Date dateAcceptTerm;
	Integer keyGrantType;
}


class net.sourceforge.fenixedu.domain.grant.contract.GrantContractMovement extends net.sourceforge.fenixedu.domain.DomainObject {
	Date departureDate;
	Integer keyGrantContract;
	String location;
	Date arrivalDate;
}


class net.sourceforge.fenixedu.domain.grant.contract.GrantContractRegime extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyTeacher;
	Integer keyGrantContract;
	Integer costCenterKey;
	Date dateBeginContract;
	Integer state;
	Date dateDispatchCC;
	Date dateSendDispatchCC;
	Date dateDispatchCD;
	Date dateSendDispatchCD;
	Date dateEndContract;
	
	interface "
	public Boolean getContractRegimeActive();
	"
}


class net.sourceforge.fenixedu.domain.grant.contract.GrantInsurance extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyGrantPaymentEntity;
	Double totalValue;
	Integer keyGrantContract;
	Date dateEndInsurance;
	Date dateBeginInsurance;
}


class net.sourceforge.fenixedu.domain.grant.contract.GrantOrientationTeacher extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyTeacher;
	Date beginDate;
	Date endDate;
	Integer keyContract;
}


class net.sourceforge.fenixedu.domain.grant.owner.GrantOwner extends net.sourceforge.fenixedu.domain.DomainObject {
	Date dateSendCGD;
	Integer cardCopyNumber;
	Integer keyPerson;
	Integer number;
}


class net.sourceforge.fenixedu.domain.grant.contract.GrantPart extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyGrantPaymentEntity;
	Integer keyResponsibleTeacher;
	Integer keyGrantSubsidy;
	Integer percentage;
}

class net.sourceforge.fenixedu.domain.grant.contract.GrantPaymentEntity extends net.sourceforge.fenixedu.domain.DomainObject {
    String number;
	String designation;
	String ojbConcreteClass;
	Integer keyResponsibleTeacher;
}

	class net.sourceforge.fenixedu.domain.grant.contract.GrantCostCenter extends net.sourceforge.fenixedu.domain.grant.contract.GrantPaymentEntity {
	}

	class net.sourceforge.fenixedu.domain.grant.contract.GrantProject extends net.sourceforge.fenixedu.domain.grant.contract.GrantPaymentEntity {
		Integer keyGrantCostCenter;
	}


class net.sourceforge.fenixedu.domain.grant.contract.GrantSubsidy extends net.sourceforge.fenixedu.domain.DomainObject {
	Double value;
	Integer keyGrantContract;
	Date dateEndSubsidy;
	Integer state;
	Double totalCost;
	Date dateBeginSubsidy;
	String valueFullName;
}


class net.sourceforge.fenixedu.domain.grant.contract.GrantType extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer minPeriodDays;
	String sigla;
	Integer maxPeriodDays;
	Double indicativeValue;
	Date state;
	String source;
	String name;
}


class net.sourceforge.fenixedu.domain.GratuitySituation extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer exemptionPercentage;
	String exemptionDescription;
	Double totalValue;
	Integer keyStudentCurricularPlan;
	Double exemptionValue;
	Integer keyEmployee;
	Integer keyGratuityValues;
	Double remainingValue;
	
	interface "
		public net.sourceforge.fenixedu.domain.IEmployee getEmployee();
	
		public void setEmployee(net.sourceforge.fenixedu.domain.IEmployee employee);
	
		public java.util.Date getWhen();
	
		public void setWhen(java.util.Date when);
	
		public net.sourceforge.fenixedu.util.ExemptionGratuityType getExemptionType(); 
	
		public void setExemptionType(net.sourceforge.fenixedu.util.ExemptionGratuityType exemptionType); 
	
		public net.sourceforge.fenixedu.domain.IGratuityValues getGratuityValues();
	
		public void setGratuityValues(net.sourceforge.fenixedu.domain.IGratuityValues gratuity);
	
		public net.sourceforge.fenixedu.domain.IStudentCurricularPlan getStudentCurricularPlan();
	
		public void setStudentCurricularPlan(net.sourceforge.fenixedu.domain.IStudentCurricularPlan studentCurricularPlan);
	
		public java.util.List getTransactionList();
	
		public void setTransactionList(java.util.List transactionList);
	"
	
}


class net.sourceforge.fenixedu.domain.GratuityValues extends net.sourceforge.fenixedu.domain.DomainObject {
	Double scholarShipValue;
	Double courseValue;
	Boolean proofRequestPayment;
	Double anualValue;
	Double creditValue;
	Double finalProofValue;
	Integer keyExecutionDegree;
	Integer keyEmployee;
	
	interface "
		public java.util.Date getWhen();
		
		public void setWhen(java.util.Date when);
		
		public java.util.Date getEndPayment();
		
		public void setEndPayment(java.util.Date endPayment);
		
		public java.util.Date getStartPayment();
		
		public void setStartPayment(java.util.Date startPayment);
		
		public net.sourceforge.fenixedu.domain.IEmployee getEmployee();
		
		public void setEmployee(net.sourceforge.fenixedu.domain.IEmployee employee);
		
		public net.sourceforge.fenixedu.domain.IExecutionDegree getExecutionDegree();
		
		public void setExecutionDegree(net.sourceforge.fenixedu.domain.IExecutionDegree executionDegree);
		
		public java.util.List getPaymentPhaseList();
		
		public void setPaymentPhaseList(java.util.List paymentPhaseList);
	"
}


class net.sourceforge.fenixedu.domain.finalDegreeWork.Group extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyExecutionDegree;
}


class net.sourceforge.fenixedu.domain.finalDegreeWork.GroupProposal extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyFinalDegreeWorkProposal;
	Integer orderOfPreference;
	Integer keyFinalDegreeDegreeWorkGroup;
}


class net.sourceforge.fenixedu.domain.finalDegreeWork.GroupStudent extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyFinalDegreeWorkProposalConfirmation;
	Integer keyStudent;
	Integer keyFinalDegreeDegreeWorkGroup;
}


class net.sourceforge.fenixedu.domain.GroupProperties extends net.sourceforge.fenixedu.domain.DomainObject {
        String projectDescription;
        Integer keyAttendsSet;
        Integer maximumCapacity;
        Integer groupMaximumNumber;
        Integer idealCapacity;
        Integer minimumCapacity;
        String name;
        
        interface "
        public net.sourceforge.fenixedu.util.EnrolmentGroupPolicyType getEnrolmentPolicy();
        
        public void setEnrolmentPolicy(net.sourceforge.fenixedu.util.EnrolmentGroupPolicyType enrolmentGroupPolicy);

        public net.sourceforge.fenixedu.util.TipoAula getShiftType();
        
        public void setShiftType(net.sourceforge.fenixedu.util.TipoAula shiftType);
        
        public java.util.Calendar getEnrolmentBeginDay();
        
		public void setEnrolmentBeginDay(java.util.Calendar enrolmentBeginDay);
		
		public java.util.Calendar getEnrolmentEndDay();

		public void setEnrolmentEndDay(java.util.Calendar enrolmentEndDay);
        
		public void addGroupPropertiesExecutionCourse(net.sourceforge.fenixedu.domain.IGroupPropertiesExecutionCourse groupPropertiesExecutionCourse);

		public void removeGroupPropertiesExecutionCourse(net.sourceforge.fenixedu.domain.IGroupPropertiesExecutionCourse groupPropertiesExecutionCourse);
		
	    public java.util.List getExecutionCourses();
        "
}

class net.sourceforge.fenixedu.domain.GroupPropertiesExecutionCourse extends net.sourceforge.fenixedu.domain.DomainObject {
        Integer keySenderExecutionCourse;
        Integer keySenderPerson;
        Integer keyExecutionCourse;
        Integer keyReceiverPerson;
        Integer keyGroupProperties;
        
        interface "
        public net.sourceforge.fenixedu.util.ProposalState getProposalState();
        
        public void setProposalState(net.sourceforge.fenixedu.util.ProposalState proposalState);
        "
}

class net.sourceforge.fenixedu.domain.Guide extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyContributor;
	String remarks;
	Integer version;
	Double total;
	Integer year;
	Integer keyPerson;
	Integer keyExecutionDegree;
	Integer number;
	
	
	interface "
		public net.sourceforge.fenixedu.domain.IGuideSituation getActiveSituation();
		
		public net.sourceforge.fenixedu.domain.IContributor getContributor();
		
		public net.sourceforge.fenixedu.domain.IExecutionDegree getExecutionDegree();
		
		public java.util.List getGuideEntries();
		
		public net.sourceforge.fenixedu.util.GuideRequester getGuideRequester();
		
		public net.sourceforge.fenixedu.domain.IPerson getPerson();
		
		public void setContributor(net.sourceforge.fenixedu.domain.IContributor contributor);
		
		public void setExecutionDegree(net.sourceforge.fenixedu.domain.IExecutionDegree execucao);
		
		public void setGuideEntries(java.util.List list);
		
		public void setGuideRequester(net.sourceforge.fenixedu.util.GuideRequester requester);
		
		public void setPerson(net.sourceforge.fenixedu.domain.IPerson pessoa);
		
		public net.sourceforge.fenixedu.util.PaymentType getPaymentType();
		
		public void setPaymentType(net.sourceforge.fenixedu.util.PaymentType type);
		
		public java.util.List getGuideSituations();
		
		public void setGuideSituations(java.util.List list);
		
		public java.util.Date getCreationDate();
		
		public void setCreationDate(java.util.Date date);
		
		public java.util.Date getPaymentDate();
		
		public void setPaymentDate(java.util.Date date);
		
		public java.util.List getReimbursementGuides();
		
		public void setReimbursementGuides(java.util.List reimbursementGuides);
	"
}

class net.sourceforge.fenixedu.domain.GuideEntry extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyGuide;
	Double price;
	String description;
	Integer quantity;
	
	interface "
    	public net.sourceforge.fenixedu.util.DocumentType getDocumentType();
    	
    	public net.sourceforge.fenixedu.util.GraduationType getGraduationType();
    	
    	public net.sourceforge.fenixedu.domain.IGuide getGuide();
    	
    	public void setDocumentType(net.sourceforge.fenixedu.util.DocumentType type);
    	
    	public void setGraduationType(net.sourceforge.fenixedu.util.GraduationType type);
    	
    	public void setGuide(net.sourceforge.fenixedu.domain.IGuide guide);
    	
    	public java.util.List getReimbursementGuideEntries();
    	
    	public void setReimbursementGuideEntries(java.util.List reimbursementGuideEntries);
	"
}

class net.sourceforge.fenixedu.domain.GuideSituation extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyGuide;
	String remarks;
	
	interface "
	    public java.util.Date getDate();
	    
	    public net.sourceforge.fenixedu.domain.IGuide getGuide();
    	
    	public net.sourceforge.fenixedu.util.SituationOfGuide getSituation();
    	
    	public net.sourceforge.fenixedu.util.State getState();
    	
    	public void setDate(java.util.Date date);
    	
    	public void setGuide(net.sourceforge.fenixedu.domain.IGuide guide);
    	
    	public void setSituation(net.sourceforge.fenixedu.util.SituationOfGuide guide);
    	
    	public void setState(net.sourceforge.fenixedu.util.State state);
	"
}

class net.sourceforge.fenixedu.domain.InsuranceValue extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyExecutionYear;
	Double annualValue;
	
	interface "
    	public java.util.Date getEndDate();
    	
    	public void setEndDate(java.util.Date endDate);
	"
}

class net.sourceforge.fenixedu.domain.Item extends net.sourceforge.fenixedu.domain.DomainObject implements net.sourceforge.fenixedu.fileSuport.INode {
	Integer keySection;
	Boolean urgent;
	Integer itemOrder;
	String information;
	String name;
}

class net.sourceforge.fenixedu.domain.Lesson extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyExecutionPeriod;
	Integer keyShift;
	Integer keyRoomOccupation;
	Integer chaveSala;

	interface "
	public net.sourceforge.fenixedu.util.DiaSemana getDiaSemana();
	
	public void setDiaSemana(net.sourceforge.fenixedu.util.DiaSemana diaSemana);

	public java.util.Calendar getInicio();
	
	public void setInicio(java.util.Calendar inicio);

	public java.util.Calendar getFim();
	
	public void setFim(java.util.Calendar fim);

	public net.sourceforge.fenixedu.util.TipoAula getTipo();
	
	public void setTipo(net.sourceforge.fenixedu.util.TipoAula tipo);

	public double hours();
	"
}


class net.sourceforge.fenixedu.domain.Mark extends net.sourceforge.fenixedu.domain.DomainObject {
    String publishedMark;
    String mark;
    Integer keyEvaluation;
    Integer keyAttend;
}


class net.sourceforge.fenixedu.domain.MasterDegreeCandidate extends net.sourceforge.fenixedu.domain.DomainObject {
	Double average;
	String specializationArea;
	Integer majorDegreeYear;
	String majorDegreeSchool;
	Integer executionDegreeKey;
	Integer personKey;
	Integer substituteOrder;
	Double givenCredits;
	String givenCreditsRemarks;
	String majorDegree;
	Integer candidateNumber;
	
	interface "
		public net.sourceforge.fenixedu.domain.ICandidateSituation getActiveCandidateSituation();
		
		public net.sourceforge.fenixedu.domain.IPerson getPerson();
		
		public java.util.List getSituations();
		
		public net.sourceforge.fenixedu.util.Specialization getSpecialization();
		
		public void setPerson(net.sourceforge.fenixedu.domain.IPerson pessoa);
		
		public void setSituations(java.util.List list);
		
		public void setSpecialization(net.sourceforge.fenixedu.util.Specialization specialization);
	"
}

class net.sourceforge.fenixedu.domain.MasterDegreeProofVersion extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyMasterDegreeThesis;
	Integer attachedCopiesNumber;
	Integer keyEmployee;
	
	interface "
	    public void setLastModification(java.sql.Timestamp lastModification);
    	
    	public java.sql.Timestamp getLastModification();
	    
	    public void setMasterDegreeThesis(net.sourceforge.fenixedu.domain.IMasterDegreeThesis masterDegreeThesis);
	    
	    public net.sourceforge.fenixedu.domain.IMasterDegreeThesis getMasterDegreeThesis();
	    
	    public void setProofDate(java.util.Date proofDate);
	    
	    public java.util.Date getProofDate();
	    
	    public void setThesisDeliveryDate(java.util.Date thesisDeliveryDate);
	    
	    public java.util.Date getThesisDeliveryDate();
	    
	    public void setFinalResult(net.sourceforge.fenixedu.util.MasterDegreeClassification finalResult);
	    
	    public net.sourceforge.fenixedu.util.MasterDegreeClassification getFinalResult();
	    
	    public void setResponsibleEmployee(net.sourceforge.fenixedu.domain.IEmployee responsibleEmployee);
	    
	    public net.sourceforge.fenixedu.domain.IEmployee getResponsibleEmployee();
	    
	    public void setCurrentState(net.sourceforge.fenixedu.util.State state);
	    
	    public net.sourceforge.fenixedu.util.State getCurrentState();
	    
	    public void setJuries(java.util.List juries);
	    
	    public java.util.List getJuries();
	    
	    public java.util.List getExternalJuries();
	    
	    public void setExternalJuries(java.util.List externalJuries);
	"
	
}

class net.sourceforge.fenixedu.domain.MasterDegreeThesis extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyStudentCurricularPlan;
	
	interface "
		public void setMasterDegreeProofVersions(java.util.List masterDegreeProofVersions);
		
		public java.util.List getMasterDegreeProofVersions();
		
		public void setMasterDegreeThesisDataVersions(java.util.List masterDegreeThesisDataVersions);
		
		public java.util.List getMasterDegreeThesisDataVersions();
		
		public void setStudentCurricularPlan(net.sourceforge.fenixedu.domain.IStudentCurricularPlan studentCurricularPlan);
		
		public net.sourceforge.fenixedu.domain.IStudentCurricularPlan getStudentCurricularPlan();
	"
}

class net.sourceforge.fenixedu.domain.MasterDegreeThesisDataVersion extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyMasterDegreeThesis;
	String dissertationTitle;
	Integer keyEmployee;
	
	interface "
	    public void setAssistentGuiders(java.util.List assistentGuiders);
	    
	    public java.util.List getAssistentGuiders();
	    
	    public void setExternalAssistentGuiders(java.util.List externalAssistentGuiders);
	    
	    public java.util.List getExternalAssistentGuiders();
	    
	    public void setGuiders(java.util.List guiders);
	    
	    public java.util.List getGuiders();
	    
	    public java.util.List getExternalGuiders();
	    
	    public void setExternalGuiders(java.util.List externalGuiders);
	    
	    public void setLastModification(java.sql.Timestamp lastModification);
	    
	    public java.sql.Timestamp getLastModification();
	    
	    public void setMasterDegreeThesis(net.sourceforge.fenixedu.domain.IMasterDegreeThesis masterDegreeThesis);
	    
	    public net.sourceforge.fenixedu.domain.IMasterDegreeThesis getMasterDegreeThesis();
	    
	    public void setResponsibleEmployee(net.sourceforge.fenixedu.domain.IEmployee responsibleEmployee);
	    
	    public net.sourceforge.fenixedu.domain.IEmployee getResponsibleEmployee();
	    
	    public void setCurrentState(net.sourceforge.fenixedu.util.State currentState);
	    
	    public net.sourceforge.fenixedu.util.State getCurrentState();
	"
}


class net.sourceforge.fenixedu.domain.degree.enrollment.NotNeedToEnrollInCurricularCourse extends net.sourceforge.fenixedu.domain.DomainObject {
    Integer studentCurricularPlanKey;
    Integer curricularCourseKey;
}


class net.sourceforge.fenixedu.domain.inquiries.OldInquiriesCoursesRes extends net.sourceforge.fenixedu.domain.DomainObject {
	Double tolerance2_3;
	Double deviation2_3;
	Double tolerance2_2;
	Integer numAnswers2_4;
	Integer gepCourseId;
	Integer numAnswers2_5_number;
	Double average2_8;
	Integer numAnswers2_3;
	String gepCourseName;
	String average2_7;
	Double numberEvaluated;
	Integer numAnswers2_6;
	Double tolerance2_4;
	Double deviation2_2;
	Double average2_6;
	Integer semester;
	Integer numAnswers2_7;
	Double average2_3;
	Integer numAnswers2_8;
	Integer keyExecutionPeriod;
	Double tolerance2_6;
	Double deviation2_4;
	Double numberApproved;
	Integer curricularYear;
	Double average2_4;
	Double tolerance2_5;
	Double deviation2_5;
	Integer firstEnrollment;
	Double average2_2;
	String courseCode;
	Integer keyDegree;
	Double average2_5;
	Integer numAnswers2_2;
	Double numberEnrollments;
	Integer gepExecutionYear;
	Double representationQuota;
	Double deviation2_8;
	Double deviation2_6;
	Double tolerance2_8;
	Integer numAnswers2_5_text;
	Integer numberAnswers;
	Integer inquiryId;
}


class net.sourceforge.fenixedu.domain.inquiries.OldInquiriesSummary extends net.sourceforge.fenixedu.domain.DomainObject {
	Double average3_9;
	Double average3_4_numerical;
	Integer gepCourseId;
	Double average2_8;
	Double roomAverage;
	String average3_3_interval;
	String gepCourseName;
	Integer numberEvaluated;
	Double averageAppreciationTeachers;
	Double average3_3_numerical;
	Double averageAppreciationCourse;
	Double average2_6;
	Integer semester;
	Double average6_2;
	Double average2_7_numerical;
	Double average2_3;
	Double average3_6;
	Integer keyExecutionPeriod;
	String average2_7_interval;
	Integer numberApproved;
	Integer curricularYear;
	Double average6_1;
	Double average2_4;
	Double average3_11;
	Double average3_10;
	String average3_4_interval;
	String gepDegreeName;
	Double firstEnrollment;
	Double average2_2;
	String courseCode;
	Integer keyDegree;
	Double average3_7;
	Double average2_5;
	Integer numberEnrollments;
	Integer gepExecutionYear;
	Double average3_5;
	Double representationQuota;
	Double average6_3;
	Double average3_8;
	Integer numberAnswers;
	Integer inquiryId;
}


class net.sourceforge.fenixedu.domain.inquiries.OldInquiriesTeachersRes extends net.sourceforge.fenixedu.domain.DomainObject {
	String classTypeLong;
	Double average3_9;
	Double deviation3_4;
	Double tolerance3_4;
	Integer numAnswers3_5;
	Integer keyTeacher;
	Double tolerance3_10;
	String average3_4;
	String classType;
	Integer numAnswers3_7;
	Double tolerance3_5;
	String active;
	Integer numAnswers3_8;
	Integer numAnswers3_9;
	Double average3_6;
	Integer mail;
	Double average3_11;
	Integer numAnswers3_3;
	Double deviation3_7;
	String courseCode;
	Integer numAnswers3_10;
	Double tolerance3_11;
	Integer gepExecutionYear;
	Double deviation3_6;
	Integer numAnswers3_4;
	Double average3_8;
	Integer inquiryId;
	Double tolerance3_6;
	Integer gepCourseId;
	Integer numAnswers3_11;
	String average3_3;
	Double tolerance3_3;
	String gepCourseName;
	Double deviation3_11;
	Double deviation3_10;
	Double deviation3_3;
	Integer semester;
	Double tolerance3_8;
	Integer keyExecutionPeriod;
	String category;
	Double deviation3_8;
	Integer curricularYear;
	Double tolerance3_7;
	Double deviation3_5;
	Double average3_10;
	Integer totalNumberAnswers;
	String teacherName;
	Integer teacherNumber;
	Integer keyDegree;
	Integer numAnswers3_6;
	Double average3_7;
	Double average3_5;
	Double tolerance3_9;
	Integer departmentCode;
	Double deviation3_9;
}


class net.sourceforge.fenixedu.domain.teacher.OldPublication extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyTeacher;
	Date lastModificationDate;
	String publication;
	
	interface "
	public net.sourceforge.fenixedu.util.OldPublicationType getOldPublicationType();

	public void setOldPublicationType(net.sourceforge.fenixedu.util.OldPublicationType oldPublicationType);
	"
}

class net.sourceforge.fenixedu.domain.PaymentPhase extends net.sourceforge.fenixedu.domain.DomainObject {
	Double value;
	String description;
	Integer keyGratuityValues;
	
	interface "
	    public java.util.Date getEndDate();
	    
	    public void setEndDate(java.util.Date endDate);
	    
	    public java.util.Date getStartDate();
	    
	    public void setStartDate(java.util.Date startDate);
	    
	    public net.sourceforge.fenixedu.domain.IGratuityValues getGratuityValues();
	    
	    public void setGratuityValues(net.sourceforge.fenixedu.domain.IGratuityValues gratuityValues);
	    
	    public java.util.List getTransactionList();
	    
	    public void setTransactionList(java.util.List transactionList);
	"
}

class net.sourceforge.fenixedu.domain.Period extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyPeriod;
	
	interface"
	public java.util.Calendar getEndDate();
	
	public void setEndDate(java.util.Calendar calendar);

	public java.util.Calendar getStartDate();
	
	public void setStartDate(java.util.Calendar calendar);

	public net.sourceforge.fenixedu.domain.IPeriod getNextPeriod();
	
	public void setNextPeriod(net.sourceforge.fenixedu.domain.IPeriod nextPeriod);

	public java.util.Calendar getEndDateOfComposite();
	
	public boolean intersectPeriods(IPeriod period);
	"
}

class net.sourceforge.fenixedu.domain.Person extends net.sourceforge.fenixedu.domain.DomainObject {
	String localidade;
	String codigoFiscal;
	String telemovel;
	String enderecoWeb;
	Date dataValidadeDocumentoIdentificacao;
	String distritoMorada;
	String numeroDocumentoIdentificacao;
	Integer chavePais;
	String profissao;
	String concelhoNaturalidade;
	Date dataEmissaoDocumentoIdentificacao;
	String morada;
	Boolean availableWebSite;
	String nacionalidade;
	String numContribuinte;
	String localidadeCodigoPostal;
	String username;
	String telefone;
	String localEmissaoDocumentoIdentificacao;
	String distritoNaturalidade;
	String password;
	Boolean availableEmail;
	String workPhone;
	String nome;
	String freguesiaNaturalidade;
	String codigoPostal;
	String nomePai;
	String nomeMae;
	Boolean availablePhoto;
	String email;
	String concelhoMorada;
	Date nascimento;
	String freguesiaMorada;

	interface "
    public net.sourceforge.fenixedu.domain.person.MaritalStatus getMaritalStatus();

    public net.sourceforge.fenixedu.domain.person.Gender getGender();

    public net.sourceforge.fenixedu.domain.person.IDDocumentType getIdDocumentType();

    public void setMaritalStatus(net.sourceforge.fenixedu.domain.person.MaritalStatus maritalStatus);

    public void setGender(net.sourceforge.fenixedu.domain.person.Gender gender);

    public void setIdDocumentType(net.sourceforge.fenixedu.domain.person.IDDocumentType iDType);

    public String getSlideName();
    "
}

class net.sourceforge.fenixedu.domain.PersonAccount extends net.sourceforge.fenixedu.domain.DomainObject {
	Double balance;
	Integer keyPerson;

	interface "
	    public net.sourceforge.fenixedu.domain.IPerson getPerson();
	    
	    public void setPerson(net.sourceforge.fenixedu.domain.IPerson person);
	    
	    public java.util.List getTransactions();
	    
	    public void setTransactions(java.util.List transactions);
	"
}

class net.sourceforge.fenixedu.domain.PersonRole extends net.sourceforge.fenixedu.domain.DomainObject {
    Integer keyPerson;
    Integer keyRole;
}


class net.sourceforge.fenixedu.domain.precedences.Precedence extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyCurricularCourse;
	
	interface " 
 		public net.sourceforge.fenixedu.domain.curriculum.CurricularCourseEnrollmentType evaluate(net.sourceforge.fenixedu.domain.precedences.PrecedenceContext precedenceContext);
	"
}

class net.sourceforge.fenixedu.domain.Price extends net.sourceforge.fenixedu.domain.DomainObject {
	String description;
	Double price;
	Integer internalCode;
	
	interface "
	    public net.sourceforge.fenixedu.util.DocumentType getDocumentType();
	    
	    public net.sourceforge.fenixedu.util.GraduationType getGraduationType();
	    
	    public void setDocumentType(net.sourceforge.fenixedu.util.DocumentType type);
	    
	    public void setGraduationType(net.sourceforge.fenixedu.util.GraduationType type);
	"
}

class net.sourceforge.fenixedu.domain.Professorship extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyTeacher;
	Integer keyExecutionCourse;
	Double hours;
	interface "
	public boolean belongsToExecutionPeriod(net.sourceforge.fenixedu.domain.IExecutionPeriod executionPeriod);
	
	public void beforeUpdate(org.apache.ojb.broker.PersistenceBroker broker) throws org.apache.ojb.broker.PersistenceBrokerException;
	
	public void afterUpdate(org.apache.ojb.broker.PersistenceBroker broker) throws org.apache.ojb.broker.PersistenceBrokerException;
	
	public void beforeInsert(org.apache.ojb.broker.PersistenceBroker broker) throws org.apache.ojb.broker.PersistenceBrokerException;
	
	public void afterInsert(org.apache.ojb.broker.PersistenceBroker broker) throws org.apache.ojb.broker.PersistenceBrokerException;
	
	public void beforeDelete(org.apache.ojb.broker.PersistenceBroker broker) throws org.apache.ojb.broker.PersistenceBrokerException;
	
	public void afterDelete(org.apache.ojb.broker.PersistenceBroker broker) throws org.apache.ojb.broker.PersistenceBrokerException;
	
	public void afterLookup(org.apache.ojb.broker.PersistenceBroker broker) throws org.apache.ojb.broker.PersistenceBrokerException;
	"
}


class net.sourceforge.fenixedu.domain.finalDegreeWork.Proposal extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer minimumNumberOfGroupElements;
	String title;
	Integer orientatorsCreditsPercentage;
	Integer keyCoorientator;
	Integer keyGroupAttributedByTeacher;
	String companionName;
	String deliverable;
	Integer keyExecutionDegree;
	String url;
	String companyAdress;
	Integer keyGroupAttributed;
	Integer coorientatorsCreditsPercentage;
	String location;
	Integer proposalNumber;
	String observations;
	Integer companionPhone;
	String framing;
	Integer maximumNumberOfGroupElements;
	String requirements;
	Integer keyOrientator;
	String objectives;
	String companyName;
	String description;
	String companionMail;
	
	interface "
	public net.sourceforge.fenixedu.util.TipoCurso getDegreeType();
    public void setDegreeType(net.sourceforge.fenixedu.util.TipoCurso degreeType);
    public net.sourceforge.fenixedu.util.FinalDegreeWorkProposalStatus getStatus();
    public void setStatus(net.sourceforge.fenixedu.util.FinalDegreeWorkProposalStatus status);
	"
}

class net.sourceforge.fenixedu.domain.projectsManagement.ProjectAccess extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyProject;
	Integer keyPerson;
	Integer keyProjectCoordinator;

	interface " 
    public abstract java.util.Calendar getBeginDate();

    public abstract void setBeginDate(java.util.Calendar beginDate);

    public abstract java.util.Calendar getEndDate();

    public abstract void setEndDate(java.util.Calendar endDate);
    "
}


class net.sourceforge.fenixedu.domain.Qualification extends net.sourceforge.fenixedu.domain.DomainObject {
    Date lastModificationDate;
    String degreeRecognition;
    String equivalenceSchool;
    String mark;
    String title;
    String specializationArea;
    Date date;
    Integer personKey;
    String branch;
    Date equivalenceDate;
    String degree;
    Integer countryKey;
    String school;
}

class net.sourceforge.fenixedu.domain.reimbursementGuide.ReimbursementGuide extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyGuide;
	Integer number;
	
	interface "
		public java.util.Calendar getCreationDate();
		
		public void setCreationDate(java.util.Calendar creationDate);
		
		public net.sourceforge.fenixedu.domain.IGuide getGuide();
		
		public void setGuide(net.sourceforge.fenixedu.domain.IGuide paymentGuide);
		
		public java.util.List getReimbursementGuideSituations();
		
		public void setReimbursementGuideSituations(java.util.List reimbursementGuideSituations);
		
		public IReimbursementGuideSituation getActiveReimbursementGuideSituation();
		
		public java.util.List getReimbursementGuideEntries();
		
		public void setReimbursementGuideEntries(java.util.List reimbursementGuideEntries);
	"
}

class net.sourceforge.fenixedu.domain.reimbursementGuide.ReimbursementGuideEntry extends net.sourceforge.fenixedu.domain.DomainObject {
	String justification;
	Double value;
	Integer keyReimbursementGuide;
	Integer keyGuideEntry;
	
	interface "
	    public net.sourceforge.fenixedu.domain.IGuideEntry getGuideEntry();
	    
	    public void setGuideEntry(net.sourceforge.fenixedu.domain.IGuideEntry guideEntry);
	    
	    public net.sourceforge.fenixedu.domain.reimbursementGuide.IReimbursementGuide getReimbursementGuide();
	    
	    public void setReimbursementGuide(net.sourceforge.fenixedu.domain.reimbursementGuide.IReimbursementGuide reimbursementGuide);
	"
}


class net.sourceforge.fenixedu.domain.ResponsibleFor extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyExecutionCourse;
	Integer keyTeacher;
}

class net.sourceforge.fenixedu.domain.precedences.Restriction extends net.sourceforge.fenixedu.domain.DomainObject {
    String ojbConcreteClass;
	Integer keyPrecedence;	
	
	interface " 	
		public net.sourceforge.fenixedu.domain.curriculum.CurricularCourseEnrollmentType evaluate(net.sourceforge.fenixedu.domain.precedences.PrecedenceContext precedenceContext);
	"
}


class net.sourceforge.fenixedu.domain.precedences.RestrictionByCurricularCourse extends net.sourceforge.fenixedu.domain.precedences.Restriction {
	Integer keyPrecedentCurricularCourse;
}


class net.sourceforge.fenixedu.domain.precedences.RestrictionByNumberOfCurricularCourses extends net.sourceforge.fenixedu.domain.precedences.Restriction {
	Integer numberOfCurricularCourses;
}


class net.sourceforge.fenixedu.domain.precedences.RestrictionByNumberOfDoneCurricularCourses extends net.sourceforge.fenixedu.domain.precedences.RestrictionByNumberOfCurricularCourses {
}

class net.sourceforge.fenixedu.domain.precedences.RestrictionDoneCurricularCourse extends net.sourceforge.fenixedu.domain.precedences.RestrictionByCurricularCourse {
}

class net.sourceforge.fenixedu.domain.precedences.RestrictionDoneOrHasEverBeenEnrolledInCurricularCourse extends net.sourceforge.fenixedu.domain.precedences.RestrictionDoneCurricularCourse {
}

class net.sourceforge.fenixedu.domain.precedences.RestrictionHasEverBeenOrIsCurrentlyEnrolledInCurricularCourse extends net.sourceforge.fenixedu.domain.precedences.RestrictionDoneOrHasEverBeenEnrolledInCurricularCourse {
}

class net.sourceforge.fenixedu.domain.precedences.RestrictionHasEverBeenOrWillBeAbleToBeEnrolledInCurricularCourse extends net.sourceforge.fenixedu.domain.precedences.RestrictionDoneOrHasEverBeenEnrolledInCurricularCourse {
}

class net.sourceforge.fenixedu.domain.precedences.RestrictionNotDoneCurricularCourse extends net.sourceforge.fenixedu.domain.precedences.RestrictionByCurricularCourse {
}

class net.sourceforge.fenixedu.domain.precedences.RestrictionNotEnrolledInCurricularCourse extends net.sourceforge.fenixedu.domain.precedences.RestrictionNotDoneCurricularCourse {
}

class net.sourceforge.fenixedu.domain.precedences.RestrictionPeriodToApply extends net.sourceforge.fenixedu.domain.precedences.Restriction {
	interface "
    	public net.sourceforge.fenixedu.util.PeriodToApplyRestriction getPeriodToApplyRestriction();
    	public void setPeriodToApplyRestriction(net.sourceforge.fenixedu.util.PeriodToApplyRestriction periodToApplyRestriction);
	"
}


class net.sourceforge.fenixedu.domain.Role extends net.sourceforge.fenixedu.domain.DomainObject {
	String portalSubApplication;
	String pageNameProperty;
	String page;

	interface "
    public net.sourceforge.fenixedu.domain.person.RoleType getRoleType();

    public void setRoleType(net.sourceforge.fenixedu.domain.person.RoleType roleType);
    "
}


class net.sourceforge.fenixedu.domain.Room extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyBuilding;
	String nome;
	Integer capacidadeNormal;
	Integer capacidadeExame;
	Integer piso;
	
	interface "
	public String getEdificio();
    public void setEdificio(String edificio);
	public net.sourceforge.fenixedu.util.TipoSala getTipo();
    public void setTipo(net.sourceforge.fenixedu.util.TipoSala tipo);
	"
}

class net.sourceforge.fenixedu.domain.RoomOccupation extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer weekOfQuinzenalStart;
	Integer keyRoom;
	Integer frequency;
	Integer keyPeriod;

	interface"
	public net.sourceforge.fenixedu.util.DiaSemana getDayOfWeek();
	
	public void setDayOfWeek(net.sourceforge.fenixedu.util.DiaSemana semana);

	public java.util.Calendar getEndTime();
	
	public void setEndTime(java.util.Calendar calendar);

	public java.util.Calendar getStartTime();

	public void setStartTime(java.util.Calendar calendar);

	public boolean roomOccupationForDateAndTime(net.sourceforge.fenixedu.domain.IRoomOccupation roomOccupation);
	
	public boolean roomOccupationForDateAndTime(net.sourceforge.fenixedu.domain.IPeriod period, java.util.Calendar startTime, java.util.Calendar endTime, net.sourceforge.fenixedu.util.DiaSemana dayOfWeek, Integer frequency, Integer week, net.sourceforge.fenixedu.domain.IRoom room);
	
	public boolean roomOccupationForDateAndTime(net.sourceforge.fenixedu.domain.IPeriod period, java.util.Calendar startTime, java.util.Calendar endTime, net.sourceforge.fenixedu.util.DiaSemana dayOfWeek, Integer frequency, Integer week);
	"
}


class net.sourceforge.fenixedu.domain.finalDegreeWork.Scheduleing extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer maximumNumberOfStudents;
	Date endOfProposalPeriodDate;
	Date endOfProposalPeriodTime;
	Date endOfCandidacyPeriodTime;
	Date startOfCandidacyPeriodDate;
	Date endOfCandidacyPeriodDate;
	Integer minimumNumberOfStudents;
	Integer maximumNumberOfProposalCandidaciesPerGroup;
	Integer minimumNumberOfCompletedCourses;
	Integer keyExecutionDegree;
	Integer currentProposalNumber;
	Date startOfProposalPeriodTime;
	Date startOfProposalPeriodDate;
	Date startOfCandidacyPeriodTime;
	
	interface "
	public java.util.Date getEndOfProposalPeriod();
    public void setEndOfProposalPeriod(java.util.Date endOfProposalPeriod);
    public java.util.Date getStartOfProposalPeriod();
    public void setStartOfProposalPeriod(java.util.Date startOfProposalPeriod);
    public java.util.Date getStartOfCandidacyPeriod();
    public void setStartOfCandidacyPeriod(java.util.Date startOfCandidacyPeriod);
    public java.util.Date getEndOfCandidacyPeriod();
    public void setEndOfCandidacyPeriod(java.util.Date endOfCandidacyPeriod);
	"
}


class net.sourceforge.fenixedu.domain.SchoolClass extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyExecutionDegree;
	String nome;
	Integer keyExecutionPeriod;
	Integer anoCurricular;
}


class net.sourceforge.fenixedu.domain.SchoolClassShift extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer chaveTurma;
	Integer chaveTurno;
}

class net.sourceforge.fenixedu.domain.SecretaryEnrolmentStudent extends net.sourceforge.fenixedu.domain.DomainObject {
    String reasonDescription;
    Integer keyStudent;

    interface "
    public abstract net.sourceforge.fenixedu.util.SecretaryEnrolmentStudentReason getReasonType();
    public abstract void setReasonType(net.sourceforge.fenixedu.util.SecretaryEnrolmentStudentReason reasonType);
    "
}


class net.sourceforge.fenixedu.domain.ScientificArea extends net.sourceforge.fenixedu.domain.DomainObject {
	String name;
}

class net.sourceforge.fenixedu.domain.Section extends net.sourceforge.fenixedu.domain.DomainObject implements net.sourceforge.fenixedu.fileSuport.INode {
	Integer keySuperiorSection;
	Integer sectionOrder;
	Integer keySite;
	String name;
	Date lastModifiedDate;
}

class net.sourceforge.fenixedu.domain.Shift extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer availabilityFinal;
	Integer chaveDisciplinaExecucao;
	String nome;
	Integer lotacao;
	
	interface "
	public net.sourceforge.fenixedu.util.TipoAula getTipo();
    public void setTipo(net.sourceforge.fenixedu.util.TipoAula tipo);
    public Integer getOcupation();
    public void setOcupation(Integer integer);
    public Double getPercentage();
    public void setPercentage(Double percentage);
    public double hours();
	"
}


class net.sourceforge.fenixedu.domain.ShiftProfessorship extends net.sourceforge.fenixedu.domain.DomainObject {
    Integer keyShift;
    Integer keyProfessorship;
    Double percentage;
}


class net.sourceforge.fenixedu.domain.ShiftStudent extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyShift;
	Integer keyStudent;
}

class net.sourceforge.fenixedu.domain.gratuity.masterDegree.SibsPaymentFile extends net.sourceforge.fenixedu.domain.DomainObject {
	String filename;

	interface "
		public java.util.List getSibsPaymentFileEntries();
    	public void setSibsPaymentFileEntries(java.util.List sibsPaymentFileEntries);
	"
	
}

class net.sourceforge.fenixedu.domain.gratuity.masterDegree.SibsPaymentFileEntry extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer studentNumber;
	Integer keySibsPaymentFile;
	Integer year;
	Double payedValue;
	
	interface "
		public net.sourceforge.fenixedu.util.gratuity.SibsPaymentType getPaymentType();
		
		public void setPaymentType(net.sourceforge.fenixedu.util.gratuity.SibsPaymentType paymentType);
		
		public net.sourceforge.fenixedu.domain.gratuity.masterDegree.ISibsPaymentFile getSibsPaymentFile();
		
		public void setSibsPaymentFile(net.sourceforge.fenixedu.domain.gratuity.masterDegree.ISibsPaymentFile sibsPaymentFile);
		
		public java.sql.Timestamp getTransactionDate();
		
		public void setTransactionDate(java.sql.Timestamp transactionDate);
		
		public net.sourceforge.fenixedu.domain.gratuity.SibsPaymentStatus getPaymentStatus();
		
		public void setPaymentStatus(net.sourceforge.fenixedu.domain.gratuity.SibsPaymentStatus paymentStatus);
	"
	
}

class net.sourceforge.fenixedu.domain.Site extends net.sourceforge.fenixedu.domain.DomainObject {
	String style;
	String initialStatement;
	String mail;
	Integer keyExecutionCourse;
	String introduction;
	String alternativeSite;
}



class net.sourceforge.fenixedu.domain.Student extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer studentKindKey;
	Double entryGrade;
	String istUniversity;
	Boolean enrollmentForbidden;
	String ingression;
	String contigent;
	Integer personKey;
	Boolean payedTuition;
	Boolean specialSeason;
	Integer keyRegistrationYear;
	Integer number;
	
	interface "

	    public net.sourceforge.fenixedu.util.StudentState getState();
	    public net.sourceforge.fenixedu.util.TipoCurso getDegreeType();
	    public net.sourceforge.fenixedu.util.AgreementType getAgreementType();
	    public void setAgreementType(net.sourceforge.fenixedu.util.AgreementType agreementType);
	    public void setState(net.sourceforge.fenixedu.util.StudentState state);
	    public void setDegreeType(net.sourceforge.fenixedu.util.TipoCurso degreeType);
	    public net.sourceforge.fenixedu.util.EntryPhase getEntryPhase();
	    public void setEntryPhase(net.sourceforge.fenixedu.util.EntryPhase entryPhase);
	    public net.sourceforge.fenixedu.domain.IStudentCurricularPlan getActiveStudentCurricularPlan();
	"
			
}


class net.sourceforge.fenixedu.domain.gesdis.StudentCourseReport extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyCurricularCourse;
	Date lastModificationDate;
	String strongPoints;
	String weakPoints;
	String studentReport;
}

class net.sourceforge.fenixedu.domain.StudentCurricularPlan extends net.sourceforge.fenixedu.domain.DomainObject {
    
    Integer branchKey;
    Double  classification;
    Integer completedCourses;
    Integer degreeCurricularPlanKey;
    Integer employeeKey;
    Integer enrolledCourses;
    Double givenCredits;
    String observations;
    String ojbConcreteClass;
    Date startDate;
    Integer studentKey;
    Date when;
    
    interface "
    
        public boolean areNewAreasCompatible(net.sourceforge.fenixedu.domain.IBranch specializationArea, net.sourceforge.fenixedu.domain.IBranch secundaryArea)
            throws net.sourceforge.fenixedu.persistenceTier.ExcepcaoPersistencia, net.sourceforge.fenixedu.applicationTier.Servico.exceptions.BothAreasAreTheSameServiceException, net.sourceforge.fenixedu.applicationTier.Servico.exceptions.InvalidArgumentsServiceException;
    
        public java.util.List getAllStudentEnrolledEnrollmentsInExecutionPeriod(net.sourceforge.fenixedu.domain.IExecutionPeriod executionPeriod);
        public java.util.List getAprovedEnrolmentsInExecutionPeriod(final net.sourceforge.fenixedu.domain.IExecutionPeriod executionPeriod);
        public boolean getCanChangeSpecializationArea();
        public Integer getCreditsInSecundaryArea();
        public Integer getCreditsInSpecializationArea();
        public net.sourceforge.fenixedu.util.StudentCurricularPlanState getCurrentState();
        public Integer getCurricularCourseAcumulatedEnrollments(net.sourceforge.fenixedu.domain.ICurricularCourse curricularCourse);
        public net.sourceforge.fenixedu.domain.curriculum.CurricularCourseEnrollmentType getCurricularCourseEnrollmentType(
                net.sourceforge.fenixedu.domain.ICurricularCourse curricularCourse, net.sourceforge.fenixedu.domain.IExecutionPeriod currentExecutionPeriod);
        public java.util.List getCurricularCoursesToEnroll(net.sourceforge.fenixedu.domain.IExecutionPeriod executionPeriod) throws net.sourceforge.fenixedu.domain.exceptions.FenixDomainException;
        public java.util.List getEnrollmentReports();
        public Integer getMaximumNumberOfAcumulatedEnrollments();
        public Integer getMaximumNumberOfCoursesToEnroll();
        public Integer getMinimumNumberOfCoursesToEnroll();
        public int getNumberOfApprovedCurricularCourses();
        public int getNumberOfEnrolledCurricularCourses();
        public net.sourceforge.fenixedu.domain.IBranch getSecundaryBranch();
        public net.sourceforge.fenixedu.util.Specialization getSpecialization();

        public boolean isCurricularCourseApproved(net.sourceforge.fenixedu.domain.ICurricularCourse curricularCourse);
        public boolean isCurricularCourseEnrolled(net.sourceforge.fenixedu.domain.ICurricularCourse curricularCourse);
        public boolean isCurricularCourseEnrolledInExecutionPeriod(net.sourceforge.fenixedu.domain.ICurricularCourse curricularCourse,
                net.sourceforge.fenixedu.domain.IExecutionPeriod executionPeriod);
        public boolean isCurricularCourseApprovedInCurrentOrPreviousPeriod(ICurricularCourse course, IExecutionPeriod executionPeriod);
		public boolean isCurricularCourseApprovedWithoutEquivalencesInCurrentOrPreviousPeriod(ICurricularCourse course, IExecutionPeriod executionPeriod);
        
        public void setCreditsInSecundaryArea(Integer creditsInSecundaryArea);
        public void setCreditsInSpecializationArea(Integer creditsInSpecializationArea);
        public void setCurrentState(net.sourceforge.fenixedu.util.StudentCurricularPlanState currentState);
        public void setEnrollmentReports(java.util.List enrollmentReports);
        public void setSecundaryBranch(net.sourceforge.fenixedu.domain.IBranch secundaryBranch);
        public void setSpecialization(net.sourceforge.fenixedu.util.Specialization specialization);
    "
}


    class net.sourceforge.fenixedu.domain.StudentCurricularPlanLEIC extends net.sourceforge.fenixedu.domain.StudentCurricularPlan {
            
        Integer creditsInSecundaryArea;
        Integer creditsInSpecializationArea;
        Integer secundaryBranchKey;
    }
    
    class net.sourceforge.fenixedu.domain.StudentCurricularPlanLEEC extends net.sourceforge.fenixedu.domain.StudentCurricularPlan {
        Integer creditsInSecundaryArea;
        Integer creditsInSpecializationArea;
        Integer secundaryBranchKey;
    }
    
class net.sourceforge.fenixedu.domain.StudentGroup extends net.sourceforge.fenixedu.domain.DomainObject {
        Integer keyShift;
        Integer groupNumber;
        Integer keyAttendsSet;
}

class net.sourceforge.fenixedu.domain.StudentGroupAttend extends net.sourceforge.fenixedu.domain.DomainObject {
        Integer keyStudentGroup;
        Integer keyAttend;        
}

class net.sourceforge.fenixedu.domain.StudentKind extends net.sourceforge.fenixedu.domain.DomainObject {
    Integer minCoursesToEnrol;
    Integer maxNACToEnrol;
    Integer maxCoursesToEnrol;
    
    interface "
    public abstract net.sourceforge.fenixedu.util.StudentType getStudentType();
    public abstract void setStudentType(net.sourceforge.fenixedu.util.StudentType studentType);  
    "
}

class net.sourceforge.fenixedu.domain.Summary extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer studentsNumber;
	Integer keyProfessorship;
	String title;
	Integer keyExecutionCourse;
	Integer keyTeacher;
	Integer keyRoom;
	String teacherName;
	String summaryText;
	Date lastModifiedDate;
	Integer keyShift;
	Boolean isExtraLesson;
	
	interface "
	public java.util.Calendar getSummaryHour();
    public void setSummaryHour(java.util.Calendar summaryHour);
    public net.sourceforge.fenixedu.util.TipoAula getSummaryType();
    public void setSummaryType(net.sourceforge.fenixedu.util.TipoAula summaryType);
    public java.util.Calendar getSummaryDate();
    public void setSummaryDate(java.util.Calendar summaryDate);
	"
}

class net.sourceforge.fenixedu.domain.SupportLesson extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyProfessorship;
	Date startTime;
	String place;
	Date endTime;
	interface "
	public net.sourceforge.fenixedu.util.DiaSemana getWeekDay();

	public void setWeekDay(net.sourceforge.fenixedu.util.DiaSemana weekDay);
	
	public double hours();
	
	public void beforeUpdate(org.apache.ojb.broker.PersistenceBroker broker) throws org.apache.ojb.broker.PersistenceBrokerException;
	
	public void afterUpdate(org.apache.ojb.broker.PersistenceBroker broker) throws org.apache.ojb.broker.PersistenceBrokerException;
	
	public void beforeInsert(org.apache.ojb.broker.PersistenceBroker broker) throws org.apache.ojb.broker.PersistenceBrokerException;
	
	public void afterInsert(org.apache.ojb.broker.PersistenceBroker broker) throws org.apache.ojb.broker.PersistenceBrokerException;
	
	public void beforeDelete(org.apache.ojb.broker.PersistenceBroker broker) throws org.apache.ojb.broker.PersistenceBrokerException;
	
	public void afterDelete(org.apache.ojb.broker.PersistenceBroker broker) throws org.apache.ojb.broker.PersistenceBrokerException;
	
	public void afterLookup(org.apache.ojb.broker.PersistenceBroker broker) throws org.apache.ojb.broker.PersistenceBrokerException;
	
	public boolean belongsToExecutionPeriod(net.sourceforge.fenixedu.domain.IExecutionPeriod executionPeriod);
	"
}


class net.sourceforge.fenixedu.domain.Teacher extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer teacherNumber;
	Integer keyPerson;
	Integer keyCategory;
	interface "
	public java.util.List getInstitutionWorkTimePeriods();
	
	public java.util.List getManagementPositions();
	
	public java.util.List getOtherTypeCreditLines();
	
	public java.util.List getServiceExemptionSituations();
	
	public void setInstitutionWorkTimePeriods(java.util.List institutionWorkTimePeriods);
	
	public void setManagementPositions(java.util.List managementPositions);
	
	public void setOtherTypeCreditLines(java.util.List otherTypeCreditLines);
	
	public void setServiceExemptionSituations(java.util.List serviceExemptionSituations);
	
	public net.sourceforge.fenixedu.dataTransferObject.credits.InfoCredits getExecutionPeriodCredits(IExecutionPeriod executionPeriod);
	
	public void notifyCreditsChange(net.sourceforge.fenixedu.domain.credits.event.CreditsEvent creditsEvent, net.sourceforge.fenixedu.domain.credits.event.ICreditsEventOriginator originator);
	"
}


class net.sourceforge.fenixedu.domain.degree.finalProject.TeacherDegreeFinalProjectStudent extends net.sourceforge.fenixedu.domain.DomainObject {
    Integer keyTeacher;
    Integer keyStudent;
    Integer keyExecutionPeriod;
    Double percentage;
}


class net.sourceforge.fenixedu.domain.University extends net.sourceforge.fenixedu.domain.DomainObject {
	String code;
	String name;
}

class net.sourceforge.fenixedu.domain.WrittenEvaluationCurricularCourseScope extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyWrittenEvaluation;
	Integer keyCurricularCourseScope;
}

class net.sourceforge.fenixedu.domain.publication.Author extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyPerson;
	String organization;
	String author;
			
	interface "
	public java.util.List getPublications();
	"
}

class net.sourceforge.fenixedu.domain.publication.PublicationType extends net.sourceforge.fenixedu.domain.DomainObject {
	String publicationType;
		
	interface "
	
	public java.util.List getRequiredAttributes();
	public java.util.List getNonRequiredAttributes();
	"
}

class net.sourceforge.fenixedu.domain.publication.PublicationTeacher extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyTeacher;
	Integer keyPublication;
			
	interface "
	public void setPublicationArea(net.sourceforge.fenixedu.util.PublicationArea publicationArea);
	public net.sourceforge.fenixedu.util.PublicationArea getPublicationArea();
	"
}

class net.sourceforge.fenixedu.domain.publication.Publication extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer issn;
	String volume;
	String observation;
	String subType;
	String title;
	String editorCity;
	String criticizedAuthor;
	String instituition;
	String translatedAuthor;
	Integer edition;
	String local;
	String scope;
	Integer year_end;
	String url;
	Integer fascicle;
	String originalLanguage;
	Integer firstPage;
	Integer lastPage;
	Integer number;
	String month_end;
	String month;
	Integer serie;
	String conference;
	String publicationType;
	String university;
	Integer isbn;
	String journalName;
	String language;
	Integer numberPages;
	String editor;
	String country;
	Integer year;
	Integer didatic;
	String format;
	Integer keyPublicationType;
	String publicationString;
		
	interface "
	
	public java.util.List getAuthors();
	"
}

class net.sourceforge.fenixedu.domain.teacher.PublicationsNumber extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer national;
	Integer keyTeacher;
	Date lastModificationDate;
	Integer international;
		
	interface "

	public net.sourceforge.fenixedu.util.PublicationType getPublicationType();
	public void setPublicationType(net.sourceforge.fenixedu.util.PublicationType publicationType);
	"
}

class net.sourceforge.fenixedu.domain.publication.PublicationFormat extends net.sourceforge.fenixedu.domain.DomainObject {
	String format;
}

class net.sourceforge.fenixedu.domain.publication.Attribute extends net.sourceforge.fenixedu.domain.DomainObject {
	String attributeType;
		
	interface "
	public java.util.List getPublications();
	"
}

class net.sourceforge.fenixedu.domain.publication.PublicationAuthor extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyAuthor;
	Integer keyPublication;
	Integer order;
}

class net.sourceforge.fenixedu.domain.publication.PublicationSubtype extends net.sourceforge.fenixedu.domain.DomainObject {
	String subtype;
	Integer keyPublicationType;
}	

class net.sourceforge.fenixedu.domain.publication.PublicationTypeAttribute extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyPublicationType;
    Integer keyAttribute;
    Boolean required;
}


class net.sourceforge.fenixedu.domain.Tutor extends net.sourceforge.fenixedu.domain.DomainObject {
    Integer teacherKey;
    Integer studentKey;
}


class net.sourceforge.fenixedu.domain.WebSite extends net.sourceforge.fenixedu.domain.DomainObject {
    String ojbConcreteClass;
    String style;
    String mail;
    String name;
}


    class net.sourceforge.fenixedu.domain.SiteIST extends net.sourceforge.fenixedu.domain.WebSite {
    }


class net.sourceforge.fenixedu.domain.WebSiteItem extends net.sourceforge.fenixedu.domain.DomainObject {
    String authorName;
    Date onlineEndDay;
    String title;
    Date itemBeginDay;
    Integer keyWebSiteSection;
    String keywords;
    Date onlineBeginDay;
    Date itemEndDay;
    Boolean published;
    String excerpt;
    String authorEmail;
    String mainEntryText;
    Integer keyEditor;

    interface "
    public java.sql.Timestamp getCreationDate();
    
    public void setCreationDate(java.sql.Timestamp creationDate);
    "
}


class net.sourceforge.fenixedu.domain.WebSiteSection extends net.sourceforge.fenixedu.domain.DomainObject {
    Integer keyWebSite;
    String whatToSort;
    String ftpName;
    Integer size;
    Integer excerptSize;
    String name;
    String sortingOrder;
}


/*
 * External classes declarations
 *
 * The following declarations allow the DmlCompiler to recognize the classes in
 * the relations definitions. Remove each declaration once the corresponding 
 * class definition is included.
 * 
 */

external class net.sourceforge.fenixedu.domain.Seminaries.CaseStudyChoice;
external class net.sourceforge.fenixedu.domain.Seminaries.Theme;
external class net.sourceforge.fenixedu.domain.Seminaries.Modality;
external class net.sourceforge.fenixedu.domain.Seminaries.Seminary;
external class net.sourceforge.fenixedu.domain.EmployeeHistoric;
external class net.sourceforge.fenixedu.domain.teacher.TeachingCareer;
external class net.sourceforge.fenixedu.domain.transactions.InsuranceTransaction ;


/*
 * Relations definitions
 * 
 */

relation AnswerExportProposal {
	net.sourceforge.fenixedu.domain.GroupPropertiesExecutionCourse playsRole groupPropertiesExecutionCourseReceiver {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Person playsRole receiverPerson;
}


relation AttendBelongsToAttendsSet {
	net.sourceforge.fenixedu.domain.AttendInAttendsSet playsRole attendInAttendsSet {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Attends playsRole attend;
}


relation AttendsEnrolment {
	net.sourceforge.fenixedu.domain.Attends playsRole attends {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Enrolment playsRole enrolment;
}


relation AttendsSetHasAttend {
	net.sourceforge.fenixedu.domain.AttendInAttendsSet playsRole attendInAttendsSet {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.AttendsSet playsRole attendsSet;
}


relation AttendsStudent {
	net.sourceforge.fenixedu.domain.Attends playsRole associatedAttends {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Student playsRole aluno;
}


relation BelongsTo {
	net.sourceforge.fenixedu.domain.GroupPropertiesExecutionCourse playsRole groupPropertiesExecutionCourse {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.GroupProperties playsRole groupProperties;
}

relation BranchCurricularCourseGroup {
    net.sourceforge.fenixedu.domain.Branch playsRole branch;

    net.sourceforge.fenixedu.domain.CurricularCourseGroup playsRole curricularCourseGroups {
        multiplicity *;
    }
}

relation BranchAreaCurricularCourseGroup {
    net.sourceforge.fenixedu.domain.Branch playsRole branchForWhichThisIsAreaCurricularCourseGroup;

    net.sourceforge.fenixedu.domain.AreaCurricularCourseGroup playsRole areaCurricularCourseGroups {
        multiplicity *;
    }
}

relation BranchOptionalCurricularCourseGroup {
    net.sourceforge.fenixedu.domain.Branch playsRole branchForWhichThisIsOptionalCurricularCourseGroup;

    net.sourceforge.fenixedu.domain.OptionalCurricularCourseGroup playsRole optionalCurricularCourseGroups {
        multiplicity *;
    }
}

relation BranchCurricularCourseScope {
    net.sourceforge.fenixedu.domain.Branch playsRole branch;
    
    net.sourceforge.fenixedu.domain.CurricularCourseScope playsRole scopes {
        multiplicity *;
    }
}


relation BuildingRoom {
	net.sourceforge.fenixedu.domain.Room playsRole rooms {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Building playsRole building;
}


relation CandidacyCaseStudyChoice {
    net.sourceforge.fenixedu.domain.Seminaries.Candidacy playsRole candidacy;
    net.sourceforge.fenixedu.domain.Seminaries.CaseStudyChoice playsRole caseStudyChoices {
        multiplicity *;
    }
}


relation CandidacyCurricularCourse {
    net.sourceforge.fenixedu.domain.Seminaries.Candidacy playsRole associatedCandidancies {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.CurricularCourse playsRole curricularCourse;
}


relation CandidacyModality {
    net.sourceforge.fenixedu.domain.Seminaries.Candidacy playsRole associatedModalities {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.Seminaries.Modality playsRole modality;
}


relation CandidacyStudent {
    net.sourceforge.fenixedu.domain.Seminaries.Candidacy playsRole associatedCandidancies {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.Student playsRole student;
}


relation CaseStudyCaseStudyChoice {
    net.sourceforge.fenixedu.domain.Seminaries.CaseStudy playsRole caseStudy;
    net.sourceforge.fenixedu.domain.Seminaries.CaseStudyChoice playsRole seminaryCandidacies {
        multiplicity *;
    }
}


relation CourseEquivalencyTheme {
    net.sourceforge.fenixedu.domain.Seminaries.CourseEquivalency playsRole courseEquivalencies {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.Seminaries.Theme playsRole themes {
        multiplicity *;
    }
}


relation CreditLineTeacher {
    net.sourceforge.fenixedu.domain.credits.CreditLine playsRole associatedCreditLines {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.Teacher playsRole teacher;
}


relation CurricularCourseCourseEquivalency {
    net.sourceforge.fenixedu.domain.Seminaries.CourseEquivalency playsRole courseEquivalencies {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.CurricularCourse playsRole curricularCourse;
}

relation CurricularCourseCurricularCourseEquivalence {
	net.sourceforge.fenixedu.domain.CurricularCourseEquivalence playsRole curricularCourseEquivalences {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.CurricularCourse playsRole equivalentCurricularCourse;
}


relation OldCurricularCourseCurricularCourseEquivalence {
	net.sourceforge.fenixedu.domain.CurricularCourseEquivalence playsRole oldCurricularCourseEquivalences {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.CurricularCourse playsRole oldCurricularCourse;
}


relation OtherTypeCreditLineExecutionPeriod {
    net.sourceforge.fenixedu.domain.credits.OtherTypeCreditLine playsRole associatedOtherTypeCreditLines {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.ExecutionPeriod playsRole executionPeriod;
}


relation CurricularCourseCurricularCourseGroup {
	net.sourceforge.fenixedu.domain.CurricularCourseGroup playsRole curricularCourseGroups {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.CurricularCourse playsRole curricularCourses {
		multiplicity *;
	}
}

relation CurricularCourseCurricularCourseScope {
	net.sourceforge.fenixedu.domain.CurricularCourse playsRole curricularCourse;
	net.sourceforge.fenixedu.domain.CurricularCourseScope playsRole scopes {
		multiplicity *;
	}
}


relation CurricularCourseCurriculum {
	net.sourceforge.fenixedu.domain.Curriculum playsRole associatedCurriculums {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.CurricularCourse playsRole curricularCourse;
}


relation CurricularCourseDepartmentCourse {
	net.sourceforge.fenixedu.domain.CurricularCourse playsRole associatedCurricularCourses {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.DepartmentCourse playsRole departmentCourse;
}

relation CurricularCourseEnrolment {
	net.sourceforge.fenixedu.domain.Enrolment playsRole enrolments {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.CurricularCourse playsRole curricularCourse;
}

relation CurricularCourseEnrolmentLog {
	net.sourceforge.fenixedu.domain.log.EnrolmentLog playsRole enrolmentLogs {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.CurricularCourse playsRole curricularCourse;
}

relation CurricularCourseExecutionCourse {
	net.sourceforge.fenixedu.domain.CurricularCourse playsRole associatedCurricularCourses {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.ExecutionCourse playsRole associatedExecutionCourses {
		multiplicity *;
	}
}


relation CurricularCourseHistoric {
	net.sourceforge.fenixedu.domain.gesdis.CourseHistoric playsRole courseHistoric;
	net.sourceforge.fenixedu.domain.CurricularCourse playsRole curricularCourse;
}


relation CurricularCourseNotNeedToEnrollInCurricularCourse {
	net.sourceforge.fenixedu.domain.degree.enrollment.NotNeedToEnrollInCurricularCourse playsRole notNeedToEnrollInCurricularCourses {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.CurricularCourse playsRole curricularCourse;
}

relation CurricularCoursePrecedence {
	net.sourceforge.fenixedu.domain.precedences.Precedence playsRole precedences {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.CurricularCourse playsRole curricularCourse;
}

relation CurricularCourseRestrictionByCurricularCourse {
	net.sourceforge.fenixedu.domain.precedences.RestrictionByCurricularCourse playsRole restrictionsByCurricularCourse {
	    multiplicity *;
	}
 
	net.sourceforge.fenixedu.domain.CurricularCourse playsRole precedentCurricularCourse;
}

relation CurricularCourseScientificArea {
	net.sourceforge.fenixedu.domain.CurricularCourse playsRole associatedCurricularCourses {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.ScientificArea playsRole scientificArea;
}

relation CurricularCourseGroupScientificArea {
    net.sourceforge.fenixedu.domain.CurricularCourseGroup playsRole curricularCourseGroups {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.ScientificArea playsRole scientificAreas {
        multiplicity *;
    }
}

relation CurricularCourseScopeCurricularSemester {
    net.sourceforge.fenixedu.domain.CurricularCourseScope playsRole scopes {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.CurricularSemester playsRole curricularSemester;
}

relation CurricularCourseStudentReport {
	net.sourceforge.fenixedu.domain.gesdis.StudentCourseReport playsRole studentCourseReport {
		multiplicity 1;
	}
	net.sourceforge.fenixedu.domain.CurricularCourse playsRole curricularCourse;
}


relation CurricularCourseUniversity {
	net.sourceforge.fenixedu.domain.CurricularCourse playsRole associatedCurricularCourses {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.University playsRole university;
}

relation CurricularSemesterCurricularYear {
    net.sourceforge.fenixedu.domain.CurricularSemester playsRole curricularSemesters {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.CurricularYear playsRole curricularYear;
}

relation CurriculumPerson {
	net.sourceforge.fenixedu.domain.Curriculum playsRole associatedAlteredCurriculums {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Person playsRole personWhoAltered;
}

relation DegreeCurricularPlanBranch {
	net.sourceforge.fenixedu.domain.DegreeCurricularPlan playsRole degreeCurricularPlan;

	net.sourceforge.fenixedu.domain.Branch playsRole areas {
		multiplicity *;
	}
}

relation DegreeCurricularPlanCurricularCourseEquivalence {
	net.sourceforge.fenixedu.domain.DegreeCurricularPlan playsRole degreeCurricularPlan;

	net.sourceforge.fenixedu.domain.CurricularCourseEquivalence playsRole curricularCourseEquivalences {
		multiplicity *;
	}
}

relation DegreeCurricularPlanEnrolmentPeriod {
	net.sourceforge.fenixedu.domain.EnrolmentPeriod playsRole enrolmentPeriods {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.DegreeCurricularPlan playsRole degreeCurricularPlan;
}

relation DegreeCurricularPlanCurricularCourse {
	net.sourceforge.fenixedu.domain.CurricularCourse playsRole curricularCourses {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.DegreeCurricularPlan playsRole degreeCurricularPlan;
}


relation DegreeDegreeCurricularPlan {
	net.sourceforge.fenixedu.domain.DegreeCurricularPlan playsRole degreeCurricularPlans {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Degree playsRole degree;
}


relation DegreeDegreeInfo {
	net.sourceforge.fenixedu.domain.Degree playsRole degree;
	net.sourceforge.fenixedu.domain.DegreeInfo playsRole degreeInfos {
		multiplicity *;
	}
}


relation DelegateDegree {
	net.sourceforge.fenixedu.domain.student.Delegate playsRole delegate {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Degree playsRole degree;
}


relation DelegateExecutionYear {
	net.sourceforge.fenixedu.domain.student.Delegate playsRole delegate {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.ExecutionYear playsRole executionYear;
}


relation DelegateStudent {
	net.sourceforge.fenixedu.domain.student.Delegate playsRole delegate {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Student playsRole student;
}


relation DepartmentDepartmentCourse {
	net.sourceforge.fenixedu.domain.DepartmentCourse playsRole disciplinasAssociadas {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Department playsRole departamento;
}


relation EmployeePerson {
	net.sourceforge.fenixedu.domain.Employee playsRole employee;
	net.sourceforge.fenixedu.domain.Person playsRole person;
}


relation EnrolmentCreditsInAnySecundaryArea {
    net.sourceforge.fenixedu.domain.CreditsInAnySecundaryArea playsRole creditsInAnySecundaryAreas {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.Enrolment playsRole enrolment;
}


relation EnrolmentCreditsInScientificArea {
	net.sourceforge.fenixedu.domain.CreditsInScientificArea playsRole creditsInScientificAreas {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Enrolment playsRole enrolment;
}

relation EnrolmentEnrolmentEquivalence {
	net.sourceforge.fenixedu.domain.EnrolmentEquivalence playsRole enrolmentEquivalences {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Enrolment playsRole enrolment;
}

relation EnrolmentEnrolmentEvaluation {
	net.sourceforge.fenixedu.domain.Enrolment playsRole enrolment;

	net.sourceforge.fenixedu.domain.EnrolmentEvaluation playsRole evaluations {
		multiplicity *;
	}
}

relation EnrolmentEquivalenceEquivalentEnrolmentForEnrolmentEquivalence {
	net.sourceforge.fenixedu.domain.EnrolmentEquivalence playsRole enrolmentEquivalence;

	net.sourceforge.fenixedu.domain.EquivalentEnrolmentForEnrolmentEquivalence playsRole equivalenceRestrictions {
		multiplicity *;
	}
}

relation EnrolmentEquivalentEnrolmentForEnrolmentEquivalence {
	net.sourceforge.fenixedu.domain.EquivalentEnrolmentForEnrolmentEquivalence playsRole equivalentEnrolmentForEnrolmentEquivalences {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Enrolment playsRole equivalentEnrolment;
}

relation EnrolmentEvaluationEmployee {
	net.sourceforge.fenixedu.domain.EnrolmentEvaluation playsRole enrolmentEvaluations {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Employee playsRole employee;
}

relation EnrolmentEvaluationPerson {
	net.sourceforge.fenixedu.domain.EnrolmentEvaluation playsRole enrolmentEvaluations {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Person playsRole personResponsibleForGrade;
}

relation EnrolmentExecutionPeriod {
	net.sourceforge.fenixedu.domain.Enrolment playsRole enrolments {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.ExecutionPeriod playsRole executionPeriod;
}

relation EnrolmentPeriodExecutionPeriod {
	net.sourceforge.fenixedu.domain.EnrolmentPeriod playsRole enrolmentPeriod {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.ExecutionPeriod playsRole executionPeriod;
}

relation EvaluationExecutionCourse {
	net.sourceforge.fenixedu.domain.ExecutionCourse playsRole associatedExecutionCourses {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Evaluation playsRole associatedEvaluations {
		multiplicity *;
	}
}

relation EvaluationExecutionCourseEvaluation {
	net.sourceforge.fenixedu.domain.EvaluationExecutionCourse playsRole evaluationExecutionCourses {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Evaluation playsRole evaluation;
}

relation EvaluationExecutionCourseExecutionCourse {
	net.sourceforge.fenixedu.domain.EvaluationExecutionCourse playsRole evaluationExecutionCourses {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.ExecutionCourse playsRole executionCourse;
}

relation ExamExecutionCourse {
	net.sourceforge.fenixedu.domain.ExecutionCourse playsRole associatedExecutionCoursesForExam {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Exam playsRole associatedExams {
		multiplicity *;
	}
}

relation ExamExecutionCourseExam {
	net.sourceforge.fenixedu.domain.ExamExecutionCourse playsRole examExecutionCourses {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Exam playsRole exam;
}

relation ExamStudentRoomExam {
	net.sourceforge.fenixedu.domain.ExamStudentRoom playsRole examStudentRooms {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Exam playsRole exam;
}

relation ExamStudentRoomRoom {
	net.sourceforge.fenixedu.domain.ExamStudentRoom playsRole examStudentRooms {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Room playsRole room;
}

relation ExamStudentRoomStudent {
	net.sourceforge.fenixedu.domain.ExamStudentRoom playsRole examStudentRooms {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Student playsRole student;
}

relation ExecutionCourseAttends {
	net.sourceforge.fenixedu.domain.ExecutionCourse playsRole disciplinaExecucao;
	net.sourceforge.fenixedu.domain.Attends playsRole attends {
		multiplicity *;
	}
}


relation ExecutionCourseBibliographicReference {
	net.sourceforge.fenixedu.domain.BibliographicReference playsRole associatedBibliographicReferences {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.ExecutionCourse playsRole executionCourse;
}


relation ExecutionCourseEvaluationMethod {
	net.sourceforge.fenixedu.domain.EvaluationMethod playsRole associatedEvaluationMethods {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.ExecutionCourse playsRole executionCourse;
}


relation ExecutionCourseExecutionCourseProperty {
	net.sourceforge.fenixedu.domain.ExecutionCourse playsRole executionCourse;
	net.sourceforge.fenixedu.domain.classProperties.ExecutionCourseProperty playsRole executionCourseProperties {
		multiplicity *;
	}
}


relation ExecutionCourseProfessorship {
	net.sourceforge.fenixedu.domain.ExecutionCourse playsRole executionCourse;
	net.sourceforge.fenixedu.domain.Professorship playsRole professorships {
		multiplicity *;
	}
}


relation ExecutionCourseReport {
	net.sourceforge.fenixedu.domain.gesdis.CourseReport playsRole courseReport {
		multiplicity 1;
	}
	net.sourceforge.fenixedu.domain.ExecutionCourse playsRole executionCourse;
}


relation ExecutionCourseResponsibleFor {
	net.sourceforge.fenixedu.domain.ResponsibleFor playsRole responsibleTeachers {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.ExecutionCourse playsRole executionCourse;
}


relation ExecutionCourseSite {
	net.sourceforge.fenixedu.domain.Site playsRole site {
		multiplicity 1;
	}
	net.sourceforge.fenixedu.domain.ExecutionCourse playsRole executionCourse;
}


relation ExecutionCourseSummary {
	net.sourceforge.fenixedu.domain.Summary playsRole associatedSummaries {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.ExecutionCourse playsRole executionCourse;
}

relation ExecutionDegreeCampus {
	net.sourceforge.fenixedu.domain.ExecutionDegree playsRole executionDegrees {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Campus playsRole campus;
}

relation ExecutionDegreeCoordinator {
	net.sourceforge.fenixedu.domain.ExecutionDegree playsRole executionDegree;
	net.sourceforge.fenixedu.domain.Coordinator playsRole coordinatorsList {
		multiplicity *;
	}
}

relation ExecutionDegreeDegreeCurricularPlan {
	net.sourceforge.fenixedu.domain.ExecutionDegree playsRole executionDegrees {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.DegreeCurricularPlan playsRole degreeCurricularPlan;
}

relation ExecutionDegreeExecutionYear {
	net.sourceforge.fenixedu.domain.ExecutionDegree playsRole executionDegrees {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.ExecutionYear playsRole executionYear;
}

relation ExecutionDegreePeriodExamsFirstSemester {
	net.sourceforge.fenixedu.domain.ExecutionDegree playsRole executionDegreesForExamsFirstSemester {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Period playsRole periodExamsFirstSemester;
}

relation ExecutionDegreePeriodExamsSecondSemester {
	net.sourceforge.fenixedu.domain.ExecutionDegree playsRole executionDegreesForExamsSecondSemester {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Period playsRole periodExamsSecondSemester;
}

relation ExecutionDegreePeriodLessonsFirstSemester {
	net.sourceforge.fenixedu.domain.ExecutionDegree playsRole executionDegreesForLessonsFirstSemester {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Period playsRole periodLessonsFirstSemester;
}

relation ExecutionDegreePeriodLessonsSecondSemester {
	net.sourceforge.fenixedu.domain.ExecutionDegree playsRole executionDegreesForLessonsSecondSemester {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Period playsRole periodLessonsSecondSemester;
}

relation ExecutionPeriodExecutionCourse {
	net.sourceforge.fenixedu.domain.ExecutionCourse playsRole associatedExecutionCourses {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.ExecutionPeriod playsRole executionPeriod;
}


relation ExecutionPeriodExecutionPeriod {
	net.sourceforge.fenixedu.domain.ExecutionPeriod playsRole nextExecutionPeriod;
	net.sourceforge.fenixedu.domain.ExecutionPeriod playsRole previousExecutionPeriod;
}


relation ExecutionPeriodExecutionYear {
	net.sourceforge.fenixedu.domain.ExecutionPeriod playsRole executionPeriods {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.ExecutionYear playsRole executionYear;
}


relation ExecutionPeriodSchoolClass {
	net.sourceforge.fenixedu.domain.ExecutionPeriod playsRole executionPeriod;
	net.sourceforge.fenixedu.domain.SchoolClass playsRole schoolClasses {
		multiplicity *;
	}
}


relation GaugingTestResultStudent {
    net.sourceforge.fenixedu.domain.gaugingTests.physics.GaugingTestResult playsRole associatedGaugingTestResult;
    net.sourceforge.fenixedu.domain.Student playsRole student;
}


relation GoalExecutionCourse {
	net.sourceforge.fenixedu.domain.GroupPropertiesExecutionCourse playsRole groupPropertiesExecutionCourse {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.ExecutionCourse playsRole executionCourse;
}


relation GrantContractGrantCostCenter {
	net.sourceforge.fenixedu.domain.grant.contract.GrantContract playsRole associatedGrantContracts {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.grant.contract.GrantCostCenter playsRole grantCostCenter;
}


relation GrantContractGrantType {
	net.sourceforge.fenixedu.domain.grant.contract.GrantContract playsRole associatedGrantContracts {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.grant.contract.GrantType playsRole grantType;
}


relation GrantContractMovementGrantContract {
	net.sourceforge.fenixedu.domain.grant.contract.GrantContractMovement playsRole associatedGrantContractMovements {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.grant.contract.GrantContract playsRole grantContract;
}


relation GrantContractRegimeGrantContract {
	net.sourceforge.fenixedu.domain.grant.contract.GrantContractRegime playsRole contractRegimes {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.grant.contract.GrantContract playsRole grantContract;
}


relation GrantContractRegimeGrantCostCenter {
	net.sourceforge.fenixedu.domain.grant.contract.GrantContractRegime playsRole associatedGrantContractRegimes {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.grant.contract.GrantCostCenter playsRole grantCostCenter;
}


relation GrantContractRegimeTeacher {
	net.sourceforge.fenixedu.domain.grant.contract.GrantContractRegime playsRole associatedGrantContractRegimes {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Teacher playsRole teacher;
}


relation GrantInsuranceGrantContract {
	net.sourceforge.fenixedu.domain.grant.contract.GrantInsurance playsRole associatedGrantInsurances {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.grant.contract.GrantContract playsRole grantContract;
}


relation GrantInsuranceGrantPaymentEntity {
	net.sourceforge.fenixedu.domain.grant.contract.GrantInsurance playsRole associatedGrantInsurances {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.grant.contract.GrantPaymentEntity playsRole grantPaymentEntity;
}


relation GrantOrientationTeacherGrantContract {
	net.sourceforge.fenixedu.domain.grant.contract.GrantOrientationTeacher playsRole grantOrientationTeacher;
	net.sourceforge.fenixedu.domain.grant.contract.GrantContract playsRole grantContract;
}


relation GrantOrientationTeacherTeacher {
	net.sourceforge.fenixedu.domain.grant.contract.GrantOrientationTeacher playsRole associatedGrantOrientationTeachers {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Teacher playsRole orientationTeacher;
}


relation GrantOwnerGrantContract {
	net.sourceforge.fenixedu.domain.grant.owner.GrantOwner playsRole grantOwner;
	net.sourceforge.fenixedu.domain.grant.contract.GrantContract playsRole grantContracts {
		multiplicity *;
	}
}


relation GrantOwnerPerson {
	net.sourceforge.fenixedu.domain.grant.owner.GrantOwner playsRole grantOwner;
	net.sourceforge.fenixedu.domain.Person playsRole person;
}


relation GrantPartGrantPaymentEntity {
	net.sourceforge.fenixedu.domain.grant.contract.GrantPart playsRole associatedGrantParts {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.grant.contract.GrantPaymentEntity playsRole grantPaymentEntity;
}


relation GrantPartGrantSubsidy {
	net.sourceforge.fenixedu.domain.grant.contract.GrantPart playsRole associatedGrantParts {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.grant.contract.GrantSubsidy playsRole grantSubsidy;
}


relation GrantPartTeacher {
	net.sourceforge.fenixedu.domain.grant.contract.GrantPart playsRole associatedGrantParts {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Teacher playsRole responsibleTeacher;
}


relation GrantPaymentEntityTeacher {
	net.sourceforge.fenixedu.domain.grant.contract.GrantPaymentEntity playsRole associatedGrantPaymentEntities {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Teacher playsRole responsibleTeacher;
}


relation GrantProjectGrantCostCenter {
	net.sourceforge.fenixedu.domain.grant.contract.GrantProject playsRole associatedGrantProjects {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.grant.contract.GrantCostCenter playsRole grantCostCenter;
}


relation GrantSubsidyGrantContract {
	net.sourceforge.fenixedu.domain.grant.contract.GrantSubsidy playsRole associatedGrantSubsidies {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.grant.contract.GrantContract playsRole grantContract;
}


relation GroupProposal {
	net.sourceforge.fenixedu.domain.finalDegreeWork.Proposal playsRole proposalAttributed;
	net.sourceforge.fenixedu.domain.finalDegreeWork.Group playsRole groupAttributed;
}


relation GroupProposalProposal {
	net.sourceforge.fenixedu.domain.finalDegreeWork.Proposal playsRole finalDegreeWorkProposal;
	net.sourceforge.fenixedu.domain.finalDegreeWork.GroupProposal playsRole groupProposals {
		multiplicity *;
	}
}


relation GroupProposalByTeacher {
	net.sourceforge.fenixedu.domain.finalDegreeWork.Proposal playsRole proposalAttributedByTeacher;
	net.sourceforge.fenixedu.domain.finalDegreeWork.Group playsRole groupAttributedByTeacher;
}


relation GroupExecutionDegree {
	net.sourceforge.fenixedu.domain.finalDegreeWork.Group playsRole associatedFinalDegreeWorkGroups {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.ExecutionDegree playsRole executionDegree;
}


relation GroupGroupStudent {
	net.sourceforge.fenixedu.domain.finalDegreeWork.Group playsRole finalDegreeDegreeWorkGroup;
	net.sourceforge.fenixedu.domain.finalDegreeWork.GroupStudent playsRole groupStudents {
		multiplicity *;
	}
}


relation GroupGroupProposal {
	net.sourceforge.fenixedu.domain.finalDegreeWork.Group playsRole finalDegreeDegreeWorkGroup;
	net.sourceforge.fenixedu.domain.finalDegreeWork.GroupProposal playsRole groupProposals {
		multiplicity *;
	}
}


relation GroupStudentProposal {
	net.sourceforge.fenixedu.domain.finalDegreeWork.GroupStudent playsRole associatedGroupStudents {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.finalDegreeWork.Proposal playsRole finalDegreeWorkProposalConfirmation;
}


relation GroupStudentStudent {
	net.sourceforge.fenixedu.domain.finalDegreeWork.GroupStudent playsRole associatedGroupStudents {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Student playsRole student;
}


relation GroupPropertiesAttendsSet {
	net.sourceforge.fenixedu.domain.AttendsSet playsRole attendsSet;
	net.sourceforge.fenixedu.domain.GroupProperties playsRole groupProperties;
}

relation InsuranceTransactionExecutionYear {
	net.sourceforge.fenixedu.domain.transactions.InsuranceTransaction playsRole insuranceTransactions {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.ExecutionYear playsRole executionYear;
}

relation InsuranceValueExecutionYear {
	net.sourceforge.fenixedu.domain.InsuranceValue playsRole insuranceValue;
	net.sourceforge.fenixedu.domain.ExecutionYear playsRole executionYear;
}

relation LessonExecutionPeriod {
	net.sourceforge.fenixedu.domain.Lesson playsRole lessons {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.ExecutionPeriod playsRole executionPeriod;
}

relation LessonRoomOccupation {
	net.sourceforge.fenixedu.domain.Lesson playsRole lesson;
	
	net.sourceforge.fenixedu.domain.RoomOccupation playsRole roomOccupation;
}

relation LessonShift {
	net.sourceforge.fenixedu.domain.Lesson playsRole associatedLessons {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Shift playsRole shift;
}

relation MarkAttends {
	net.sourceforge.fenixedu.domain.Mark playsRole mark;
	net.sourceforge.fenixedu.domain.Attends playsRole attend;
}

relation MarkEvaluation {
	net.sourceforge.fenixedu.domain.Mark playsRole marks {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Evaluation playsRole evaluation;
}


relation MakeExportProposal {
	net.sourceforge.fenixedu.domain.GroupPropertiesExecutionCourse playsRole groupPropertiesExecutionCourseSender {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Person playsRole senderPerson;
}

relation MasterDegreeCandidateExecutionDegree {
	net.sourceforge.fenixedu.domain.MasterDegreeCandidate playsRole masterDegreeCandidates {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.ExecutionDegree playsRole executionDegree;
}

relation ModalityCourseEquivalency {
    net.sourceforge.fenixedu.domain.Seminaries.CourseEquivalency playsRole courseEquivalencies {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.Seminaries.Modality playsRole modality;
}

relation OldInquiriesCoursesResDegree {
	net.sourceforge.fenixedu.domain.inquiries.OldInquiriesCoursesRes playsRole oldInquiriesCoursesRes {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Degree playsRole degree;
}


relation OldInquiriesCoursesResExecutionPeriod {
	net.sourceforge.fenixedu.domain.inquiries.OldInquiriesCoursesRes playsRole oldInquiriesCoursesRes {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.ExecutionPeriod playsRole executionPeriod;
}


relation OldInquiriesSummaryDegree {
	net.sourceforge.fenixedu.domain.inquiries.OldInquiriesSummary playsRole oldInquiriesSummary {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Degree playsRole degree;
}


relation OldInquiriesSummaryExecutionPeriod {
	net.sourceforge.fenixedu.domain.inquiries.OldInquiriesSummary playsRole oldInquiriesSummary {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.ExecutionPeriod playsRole executionPeriod;
}


relation OldInquiriesTeachersResDegree {
	net.sourceforge.fenixedu.domain.inquiries.OldInquiriesTeachersRes playsRole oldInquiriesTeachersRes {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Degree playsRole degree;
}


relation OldInquiriesTeachersResExecutionPeriod {
	net.sourceforge.fenixedu.domain.inquiries.OldInquiriesTeachersRes playsRole oldInquiriesTeachersRes {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.ExecutionPeriod playsRole executionPeriod {
		multiplicity 1;
	}
}


relation OldInquiriesTeachersResTeacher {
	net.sourceforge.fenixedu.domain.inquiries.OldInquiriesTeachersRes playsRole oldInquiriesTeacherRes {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Teacher playsRole teacher;
}

relation PeriodRoomOccupation {
	net.sourceforge.fenixedu.domain.Period playsRole period;
	net.sourceforge.fenixedu.domain.RoomOccupation playsRole roomOccupations {
		multiplicity *;
	}
}

relation PersonAdvisory {
	net.sourceforge.fenixedu.domain.Person playsRole associatedPersons {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Advisory playsRole advisories {
		multiplicity *;
	}
}


relation PersonCountry {
	net.sourceforge.fenixedu.domain.Person playsRole associatedPersons {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Country playsRole pais;
}


relation PersonDepartment {
	net.sourceforge.fenixedu.domain.Person playsRole associatedPersons {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Department playsRole manageableDepartmentCredits {
		multiplicity *;
	}
}

relation PersonProjectAccess {
	net.sourceforge.fenixedu.domain.projectsManagement.ProjectAccess playsRole projectAccesses {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Person playsRole person;
}

relation PersonRole {
	net.sourceforge.fenixedu.domain.Person playsRole associatedPersons {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Role playsRole personRoles {
		multiplicity *;
	}
}


relation PersonRolePerson {
    net.sourceforge.fenixedu.domain.PersonRole playsRole associatedPersonRoles {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.Person playsRole person;
}


relation PersonTeacher {
	net.sourceforge.fenixedu.domain.Teacher playsRole associatedTeachers {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Person playsRole person;
}

relation PrecedenceRestriction {
	net.sourceforge.fenixedu.domain.precedences.Precedence playsRole precedence;

	net.sourceforge.fenixedu.domain.precedences.Restriction playsRole restrictions {
		multiplicity *;
	}
}


relation ProfessorshipShiftProfessorship {
    net.sourceforge.fenixedu.domain.Professorship playsRole professorship;
    net.sourceforge.fenixedu.domain.ShiftProfessorship playsRole associatedShiftProfessorship {
        multiplicity *;
    }
}


relation ProfessorshipSummary {
	net.sourceforge.fenixedu.domain.Summary playsRole associatedSummaries {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Professorship playsRole professorship;
}


relation ProfessorshipSupportLesson {
	net.sourceforge.fenixedu.domain.SupportLesson playsRole supportLessons {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Professorship playsRole professorship;
}


relation ProposalTeacherByOrientator {
	net.sourceforge.fenixedu.domain.finalDegreeWork.Proposal playsRole associatedProposalsByOrientator {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Teacher playsRole orientator;
}


relation ProposalExecutionDegree {
	net.sourceforge.fenixedu.domain.finalDegreeWork.Proposal playsRole associatedFinalDegreeWorkProposals {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.ExecutionDegree playsRole executionDegree;
}


relation ProposalTeacherByCoorientator {
	net.sourceforge.fenixedu.domain.finalDegreeWork.Proposal playsRole associatedProposalsByCoorientator {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Teacher playsRole coorientator;
}


relation ProposalBranch {
	net.sourceforge.fenixedu.domain.finalDegreeWork.Proposal playsRole associatedFinalDegreeWorkProposals {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Branch playsRole branches {
		multiplicity *;
	}
}


relation QualificationCountry {
    net.sourceforge.fenixedu.domain.Qualification playsRole associatedQualifications {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.Country playsRole country;
}


relation QualificationPerson {
    net.sourceforge.fenixedu.domain.Qualification playsRole qualification;
    net.sourceforge.fenixedu.domain.Person playsRole person;
}


relation RolePersonRole {
    net.sourceforge.fenixedu.domain.Role playsRole role;
    net.sourceforge.fenixedu.domain.PersonRole playsRole associatedPersonRoles {
        multiplicity *;
    }
}


relation RoomLesson {
	net.sourceforge.fenixedu.domain.Lesson playsRole associatedLessons {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Room playsRole sala;
}



relation RoomRoomOccupation {
	net.sourceforge.fenixedu.domain.RoomOccupation playsRole roomOccupations {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Room playsRole room;
}


relation RoomSummary {
	net.sourceforge.fenixedu.domain.Summary playsRole associatedSummaries {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Room playsRole room;
}

relation SectionItem {
	net.sourceforge.fenixedu.domain.Item playsRole associatedItems {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Section playsRole section;
}

relation SectionSuperiorSection {
	net.sourceforge.fenixedu.domain.Section playsRole associatedSections {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Section playsRole superiorSection;
}

relation SchedulingExecutionDegree {
	net.sourceforge.fenixedu.domain.finalDegreeWork.Scheduleing playsRole scheduling;
	net.sourceforge.fenixedu.domain.ExecutionDegree playsRole executionDegree;
}

relation SchoolClassExecutionDegree {
	net.sourceforge.fenixedu.domain.SchoolClass playsRole schoolClasses {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.ExecutionDegree playsRole executionDegree;
}

relation SchoolClassShiftSchoolClass {
	net.sourceforge.fenixedu.domain.SchoolClassShift playsRole schoolClassShifts {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.SchoolClass playsRole turma;
}

relation SchoolClassShiftShift {
	net.sourceforge.fenixedu.domain.SchoolClassShift playsRole schoolClassShifts {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Shift playsRole turno;
}

relation ScientificAreaCreditsInScientificArea {
	net.sourceforge.fenixedu.domain.CreditsInScientificArea playsRole creditsInScientificAreas {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.ScientificArea playsRole scientificArea;
}


relation SeminaryCandidacy {
    net.sourceforge.fenixedu.domain.Seminaries.Seminary playsRole seminary;
    net.sourceforge.fenixedu.domain.Seminaries.Candidacy playsRole candidacies {
        multiplicity *;
    }
}


relation SendProposal {
	net.sourceforge.fenixedu.domain.GroupPropertiesExecutionCourse playsRole groupPropertiesSenderExecutionCourse {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.ExecutionCourse playsRole senderExecutionCourse;
}


relation ShiftExecutionCourse {
	net.sourceforge.fenixedu.domain.Shift playsRole associatedShifts {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.ExecutionCourse playsRole disciplinaExecucao;
}


relation ShiftSchoolClass {
	net.sourceforge.fenixedu.domain.SchoolClass playsRole associatedClasses {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Shift playsRole associatedShifts {
		multiplicity *;
	}
}


relation ShiftShiftProfessorship {
	net.sourceforge.fenixedu.domain.Shift playsRole shift;
	net.sourceforge.fenixedu.domain.ShiftProfessorship playsRole associatedShiftProfessorship {
		multiplicity *;
	}
}


relation ShiftShiftStudent {
	net.sourceforge.fenixedu.domain.Shift playsRole shift;
	net.sourceforge.fenixedu.domain.ShiftStudent playsRole studentShifts {
		multiplicity *;
	}
}

relation ShiftStudentStudent {
	net.sourceforge.fenixedu.domain.ShiftStudent playsRole shiftStudents {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Student playsRole student;
}

relation ShiftSummary {
	net.sourceforge.fenixedu.domain.Summary playsRole associatedSummaries {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Shift playsRole shift;
}


relation SiteSection {
	net.sourceforge.fenixedu.domain.Section playsRole associatedSections {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Site playsRole site;
}

relation SiteAnnouncement {
	net.sourceforge.fenixedu.domain.Announcement playsRole associatedAnnouncements {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Site playsRole site;
}

relation StudentCurricularPlanBranch {
    net.sourceforge.fenixedu.domain.StudentCurricularPlan playsRole studentCurricularPlans {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.Branch playsRole branch;
}


relation StudentCurricularPlanCreditsInAnySecundaryArea {
    net.sourceforge.fenixedu.domain.CreditsInAnySecundaryArea playsRole creditsInAnySecundaryAreas {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.StudentCurricularPlan playsRole studentCurricularPlan;
}


relation StudentCurricularPlanCreditsInScientificArea {
	net.sourceforge.fenixedu.domain.CreditsInScientificArea playsRole creditsInScientificAreas {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.StudentCurricularPlan playsRole studentCurricularPlan;
}

relation StudentCurricularPlanDegreeCurricularPlan {
    net.sourceforge.fenixedu.domain.StudentCurricularPlan playsRole studentCurricularPlans {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.DegreeCurricularPlan playsRole degreeCurricularPlan;
}

relation StudentCurricularPlanEmployee {
    net.sourceforge.fenixedu.domain.StudentCurricularPlan playsRole studentCurricularPlans {
        multiplicity *;
    }

    net.sourceforge.fenixedu.domain.Employee playsRole employee;
}

relation StudentCurricularPlanEnrolment {
    net.sourceforge.fenixedu.domain.StudentCurricularPlan playsRole studentCurricularPlan;
    
    net.sourceforge.fenixedu.domain.Enrolment playsRole enrolments {
        multiplicity *;
    }
}

relation StudentCurricularPlanLEECSecundaryBranch {
    net.sourceforge.fenixedu.domain.StudentCurricularPlanLEEC playsRole secundaryStudentCurricularPlansLEEC {
        multiplicity *;
    }
    
    net.sourceforge.fenixedu.domain.Branch playsRole secundaryBranch;
}

relation StudentCurricularPlanLEICSecundaryBranch {
    net.sourceforge.fenixedu.domain.StudentCurricularPlanLEIC playsRole secundaryStudentCurricularPlansLEIC {
        multiplicity *;
    }
    
    net.sourceforge.fenixedu.domain.Branch playsRole secundaryBranch;
}

relation StudentCurricularPlanNotNeedToEnrollInCurricularCourse {
    net.sourceforge.fenixedu.domain.StudentCurricularPlan playsRole studentCurricularPlan;

    net.sourceforge.fenixedu.domain.degree.enrollment.NotNeedToEnrollInCurricularCourse playsRole notNeedToEnrollCurricularCourses {
        multiplicity *;
    }
}

relation StudentCurricularPlanStudent {
    net.sourceforge.fenixedu.domain.StudentCurricularPlan playsRole studentCurricularPlans {
        multiplicity *;
    }

    net.sourceforge.fenixedu.domain.Student playsRole student;
}

relation StudentEnrolmentLog {
	net.sourceforge.fenixedu.domain.log.EnrolmentLog playsRole enrolmentLogs {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Student playsRole student;
}

relation StudentExecutionCourse {
	net.sourceforge.fenixedu.domain.ExecutionCourse playsRole executionCourses {
		multiplicity *;
	}
	
	net.sourceforge.fenixedu.domain.Student playsRole attendingStudents {
		multiplicity *;
	}
}

relation StudentExecutionYear {
    net.sourceforge.fenixedu.domain.Student playsRole students {
        multiplicity *;
    }

    net.sourceforge.fenixedu.domain.ExecutionYear playsRole registrationYear;
}


relation StudentGroup {
	net.sourceforge.fenixedu.domain.StudentGroup playsRole associatedStudentGroups {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Shift playsRole shift;
}


relation StudentGroupAttendAttends {
	net.sourceforge.fenixedu.domain.StudentGroupAttend playsRole studentGroupAttends {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Attends playsRole attend;
}


relation StudentGroupAttendStudentGroup {
	net.sourceforge.fenixedu.domain.StudentGroupAttend playsRole studentGroupAttends {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.StudentGroup playsRole studentGroup;
}


relation StudentGroupBelongsToGroupProperties {
	net.sourceforge.fenixedu.domain.StudentGroup playsRole studentGroups {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.AttendsSet playsRole attendsSet;
}

relation StudentPerson {
    net.sourceforge.fenixedu.domain.Student playsRole students {
        multiplicity *;
    }
    
    net.sourceforge.fenixedu.domain.Person playsRole person;
}

relation StudentSecretaryEnrolmentStudent {
	net.sourceforge.fenixedu.domain.SecretaryEnrolmentStudent playsRole secretaryEnrolmentStudents {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Student playsRole student;
}

relation StudentStudentKind {
	net.sourceforge.fenixedu.domain.Student playsRole students {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.StudentKind playsRole studentKind;
}


relation TeachingCareerCategory {
	net.sourceforge.fenixedu.domain.teacher.TeachingCareer playsRole teachingCareer {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.teacher.Category playsRole category;
}


relation TeacherCategory {
	net.sourceforge.fenixedu.domain.Teacher playsRole teacher {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.teacher.Category playsRole category;
}


relation TeacherDegreeFinalProjectStudentExecutionPeriod {
    net.sourceforge.fenixedu.domain.degree.finalProject.TeacherDegreeFinalProjectStudent playsRole associatedTeacherDegreeFinalProjectStudents {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.ExecutionPeriod playsRole executionPeriod;
}


relation TeacherDegreeFinalProjectStudentStudent {
    net.sourceforge.fenixedu.domain.degree.finalProject.TeacherDegreeFinalProjectStudent playsRole teacherDegreeFinalProjectStudent {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.Student playsRole student;
}


relation TeacherDegreeFinalProjectStudentTeacher {
    net.sourceforge.fenixedu.domain.degree.finalProject.TeacherDegreeFinalProjectStudent playsRole degreeFinalProjectStudents {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.Teacher playsRole teacher;
}


relation TeacherOldPublication {
	net.sourceforge.fenixedu.domain.teacher.OldPublication playsRole oldPublication {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Teacher playsRole teacher;
}


relation TeacherProfessorship {
	net.sourceforge.fenixedu.domain.Professorship playsRole professorships {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Teacher playsRole teacher;
}


relation TeacherResponsibleFor {
	net.sourceforge.fenixedu.domain.ResponsibleFor playsRole associatedResponsibles {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Teacher playsRole teacher;
}


relation TeacherSummary {
	net.sourceforge.fenixedu.domain.Summary playsRole associatedSummaries {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Teacher playsRole teacher;
}


relation ThemeCandidacy {
    net.sourceforge.fenixedu.domain.Seminaries.Theme playsRole theme;
    net.sourceforge.fenixedu.domain.Seminaries.Candidacy playsRole associatedCandidacies {
        multiplicity *;
    }
}


relation ThemeCaseStudy {
    net.sourceforge.fenixedu.domain.Seminaries.Theme playsRole seminaryTheme;
    net.sourceforge.fenixedu.domain.Seminaries.CaseStudy playsRole caseStudies {
        multiplicity *;
    }
}


relation TutorStudent {
    net.sourceforge.fenixedu.domain.Tutor playsRole associatedTutor;
    net.sourceforge.fenixedu.domain.Student playsRole student;
}


relation TutorTeacher {
    net.sourceforge.fenixedu.domain.Tutor playsRole associatedTutors {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.Teacher playsRole teacher;
}


relation WrittenEvaluationCurricularCourseScope {
	net.sourceforge.fenixedu.domain.WrittenEvaluation playsRole associatedWrittenEvaluations {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.CurricularCourseScope playsRole associatedCurricularCourseScope {
		multiplicity *;
	}
}

relation WrittenEvaluationCurricularCourseScopeCurricularCourseScope {
	net.sourceforge.fenixedu.domain.WrittenEvaluationCurricularCourseScope playsRole writtenEvaluationCurricularCourseScopes {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.CurricularCourseScope playsRole curricularCourseScope;
}

relation WrittenEvaluationCurricularCourseScopeWrittenEvaluation {
	net.sourceforge.fenixedu.domain.WrittenEvaluationCurricularCourseScope playsRole writtenEvaluationCurricularCourseScopes {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.WrittenEvaluation playsRole writtenEvaluation;
}

relation WrittenEvaluationRoomOccupation {
	net.sourceforge.fenixedu.domain.WrittenEvaluation playsRole writtenEvaluation;
	
	net.sourceforge.fenixedu.domain.RoomOccupation playsRole associatedRoomOccupation {
		multiplicity *;
	}
}

relation PublicationTeacherPublication {
	net.sourceforge.fenixedu.domain.publication.PublicationTeacher playsRole publicationTeachers {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.publication.Publication playsRole publication;
}

relation PublicationTeacherTeacher {
	net.sourceforge.fenixedu.domain.publication.PublicationTeacher playsRole teacherPublications {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Teacher playsRole teacher;
}

relation PublicationAuthorPublication {
	net.sourceforge.fenixedu.domain.publication.PublicationAuthor playsRole publicationAuthors {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.publication.Publication playsRole publication;
}

relation PublicationAuthorAuthor {
	net.sourceforge.fenixedu.domain.publication.PublicationAuthor playsRole authorPublications {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.publication.Author playsRole author;
}

relation AuthorPerson {
	net.sourceforge.fenixedu.domain.publication.Author playsRole author;
	net.sourceforge.fenixedu.domain.Person playsRole person;
}

relation AttributePublicationTypeAttribute {
	net.sourceforge.fenixedu.domain.publication.PublicationTypeAttribute playsRole publicationTypeAttributes {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.publication.Attribute playsRole attribute;
}

relation PublicationTypePublicationTypeAttribute {
	net.sourceforge.fenixedu.domain.publication.PublicationTypeAttribute playsRole publicationTypeAttributes {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.publication.PublicationType playsRole publicationType;
}

relation PublicationTypePublication {
	net.sourceforge.fenixedu.domain.publication.PublicationType playsRole type;
	net.sourceforge.fenixedu.domain.publication.Publication playsRole publications {
		multiplicity *;
	}
	
}

relation PublicationTypePublicationSubtype {
	net.sourceforge.fenixedu.domain.publication.PublicationType playsRole publicationType;
	net.sourceforge.fenixedu.domain.publication.PublicationSubtype playsRole subtypes {
		multiplicity *;
	}
}

relation PublicationsNumberTeacher {
	net.sourceforge.fenixedu.domain.teacher.PublicationsNumber playsRole publicationsNumber;
	net.sourceforge.fenixedu.domain.Teacher playsRole teacher;
}

relation ScientificAreaAreaCurricularCourseGroup {

    net.sourceforge.fenixedu.domain.ScientificArea playsRole scientificAreasForThis {
        multiplicity *;
    }

    net.sourceforge.fenixedu.domain.AreaCurricularCourseGroup playsRole areaCurricularCourseGroups {
        multiplicity *;
    }
    
}

relation SeminaryCourseEquivalency {
    net.sourceforge.fenixedu.domain.Seminaries.Seminary playsRole seminary;

    net.sourceforge.fenixedu.domain.Seminaries.CourseEquivalency playsRole equivalencies {
        multiplicity *;
    }
}


relation WebSiteItemPerson {
    net.sourceforge.fenixedu.domain.WebSiteItem playsRole editedWebSiteItems {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.Person playsRole editor;
}


relation WebSiteItemWebSiteSection {
    net.sourceforge.fenixedu.domain.WebSiteItem playsRole includedWebSiteItems {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.WebSiteSection playsRole webSiteSection;
}


relation WebSiteSectionWebSite {
    net.sourceforge.fenixedu.domain.WebSiteSection playsRole associatedWebSiteSections {
        multiplicity *;
    }
    net.sourceforge.fenixedu.domain.WebSite playsRole webSite;
}
