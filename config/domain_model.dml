/*
 * DOMAIN_MODEL.DML
 *
 * The Fenix Project Domain Model
 * 
 */

class net.sourceforge.fenixedu.domain.DomainObject implements java.io.Serializable {
	Integer ackOptLock;
	Integer idInternal;
}


class net.sourceforge.fenixedu.domain.Advisory extends net.sourceforge.fenixedu.domain.DomainObject {
	Date created;
	String subject;
	Boolean onlyShowOnce;
	Date expires;
	String message;
	String sender;
}


class net.sourceforge.fenixedu.domain.Announcement extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keySite;
	String information;
	String title;
	
	interface "
	public java.sql.Timestamp getCreationDate();
    
    public void setCreationDate(java.sql.Timestamp creationDate);

    public java.sql.Timestamp getLastModifiedDate();

    public void setLastModifiedDate(java.sql.Timestamp lastModifiedDate);	
	"
}


class net.sourceforge.fenixedu.domain.AttendInAttendsSet extends net.sourceforge.fenixedu.domain.DomainObject {
        Integer keyAttend;
        Integer keyAttendsSet;
        
}

class net.sourceforge.fenixedu.domain.AttendsSet extends net.sourceforge.fenixedu.domain.DomainObject {
        String name;
        Integer keyGroupProperties;
        
        interface "
        
       	public java.util.List getAttends();
        
        public void addAttendInAttendsSet (net.sourceforge.fenixedu.domain.IAttendInAttendsSet attendInAttendsSet);

		public void removeAttendInAttendsSet (net.sourceforge.fenixedu.domain.IAttendInAttendsSet attendInAttendsSet);

		public boolean existsAttendInAttendsSet (net.sourceforge.fenixedu.domain.IAttendInAttendsSet attendInAttendsSet);
	
		public void addStudentGroup (net.sourceforge.fenixedu.domain.IStudentGroup studentGroup);

		public void removeStudentGroup (net.sourceforge.fenixedu.domain.IStudentGroup studentGroup);

		public boolean existsStudentGroup (net.sourceforge.fenixedu.domain.IStudentGroup studentGroup);
	
		public net.sourceforge.fenixedu.domain.IAttends getStudentAttend(net.sourceforge.fenixedu.domain.IStudent student);

		public java.util.List getStudentGroupsWithoutShift();

		public java.util.List getStudentGroupsWithShift();

		public Integer getNumberOfStudentsInAttendsSet();

		public Integer getNumberOfStudentsNotInAttendsSet();
		"
}


class net.sourceforge.fenixedu.domain.BibliographicReference extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyExecutionCourse;
	Boolean optional;
	String year;
	String authors;
	String title;
	String reference;
}


class net.sourceforge.fenixedu.domain.Branch extends net.sourceforge.fenixedu.domain.DomainObject {
    Integer secondaryCredits;
    String code;
    Integer keyDegreeCurricularPlan;
    Integer specializationCredits;
    String name;
    String acronym;
    
    interface "

    public java.util.List getScopes();
    public net.sourceforge.fenixedu.domain.IDegreeCurricularPlan getDegreeCurricularPlan();
    public net.sourceforge.fenixedu.util.BranchType getBranchType();
    public java.util.List getAreaCurricularCourseGroups();
    public java.util.List getOptionalCurricularCourseGroups();
    public void setAreaCurricularCourseGroups(java.util.List curricularCourseGroups);
    public void setScopes(java.util.List scopes);
    public void setDegreeCurricularPlan(net.sourceforge.fenixedu.domain.IDegreeCurricularPlan degreeCurricularPlan);
    public void setBranchType(net.sourceforge.fenixedu.util.BranchType branchType);
    public void setOptionalCurricularCourseGroups(java.util.List optionCurricularCourseGroups);
    public java.util.List getAreaCurricularCourseGroups(net.sourceforge.fenixedu.util.AreaType areaType);
    "
}


class net.sourceforge.fenixedu.domain.Building extends net.sourceforge.fenixedu.domain.DomainObject {
	String name;
}


class net.sourceforge.fenixedu.domain.Campus extends net.sourceforge.fenixedu.domain.DomainObject {
	String name;
}


class net.sourceforge.fenixedu.domain.teacher.Category extends net.sourceforge.fenixedu.domain.DomainObject {
	String code;
	String longName;
	Boolean canBeExecutionCourseResponsible;
	String shortName;
}


class net.sourceforge.fenixedu.domain.Country extends net.sourceforge.fenixedu.domain.DomainObject {
	String code;
	String nationality;
	String name;
}


class net.sourceforge.fenixedu.domain.gesdis.CourseHistoric extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyCurricularCourse;
	String curricularYear;
	Integer approved;
	Integer enrolled;
	Integer semester;
	Integer evaluated;
}


class net.sourceforge.fenixedu.domain.gesdis.CourseReport extends net.sourceforge.fenixedu.domain.DomainObject {
	String report;
	Date lastModificationDate;
	Integer keyExecutionCourse;
}


class net.sourceforge.fenixedu.domain.CurricularCourse extends net.sourceforge.fenixedu.domain.DomainObject {
	Double ectsCredits;
	Boolean basic;
	Integer universityKey;
	Boolean mandatoryEnrollment;
	Integer maximumValueForAcumulatedEnrollments;
	Double theoPratHours;
	Double weigth;
	Integer keyScientificArea;
	Integer degreeCurricularPlanKey;
	String code;
	Boolean enrollmentAllowed;
	Double theoreticalHours;
	Integer departmentCourseKey;
	Double labHours;
	Double credits;
	Integer enrollmentWeigth;
	Double praticalHours;
	Boolean mandatory;
	String name;
	String acronym;
	Integer minimumValueForAcumulatedEnrollments;
	
	interface "
	public net.sourceforge.fenixedu.util.CurricularCourseType getType();
    public void setType(net.sourceforge.fenixedu.util.CurricularCourseType type);
    public net.sourceforge.fenixedu.domain.ICurricularYear getCurricularYearByBranchAndSemester(final net.sourceforge.fenixedu.domain.IBranch branch,final Integer semester);
    public String getCurricularCourseUniqueKeyForEnrollment();
    public boolean hasActiveScopeInGivenSemester(final Integer semester);
    public boolean hasActiveScopeInGivenSemesterForGivenBranch(final Integer semester, final net.sourceforge.fenixedu.domain.IBranch branch);
    public boolean hasActiveScopeInGivenSemesterForCommonAndGivenBranch(final Integer semester, final net.sourceforge.fenixedu.domain.IBranch branch);
	"
}


class net.sourceforge.fenixedu.domain.DegreeCurricularPlan extends net.sourceforge.fenixedu.domain.DomainObject {
    String concreteClassForStudentCurricularPlans;
    Integer degreeDuration;
    Integer degreeKey;
    String description;
    String descriptionEn;
    Date endDate;
    Date initialDate;
    Integer minimalYearForOptionalCourses;
    String name;
    Double neededCredits;
    Integer numerusClausus;
    String ojbConcreteClass;
    
    interface "

    public java.util.List getAreas();
    public net.sourceforge.fenixedu.domain.IStudentCurricularPlan getNewStudentCurricularPlan();
    public net.sourceforge.fenixedu.domain.IDegree getDegree();
    public net.sourceforge.fenixedu.util.MarkType getMarkType();
    public net.sourceforge.fenixedu.util.DegreeCurricularPlanState getState();
    public java.util.List getCurricularCourseEquivalences();
    public java.util.List getListOfEnrollmentRules(net.sourceforge.fenixedu.domain.IStudentCurricularPlan studentCurricularPlan,
            net.sourceforge.fenixedu.domain.IExecutionPeriod executionPeriod);
    public java.util.List getCurricularCoursesFromArea(net.sourceforge.fenixedu.domain.IBranch area, net.sourceforge.fenixedu.util.AreaType areaType);
    public java.util.List getCurricularCoursesFromAnyArea();
    public java.util.List getCommonAreas();
    public java.util.List getSpecializationAreas();
    public java.util.List getSecundaryAreas();
    public java.util.List getTFCs();
    public java.util.List getAllOptionalCurricularCourseGroups();
    public java.util.List getCurricularCoursesByYearAndSemesterAndBranch(int year, Integer semester, net.sourceforge.fenixedu.domain.IBranch area);
    public java.util.List getSpecialListOfCurricularCourses();
    
    public void setAreas(java.util.List areas);
    public void setDegree(net.sourceforge.fenixedu.domain.IDegree degree);
    public void setMarkType(net.sourceforge.fenixedu.util.MarkType markType);
    public void setState(net.sourceforge.fenixedu.util.DegreeCurricularPlanState state);
    public void setCurricularCourseEquivalences(java.util.List curricularCourseEquivalences);
   
    "
}

class net.sourceforge.fenixedu.domain.DegreeCurricularPlanLEC extends net.sourceforge.fenixedu.domain.DegreeCurricularPlan {
}

class net.sourceforge.fenixedu.domain.DegreeCurricularPlanLEEC extends net.sourceforge.fenixedu.domain.DegreeCurricularPlan {
}

class net.sourceforge.fenixedu.domain.DegreeCurricularPlanLEIC extends net.sourceforge.fenixedu.domain.DegreeCurricularPlan {
}

class net.sourceforge.fenixedu.domain.DegreeCurricularPlanLEICTAGUS extends net.sourceforge.fenixedu.domain.DegreeCurricularPlan {
}

class net.sourceforge.fenixedu.domain.DegreeCurricularPlanLEM extends net.sourceforge.fenixedu.domain.DegreeCurricularPlan {
}






class net.sourceforge.fenixedu.domain.student.Delegate extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyExecutionYear;
	Integer keyDegree;
	Boolean type;
	Integer keyStudent;
	
	interface "
	public net.sourceforge.fenixedu.util.DelegateYearType getYearType();
	
	public void setYearType(net.sourceforge.fenixedu.util.DelegateYearType yearType);
	"
}


class net.sourceforge.fenixedu.domain.Evaluation extends net.sourceforge.fenixedu.domain.DomainObject {
	String ojbConcreteClass;
	String publishmentMessage;

    interface"
	public java.util.List getAssociatedExecutionCourses();
	
	public void setAssociatedExecutionCourses(java.util.List list);
	"
}


	class net.sourceforge.fenixedu.domain.FinalEvaluation extends net.sourceforge.fenixedu.domain.Evaluation {
	}


	class net.sourceforge.fenixedu.domain.WrittenEvaluation extends net.sourceforge.fenixedu.domain.Evaluation {
		interface"
		
		public java.util.Calendar getDay();
		
		public void setDay(java.util.Calendar calendar);
		
		public java.util.Calendar getBeginning();
		
		public void setBeginning(java.util.Calendar calendar);
		
		public java.util.Calendar getEnd();
		
		public void setEnd(java.util.Calendar calendar);
		
		public java.util.Calendar getEnrollmentBeginDay();
		
		public void setEnrollmentBeginDay(java.util.Calendar calendar);
	
	    public java.util.Calendar getEnrollmentBeginTime();
	    
	    public void setEnrollmentBeginTime(java.util.Calendar calendar);
	
	    public java.util.Calendar getEnrollmentEndDay();
	    
	    public void setEnrollmentEndDay(java.util.Calendar calendar);
	    
		public java.util.Calendar getEnrollmentEndTime();
	    
	    public void setEnrollmentEndTime(java.util.Calendar calendar);
	
		public java.util.List getAssociatedCurricularCourseScope();
		
		public void setAssociatedCurricularCourseScope(java.util.List list);
	
	    public java.util.List getAssociatedRoomOccupation();
		
		public void setAssociatedRoomOccupation(java.util.List list);
		"
	}

		class net.sourceforge.fenixedu.domain.Exam extends net.sourceforge.fenixedu.domain.WrittenEvaluation {
			interface"
			public net.sourceforge.fenixedu.util.Season getSeason();
			
			public void setSeason(net.sourceforge.fenixedu.util.Season season);
			
			public java.util.List getAssociatedRooms();
			"	
		}

		class net.sourceforge.fenixedu.domain.WrittenTest extends net.sourceforge.fenixedu.domain.WrittenEvaluation {
		}


class net.sourceforge.fenixedu.domain.EvaluationExecutionCourse extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyExecutionCourse;
	Integer keyEvaluation;

	interface "
	public net.sourceforge.fenixedu.domain.IExecutionCourse getExecutionCourse();
	
	public void setExecutionCourse(net.sourceforge.fenixedu.domain.IExecutionCourse executionCourse);
	
	public net.sourceforge.fenixedu.domain.IEvaluation getEvaluation();
	
	public void setEvaluation(net.sourceforge.fenixedu.domain.IEvaluation evaluation);
	"
}


	class net.sourceforge.fenixedu.domain.ExamExecutionCourse extends net.sourceforge.fenixedu.domain.EvaluationExecutionCourse {
		Integer keyExam;
		
		interface"
		public net.sourceforge.fenixedu.domain.IExam getExam();
		
		public void setExam(net.sourceforge.fenixedu.domain.IExam exam);

		public net.sourceforge.fenixedu.domain.IExecutionCourse getExecutionCourse();
		
		public void setExecutionCourse(net.sourceforge.fenixedu.domain.IExecutionCourse execucao);
		"
	}


class net.sourceforge.fenixedu.domain.ExamStudentRoom extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyRoom;
	Integer keyStudent;
	Integer keyExam;
	
	interface"
	public net.sourceforge.fenixedu.domain.IExam getExam();
	
	public void setExam(net.sourceforge.fenixedu.domain.IExam exam);

	public net.sourceforge.fenixedu.domain.IRoom getRoom();
	
	public void setRoom(net.sourceforge.fenixedu.domain.IRoom sala);

	public net.sourceforge.fenixedu.domain.IStudent getStudent();
	
	public void setStudent(net.sourceforge.fenixedu.domain.IStudent student);
	"
}


class net.sourceforge.fenixedu.domain.ExecutionDegree extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyPeriodExamsSecondSemester;
	Integer keyPeriodLessonsSecondSemester;
	Boolean temporaryExamMap;
	Integer keyPeriodExamsFirstSemester;
	Integer keyPeriodLessonsFirstSemester;
	Integer academicYear;
	Integer keyCurricularPlan;
	Integer keyCampus;
	
	interface"
	public net.sourceforge.fenixedu.domain.IExecutionYear getExecutionYear();
	
	public void setExecutionYear(net.sourceforge.fenixedu.domain.IExecutionYear executionYear);
	
	public net.sourceforge.fenixedu.domain.IDegreeCurricularPlan getDegreeCurricularPlan();
	
	public void setDegreeCurricularPlan(net.sourceforge.fenixedu.domain.IDegreeCurricularPlan degreeCurricularPlan);
	
	public java.util.List getCoordinatorsList();
	
	public void setCoordinatorsList(java.util.List coordinatorsList);
	
	public net.sourceforge.fenixedu.domain.ICampus getCampus();
	
	public void setCampus(net.sourceforge.fenixedu.domain.ICampus campus);
	
	public net.sourceforge.fenixedu.domain.IPeriod getPeriodLessonsFirstSemester();
	
	public void setPeriodLessonsFirstSemester(net.sourceforge.fenixedu.domain.IPeriod periodLessonsFirstSemester);
	
	public net.sourceforge.fenixedu.domain.IPeriod getPeriodExamsFirstSemester();
	
	public void setPeriodExamsFirstSemester(net.sourceforge.fenixedu.domain.IPeriod periodExamsFirstSemester);
	
	public net.sourceforge.fenixedu.domain.IPeriod getPeriodLessonsSecondSemester();
	
	public void setPeriodLessonsSecondSemester(net.sourceforge.fenixedu.domain.IPeriod periodLessonsSecondSemester);
	
	public net.sourceforge.fenixedu.domain.IPeriod getPeriodExamsSecondSemester();
	
	public void setPeriodExamsSecondSemester(net.sourceforge.fenixedu.domain.IPeriod periodExamsSecondSemester);
	"
}


class net.sourceforge.fenixedu.domain.support.FAQEntry extends net.sourceforge.fenixedu.domain.DomainObject {
	String answer;
	String question;
	Integer keyParentSection;

	interface "
    public IFAQSection getParentSection();

    public void setParentSection(IFAQSection parentSection);
    "
}


class net.sourceforge.fenixedu.domain.support.FAQSection extends net.sourceforge.fenixedu.domain.DomainObject {
	String sectionName;
	Integer keyParentSection;

	interface "
    public IFAQSection getParentSection();

    public void setParentSection(IFAQSection parentSection);
    "
}


class net.sourceforge.fenixedu.domain.support.GlossaryEntry extends net.sourceforge.fenixedu.domain.DomainObject {
	String definition;
	String term;
}

class net.sourceforge.fenixedu.domain.GroupProperties extends net.sourceforge.fenixedu.domain.DomainObject {
        String projectDescription;
        Integer keyAttendsSet;
        Integer maximumCapacity;
        Integer groupMaximumNumber;
        Integer idealCapacity;
        Integer minimumCapacity;
        String name;
        
        interface "
        public net.sourceforge.fenixedu.util.EnrolmentGroupPolicyType getEnrolmentPolicy();
        
        public void setEnrolmentPolicy(net.sourceforge.fenixedu.util.EnrolmentGroupPolicyType enrolmentGroupPolicy);

        public net.sourceforge.fenixedu.util.TipoAula getShiftType();
        
        public void setShiftType(net.sourceforge.fenixedu.util.TipoAula shiftType);
        
        public java.util.Calendar getEnrolmentBeginDay();
        
		public void setEnrolmentBeginDay(java.util.Calendar enrolmentBeginDay);
		
		public java.util.Calendar getEnrolmentEndDay();

		public void setEnrolmentEndDay(java.util.Calendar enrolmentEndDay);
        
		public void addGroupPropertiesExecutionCourse(net.sourceforge.fenixedu.domain.IGroupPropertiesExecutionCourse groupPropertiesExecutionCourse);

		public void removeGroupPropertiesExecutionCourse(net.sourceforge.fenixedu.domain.IGroupPropertiesExecutionCourse groupPropertiesExecutionCourse);
		
	    public java.util.List getExecutionCourses();
        "
}

class net.sourceforge.fenixedu.domain.GroupPropertiesExecutionCourse extends net.sourceforge.fenixedu.domain.DomainObject {
        Integer keySenderExecutionCourse;
        Integer keySenderPerson;
        Integer keyExecutionCourse;
        Integer keyReceiverPerson;
        Integer keyGroupProperties;
        
        interface "
        public net.sourceforge.fenixedu.util.ProposalState getProposalState();
        
        public void setProposalState(net.sourceforge.fenixedu.util.ProposalState proposalState);
        "
}


class net.sourceforge.fenixedu.domain.inquiries.OldInquiriesCoursesRes extends net.sourceforge.fenixedu.domain.DomainObject {
	Double tolerance2_3;
	Double deviation2_3;
	Double tolerance2_2;
	Integer numAnswers2_4;
	Integer gepCourseId;
	Integer numAnswers2_5_number;
	Double average2_8;
	Integer numAnswers2_3;
	String gepCourseName;
	String average2_7;
	Double numberEvaluated;
	Integer numAnswers2_6;
	Double tolerance2_4;
	Double deviation2_2;
	Double average2_6;
	Integer semester;
	Integer numAnswers2_7;
	Double average2_3;
	Integer numAnswers2_8;
	Integer keyExecutionPeriod;
	Double tolerance2_6;
	Double deviation2_4;
	Double numberApproved;
	Integer curricularYear;
	Double average2_4;
	Double tolerance2_5;
	Double deviation2_5;
	Integer firstEnrollment;
	Double average2_2;
	String courseCode;
	Integer keyDegree;
	Double average2_5;
	Integer numAnswers2_2;
	Double numberEnrollments;
	Integer gepExecutionYear;
	Double representationQuota;
	Double deviation2_8;
	Double deviation2_6;
	Double tolerance2_8;
	Integer numAnswers2_5_text;
	Integer numberAnswers;
	Integer inquiryId;
}


class net.sourceforge.fenixedu.domain.inquiries.OldInquiriesSummary extends net.sourceforge.fenixedu.domain.DomainObject {
	Double average3_9;
	Double average3_4_numerical;
	Integer gepCourseId;
	Double average2_8;
	Double roomAverage;
	String average3_3_interval;
	String gepCourseName;
	Integer numberEvaluated;
	Double averageAppreciationTeachers;
	Double average3_3_numerical;
	Double averageAppreciationCourse;
	Double average2_6;
	Integer semester;
	Double average6_2;
	Double average2_7_numerical;
	Double average2_3;
	Double average3_6;
	Integer keyExecutionPeriod;
	String average2_7_interval;
	Integer numberApproved;
	Integer curricularYear;
	Double average6_1;
	Double average2_4;
	Double average3_11;
	Double average3_10;
	String average3_4_interval;
	String gepDegreeName;
	Double firstEnrollment;
	Double average2_2;
	String courseCode;
	Integer keyDegree;
	Double average3_7;
	Double average2_5;
	Integer numberEnrollments;
	Integer gepExecutionYear;
	Double average3_5;
	Double representationQuota;
	Double average6_3;
	Double average3_8;
	Integer numberAnswers;
	Integer inquiryId;
}


class net.sourceforge.fenixedu.domain.inquiries.OldInquiriesTeachersRes extends net.sourceforge.fenixedu.domain.DomainObject {
	String classTypeLong;
	Double average3_9;
	Double deviation3_4;
	Double tolerance3_4;
	Integer numAnswers3_5;
	Integer keyTeacher;
	Double tolerance3_10;
	String average3_4;
	String classType;
	Integer numAnswers3_7;
	Double tolerance3_5;
	String active;
	Integer numAnswers3_8;
	Integer numAnswers3_9;
	Double average3_6;
	Integer mail;
	Double average3_11;
	Integer numAnswers3_3;
	Double deviation3_7;
	String courseCode;
	Integer numAnswers3_10;
	Double tolerance3_11;
	Integer gepExecutionYear;
	Double deviation3_6;
	Integer numAnswers3_4;
	Double average3_8;
	Integer inquiryId;
	Double tolerance3_6;
	Integer gepCourseId;
	Integer numAnswers3_11;
	String average3_3;
	Double tolerance3_3;
	String gepCourseName;
	Double deviation3_11;
	Double deviation3_10;
	Double deviation3_3;
	Integer semester;
	Double tolerance3_8;
	Integer keyExecutionPeriod;
	String category;
	Double deviation3_8;
	Integer curricularYear;
	Double tolerance3_7;
	Double deviation3_5;
	Double average3_10;
	Integer totalNumberAnswers;
	String teacherName;
	Integer teacherNumber;
	Integer keyDegree;
	Integer numAnswers3_6;
	Double average3_7;
	Double average3_5;
	Double tolerance3_9;
	Integer departmentCode;
	Double deviation3_9;
}


class net.sourceforge.fenixedu.domain.teacher.OldPublication extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyTeacher;
	Date lastModificationDate;
	String publication;
	
	interface "
	public net.sourceforge.fenixedu.util.OldPublicationType getOldPublicationType();

	public void setOldPublicationType(net.sourceforge.fenixedu.util.OldPublicationType oldPublicationType);
	"
}

class net.sourceforge.fenixedu.domain.Period extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyPeriod;
	
	interface"
	public java.util.Calendar getEndDate();
	
	public void setEndDate(java.util.Calendar calendar);

	public java.util.Calendar getStartDate();
	
	public void setStartDate(java.util.Calendar calendar);

	public java.util.List getRoomOccupations();
	
	public void setRoomOccupations(java.util.List roomOccupations);

	public net.sourceforge.fenixedu.domain.IPeriod getNextPeriod();
	
	public void setNextPeriod(net.sourceforge.fenixedu.domain.IPeriod nextPeriod);

	public java.util.Calendar getEndDateOfComposite();
	
	public boolean intersectPeriods(IPeriod period);
	"
}

class net.sourceforge.fenixedu.domain.Person extends net.sourceforge.fenixedu.domain.DomainObject {
	String localidade;
	String codigoFiscal;
	String telemovel;
	String enderecoWeb;
	Date dataValidadeDocumentoIdentificacao;
	String distritoMorada;
	String numeroDocumentoIdentificacao;
	Integer chavePais;
	String profissao;
	String concelhoNaturalidade;
	Date dataEmissaoDocumentoIdentificacao;
	String morada;
	Boolean availableWebSite;
	String nacionalidade;
	String numContribuinte;
	String localidadeCodigoPostal;
	String username;
	String telefone;
	String localEmissaoDocumentoIdentificacao;
	String distritoNaturalidade;
	String password;
	Boolean availableEmail;
	String workPhone;
	String nome;
	String freguesiaNaturalidade;
	String codigoPostal;
	String nomePai;
	String nomeMae;
	Boolean availablePhoto;
	String email;
	String concelhoMorada;
	Date nascimento;
	String freguesiaMorada;

	interface "
    public java.util.List getManageableDepartmentCredits();

    public void setManageableDepartmentCredits(final java.util.List manageableDepartmentCredits);

    public net.sourceforge.fenixedu.util.EstadoCivil getEstadoCivil();

    public ICountry getPais();

    public java.util.Collection getPersonRoles();

    public net.sourceforge.fenixedu.domain.person.Sex getSex();

    public net.sourceforge.fenixedu.util.TipoDocumentoIdentificacao getTipoDocumentoIdentificacao();

    public void setEstadoCivil(net.sourceforge.fenixedu.util.EstadoCivil estadoCivil);

    public void setPais(ICountry pais);

    public void setPersonRoles(java.util.Collection personRoles);

    public void setSex(net.sourceforge.fenixedu.domain.person.Sex sex);

    public void setTipoDocumentoIdentificacao(net.sourceforge.fenixedu.util.TipoDocumentoIdentificacao tipoDocumentoIdentificacao);

    public java.util.List getAdvisories();

    public void setAdvisories(java.util.List list);

    public String getSlideName();
    "
}


class net.sourceforge.fenixedu.domain.Role extends net.sourceforge.fenixedu.domain.DomainObject {
	String portalSubApplication;
	String pageNameProperty;
	String page;

	interface "
    public net.sourceforge.fenixedu.domain.person.RoleType getRoleType();

    public void setRoleType(net.sourceforge.fenixedu.domain.person.RoleType roleType);
    "
}


class net.sourceforge.fenixedu.domain.Room extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyBuilding;
	String nome;
	Integer capacidadeNormal;
	Integer capacidadeExame;
	Integer piso;
	
	interface "
	public String getEdificio();
    public void setEdificio(String edificio);
	public net.sourceforge.fenixedu.util.TipoSala getTipo();
    public void setTipo(net.sourceforge.fenixedu.util.TipoSala tipo);
	"
}


class net.sourceforge.fenixedu.domain.Shift extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer availabilityFinal;
	Integer chaveDisciplinaExecucao;
	String nome;
	Integer lotacao;
	
	interface "
	public net.sourceforge.fenixedu.util.TipoAula getTipo();
    public void setTipo(net.sourceforge.fenixedu.util.TipoAula tipo);
    public Integer getOcupation();
    public void setOcupation(Integer integer);
    public Double getPercentage();
    public void setPercentage(Double percentage);
    public double hours();
	"
}


class net.sourceforge.fenixedu.domain.Site extends net.sourceforge.fenixedu.domain.DomainObject {
	String style;
	String initialStatement;
	String mail;
	Integer keyExecutionCourse;
	String introduction;
	String alternativeSite;
}


class net.sourceforge.fenixedu.domain.gesdis.StudentCourseReport extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyCurricularCourse;
	Date lastModificationDate;
	String strongPoints;
	String weakPoints;
	String studentReport;
}

class net.sourceforge.fenixedu.domain.StudentCurricularPlan extends net.sourceforge.fenixedu.domain.DomainObject {
    
    Integer branchKey;
    Double  classification;
    Integer completedCourses;
    Integer degreeCurricularPlanKey;
    Integer employeeKey;
    Integer enrolledCourses;
    Double givenCredits;
    String observations;
    String ojbConcreteClass;
    Date startDate;
    Integer studentKey;
    Date when;
    
    interface "
    
        public boolean areNewAreasCompatible(net.sourceforge.fenixedu.domain.IBranch specializationArea, net.sourceforge.fenixedu.domain.IBranch secundaryArea)
            throws net.sourceforge.fenixedu.persistenceTier.ExcepcaoPersistencia, net.sourceforge.fenixedu.applicationTier.Servico.exceptions.BothAreasAreTheSameServiceException, net.sourceforge.fenixedu.applicationTier.Servico.exceptions.InvalidArgumentsServiceException;
    
        public java.util.List getAllStudentEnrolledEnrollmentsInExecutionPeriod(net.sourceforge.fenixedu.domain.IExecutionPeriod executionPeriod);
        public java.util.List getAprovedEnrolmentsInExecutionPeriod(final net.sourceforge.fenixedu.domain.IExecutionPeriod executionPeriod);
        public net.sourceforge.fenixedu.domain.IBranch getBranch();
        public boolean getCanChangeSpecializationArea();
        public Integer getCreditsInSecundaryArea();
        public Integer getCreditsInSpecializationArea();
        public net.sourceforge.fenixedu.util.StudentCurricularPlanState getCurrentState();
        public Integer getCurricularCourseAcumulatedEnrollments(net.sourceforge.fenixedu.domain.ICurricularCourse curricularCourse);
        public net.sourceforge.fenixedu.domain.curriculum.CurricularCourseEnrollmentType getCurricularCourseEnrollmentType(
                net.sourceforge.fenixedu.domain.ICurricularCourse curricularCourse, net.sourceforge.fenixedu.domain.IExecutionPeriod currentExecutionPeriod);
        public java.util.List getCurricularCoursesToEnroll(net.sourceforge.fenixedu.domain.IExecutionPeriod executionPeriod) throws net.sourceforge.fenixedu.domain.exceptions.FenixDomainException;
        public net.sourceforge.fenixedu.domain.IDegreeCurricularPlan getDegreeCurricularPlan();
        public net.sourceforge.fenixedu.domain.IEmployee getEmployee();
        public java.util.List getEnrollmentReports();
        public java.util.List getEnrolments();
        public Integer getMaximumNumberOfAcumulatedEnrollments();
        public Integer getMaximumNumberOfCoursesToEnroll();
        public Integer getMinimumNumberOfCoursesToEnroll();
        public java.util.List getNotNeedToEnrollCurricularCourses();        
        public int getNumberOfApprovedCurricularCourses();
        public int getNumberOfEnrolledCurricularCourses();
        public net.sourceforge.fenixedu.domain.IBranch getSecundaryBranch();
        public net.sourceforge.fenixedu.util.Specialization getSpecialization();
        public net.sourceforge.fenixedu.domain.IStudent getStudent();

        public boolean isCurricularCourseApproved(net.sourceforge.fenixedu.domain.ICurricularCourse curricularCourse);
        public boolean isCurricularCourseEnrolled(net.sourceforge.fenixedu.domain.ICurricularCourse curricularCourse);
        public boolean isCurricularCourseEnrolledInExecutionPeriod(net.sourceforge.fenixedu.domain.ICurricularCourse curricularCourse,
                net.sourceforge.fenixedu.domain.IExecutionPeriod executionPeriod);
        
        public void setBranch(net.sourceforge.fenixedu.domain.IBranch branch);
        public void setCreditsInSecundaryArea(Integer creditsInSecundaryArea);
        public void setCreditsInSpecializationArea(Integer creditsInSpecializationArea);
        public void setCurrentState(net.sourceforge.fenixedu.util.StudentCurricularPlanState currentState);
        public void setDegreeCurricularPlan(net.sourceforge.fenixedu.domain.IDegreeCurricularPlan degreeCurricularPlan);
        public void setEmployee(net.sourceforge.fenixedu.domain.IEmployee employee);
        public void setEnrollmentReports(java.util.List enrollmentReports);
        public void setEnrolments(java.util.List enrolments);        
        public void setNotNeedToEnrollCurricularCourses(java.util.List notNeedToEnrollCurricularCourses);
        public void setSecundaryBranch(net.sourceforge.fenixedu.domain.IBranch secundaryBranch);
        public void setSpecialization(net.sourceforge.fenixedu.util.Specialization specialization);
        public void setStudent(net.sourceforge.fenixedu.domain.IStudent student);
    "
}


class net.sourceforge.fenixedu.domain.StudentCurricularPlanLEIC extends net.sourceforge.fenixedu.domain.StudentCurricularPlan {
        
    Integer creditsInSecundaryArea;
    Integer creditsInSpecializationArea;
    Integer secundaryBranchKey;
}

class net.sourceforge.fenixedu.domain.StudentCurricularPlanLEEC extends net.sourceforge.fenixedu.domain.StudentCurricularPlan {
    Integer creditsInSecundaryArea;
    Integer creditsInSpecializationArea;
    Integer secundaryBranchKey;
}

class net.sourceforge.fenixedu.domain.StudentGroup extends net.sourceforge.fenixedu.domain.DomainObject {
        Integer keyShift;
        Integer groupNumber;
        Integer keyAttendsSet;
}

class net.sourceforge.fenixedu.domain.StudentGroupAttend extends net.sourceforge.fenixedu.domain.DomainObject {
        Integer keyStudentGroup;
        Integer keyAttend;        
}

class net.sourceforge.fenixedu.domain.Summary extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer studentsNumber;
	Integer keyProfessorship;
	String title;
	Integer keyExecutionCourse;
	Integer keyTeacher;
	Integer keyRoom;
	String teacherName;
	String summaryText;
	Date lastModifiedDate;
	Integer keyShift;
	Boolean isExtraLesson;
	
	interface "
	public java.util.Calendar getSummaryHour();
    public void setSummaryHour(java.util.Calendar summaryHour);
    public net.sourceforge.fenixedu.util.TipoAula getSummaryType();
    public void setSummaryType(net.sourceforge.fenixedu.util.TipoAula summaryType);
    public java.util.Calendar getSummaryDate();
    public void setSummaryDate(java.util.Calendar summaryDate);
	"
}

class net.sourceforge.fenixedu.domain.WrittenEvaluationCurricularCourseScope extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyWrittenEvaluation;
	Integer keyCurricularCourseScope;

	interface "
	public net.sourceforge.fenixedu.domain.IWrittenEvaluation getWrittenEvaluation();
	 
	public void setWrittenEvaluation(net.sourceforge.fenixedu.domain.IWrittenEvaluation writtenEvaluation);
	 
	public net.sourceforge.fenixedu.domain.ICurricularCourseScope getCurricularCourseScope();
	 
	public void setCurricularCourseScope(net.sourceforge.fenixedu.domain.ICurricularCourseScope curricularCourseScope);
	"

}


/*
 * External classes declarations
 *
 * The following declarations allow the DmlCompiler to recognize the classes in
 * the relations definitions. Remove each declaration once the corresponding 
 * class definition is included.
 * 
 */

external class net.sourceforge.fenixedu.domain.Attends;
external class net.sourceforge.fenixedu.domain.CurricularCourseScope;
external class net.sourceforge.fenixedu.domain.Curriculum;
external class net.sourceforge.fenixedu.domain.Degree;
external class net.sourceforge.fenixedu.domain.DepartmentCourse;
external class net.sourceforge.fenixedu.domain.ExecutionCourse;
external class net.sourceforge.fenixedu.domain.ExecutionPeriod;
external class net.sourceforge.fenixedu.domain.ExecutionYear;
external class net.sourceforge.fenixedu.domain.Lesson;
external class net.sourceforge.fenixedu.domain.Professorship;
external class net.sourceforge.fenixedu.domain.RoomOccupation;
external class net.sourceforge.fenixedu.domain.SchoolClass;
external class net.sourceforge.fenixedu.domain.ScientificArea;
external class net.sourceforge.fenixedu.domain.Section;
external class net.sourceforge.fenixedu.domain.ShiftProfessorship;
external class net.sourceforge.fenixedu.domain.ShiftStudent;
external class net.sourceforge.fenixedu.domain.Student;
external class net.sourceforge.fenixedu.domain.Teacher;
external class net.sourceforge.fenixedu.domain.teacher.TeachingCareer;
external class net.sourceforge.fenixedu.domain.University;


/*
 * Relations definitions
 * 
 */

relation AnswerExportProposal {
	net.sourceforge.fenixedu.domain.GroupPropertiesExecutionCourse playsRole groupPropertiesExecutionCourseReceiver {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Person playsRole receiverPerson;
}


relation AttendBelongsToAttendsSet {
	net.sourceforge.fenixedu.domain.AttendInAttendsSet playsRole attendInAttendsSet {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Attends playsRole attend;
}


relation AttendsSetHasAttend {
	net.sourceforge.fenixedu.domain.AttendInAttendsSet playsRole attendInAttendsSet {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.AttendsSet playsRole attendsSet;
}


relation BelongsTo {
	net.sourceforge.fenixedu.domain.GroupPropertiesExecutionCourse playsRole groupPropertiesExecutionCourse {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.GroupProperties playsRole groupProperties;
}


relation BuildingRoom {
	net.sourceforge.fenixedu.domain.Room playsRole rooms {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Building playsRole building;
}


relation CurricularCourseCurricularCourseScope {
	net.sourceforge.fenixedu.domain.CurricularCourse playsRole curricularCourse;
	net.sourceforge.fenixedu.domain.CurricularCourseScope playsRole scopes {
		multiplicity *;
	}
}


relation CurricularCourseCurriculum {
	net.sourceforge.fenixedu.domain.Curriculum playsRole associatedCurriculums {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.CurricularCourse playsRole curricularCourse;
}


relation CurricularCourseDepartmentCourse {
	net.sourceforge.fenixedu.domain.CurricularCourse playsRole associatedCurricularCourses {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.DepartmentCourse playsRole departmentCourse;
}


relation CurricularCourseExecutionCourse {
	net.sourceforge.fenixedu.domain.CurricularCourse playsRole associatedCurricularCourses {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.ExecutionCourse playsRole associatedExecutionCourses {
		multiplicity *;
	}
}


relation CurricularCourseHistoric {
	net.sourceforge.fenixedu.domain.gesdis.CourseHistoric playsRole courseHistoric;
	net.sourceforge.fenixedu.domain.CurricularCourse playsRole curricularCourse;
}


relation CurricularCourseScientificArea {
	net.sourceforge.fenixedu.domain.CurricularCourse playsRole associatedCurricularCourses {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.ScientificArea playsRole scientificArea;
}


relation CurricularCourseStudentReport {
	net.sourceforge.fenixedu.domain.gesdis.StudentCourseReport playsRole studentCourseReport {
		multiplicity 1;
	}
	net.sourceforge.fenixedu.domain.CurricularCourse playsRole curricularCourse;
}


relation CurricularCourseUniversity {
	net.sourceforge.fenixedu.domain.CurricularCourse playsRole associatedCurricularCourses {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.University playsRole university;
}


relation DegreeCurricularPlanCurricularCourse {
	net.sourceforge.fenixedu.domain.CurricularCourse playsRole curricularCourses {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.DegreeCurricularPlan playsRole degreeCurricularPlan;
}


relation DelegateDegree {
	net.sourceforge.fenixedu.domain.student.Delegate playsRole delegate {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Degree playsRole degree;
}


relation DelegateExecutionYear {
	net.sourceforge.fenixedu.domain.student.Delegate playsRole delegate {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.ExecutionYear playsRole executionYear;
}


relation DelegateStudent {
	net.sourceforge.fenixedu.domain.student.Delegate playsRole delegate {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Student playsRole student;
}


relation ExecutionCourseReport {
	net.sourceforge.fenixedu.domain.gesdis.CourseReport playsRole courseReport {
		multiplicity 1;
	}
	net.sourceforge.fenixedu.domain.ExecutionCourse playsRole executionCourse;
}


relation ExecutionCourseBibliographicReference {
	net.sourceforge.fenixedu.domain.BibliographicReference playsRole associatedBibliographicReferences {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.ExecutionCourse playsRole executionCourse;
}


relation ExecutionCourseSite {
	net.sourceforge.fenixedu.domain.Site playsRole site {
		multiplicity 1;
	}
	net.sourceforge.fenixedu.domain.ExecutionCourse playsRole executionCourse;
}


relation ExecutionCourseSummary {
	net.sourceforge.fenixedu.domain.Summary playsRole associatedSummaries {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.ExecutionCourse playsRole executionCourse;
}


relation GoalExecutionCourse {
	net.sourceforge.fenixedu.domain.GroupPropertiesExecutionCourse playsRole groupPropertiesExecutionCourse {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.ExecutionCourse playsRole executionCourse;
}


relation GroupPropertiesAttendsSet {
	net.sourceforge.fenixedu.domain.AttendsSet playsRole attendsSet;
	net.sourceforge.fenixedu.domain.GroupProperties playsRole groupProperties;
}


relation LessonShift {
	net.sourceforge.fenixedu.domain.Lesson playsRole associatedLessons {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Shift playsRole shift;
}


relation MakeExportProposal {
	net.sourceforge.fenixedu.domain.GroupPropertiesExecutionCourse playsRole groupPropertiesExecutionCourseSender {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Person playsRole senderPerson;
}


relation OldInquiriesCoursesResDegree {
	net.sourceforge.fenixedu.domain.inquiries.OldInquiriesCoursesRes playsRole oldInquiriesCoursesRes {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Degree playsRole degree;
}


relation OldInquiriesCoursesResExecutionPeriod {
	net.sourceforge.fenixedu.domain.inquiries.OldInquiriesCoursesRes playsRole oldInquiriesCoursesRes {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.ExecutionPeriod playsRole executionPeriod;
}


relation OldInquiriesSummaryDegree {
	net.sourceforge.fenixedu.domain.inquiries.OldInquiriesSummary playsRole oldInquiriesSummary {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Degree playsRole degree;
}


relation OldInquiriesSummaryExecutionPeriod {
	net.sourceforge.fenixedu.domain.inquiries.OldInquiriesSummary playsRole oldInquiriesSummary {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.ExecutionPeriod playsRole executionPeriod;
}


relation OldInquiriesTeachersResDegree {
	net.sourceforge.fenixedu.domain.inquiries.OldInquiriesTeachersRes playsRole oldInquiriesTeachersRes {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Degree playsRole degree;
}


relation OldInquiriesTeachersResExecutionPeriod {
	net.sourceforge.fenixedu.domain.inquiries.OldInquiriesTeachersRes playsRole oldInquiriesTeachersRes {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.ExecutionPeriod playsRole executionPeriod {
		multiplicity 1;
	}
}


relation OldInquiriesTeachersResTeacher {
	net.sourceforge.fenixedu.domain.inquiries.OldInquiriesTeachersRes playsRole oldInquiriesTeacherRes {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Teacher playsRole teacher;
}


relation ProfessorshipSummary {
	net.sourceforge.fenixedu.domain.Summary playsRole associatedSummaries {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Professorship playsRole professorship;
}


relation RoomLesson {
	net.sourceforge.fenixedu.domain.Lesson playsRole associatedLessons {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Room playsRole room;
}



relation RoomRoomOccupation {
	net.sourceforge.fenixedu.domain.RoomOccupation playsRole roomOccupations {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Room playsRole room;
}


relation RoomSummary {
	net.sourceforge.fenixedu.domain.Summary playsRole associatedSummaries {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Room playsRole room;
}

relation SendProposal {
	net.sourceforge.fenixedu.domain.GroupPropertiesExecutionCourse playsRole groupPropertiesSenderExecutionCourse {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.ExecutionCourse playsRole senderExecutionCourse;
}


relation ShiftExecutionCourse {
	net.sourceforge.fenixedu.domain.Shift playsRole associatedShifts {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.ExecutionCourse playsRole disciplinaExecucao;
}


relation ShiftSchoolClass {
	net.sourceforge.fenixedu.domain.SchoolClass playsRole associatedClasses {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Shift playsRole associatedShifts {
		multiplicity *;
	}
}


relation ShiftShiftProfessorship {
	net.sourceforge.fenixedu.domain.Shift playsRole shift;
	net.sourceforge.fenixedu.domain.ShiftProfessorship playsRole associatedShiftProfessorship {
		multiplicity *;
	}
}


relation ShiftShiftStudent {
	net.sourceforge.fenixedu.domain.Shift playsRole shift;
	net.sourceforge.fenixedu.domain.ShiftStudent playsRole studentShifts {
		multiplicity *;
	}
}


relation ShiftSummary {
	net.sourceforge.fenixedu.domain.Summary playsRole associatedSummaries {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Shift playsRole shift;
}


relation SiteSection {
	net.sourceforge.fenixedu.domain.Section playsRole associatedSections {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Site playsRole site;
}

relation SiteAnnouncement {
	net.sourceforge.fenixedu.domain.Announcement playsRole associatedAnnouncements {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Site playsRole site;
}


relation StudentGroup {
	net.sourceforge.fenixedu.domain.StudentGroup playsRole associatedStudentGroups {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Shift playsRole shift;
}


relation StudentGroupAttendAttends {
	net.sourceforge.fenixedu.domain.StudentGroupAttend playsRole studentGroupAttends {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Attends playsRole attend;
}


relation StudentGroupAttendStudentGroup {
	net.sourceforge.fenixedu.domain.StudentGroupAttend playsRole studentGroupAttends {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.StudentGroup playsRole studentGroup;
}


relation StudentGroupBelongsToGroupProperties {
	net.sourceforge.fenixedu.domain.StudentGroup playsRole studentGroups {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.AttendsSet playsRole attendsSet;
}


relation TeachingCareerCategory {
	net.sourceforge.fenixedu.domain.teacher.TeachingCareer playsRole teachingCareer {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.teacher.Category playsRole category;
}


relation TeacherCategory {
	net.sourceforge.fenixedu.domain.Teacher playsRole teacher {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.teacher.Category playsRole category;
}


relation TeacherOldPublication {
	net.sourceforge.fenixedu.domain.teacher.OldPublication playsRole oldPublication {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Teacher playsRole teacher;
}


relation TeacherSummary {
	net.sourceforge.fenixedu.domain.Summary playsRole associatedSummaries {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Teacher playsRole teacher;
}

