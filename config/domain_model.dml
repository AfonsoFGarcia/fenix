/*
 * DOMAIN_MODEL.DML
 *
 * The Fenix Project Domain Model
 * 
 */

class net.sourceforge.fenixedu.domain.DomainObject implements java.io.Serializable {
	Integer ackOptLock;
	Integer idInternal;
}


class net.sourceforge.fenixedu.domain.Advisory extends net.sourceforge.fenixedu.domain.DomainObject {
	Date created;
	String subject;
	Boolean onlyShowOnce;
	Date expires;
	String message;
	String sender;
}


class net.sourceforge.fenixedu.domain.Building extends net.sourceforge.fenixedu.domain.DomainObject {
	String name;

	interface "
    public java.util.List getRooms();
    
    public void setRooms(java.util.List rooms);
    "
}


class net.sourceforge.fenixedu.domain.Campus extends net.sourceforge.fenixedu.domain.DomainObject {
	String name;
}


class net.sourceforge.fenixedu.domain.teacher.Category extends net.sourceforge.fenixedu.domain.DomainObject {
	String code;
	String longName;
	Boolean canBeExecutionCourseResponsible;
	String shortName;
}


class net.sourceforge.fenixedu.domain.Country extends net.sourceforge.fenixedu.domain.DomainObject {
	String code;
	String nationality;
	String name;
}


class net.sourceforge.fenixedu.domain.gesdis.CourseHistoric extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyCurricularCourse;
	String curricularYear;
	Integer approved;
	Integer enrolled;
	Integer semester;
	Integer evaluated;
}


class net.sourceforge.fenixedu.domain.gesdis.CourseReport extends net.sourceforge.fenixedu.domain.DomainObject {
	String report;
	Date lastModificationDate;
	Integer keyExecutionCourse;
}


class net.sourceforge.fenixedu.domain.student.Delegate extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyExecutionYear;
	Integer keyDegree;
	Boolean type;
	Integer keyStudent;
	
	interface "
	public net.sourceforge.fenixedu.util.DelegateYearType getYearType();
	
	public void setYearType(net.sourceforge.fenixedu.util.DelegateYearType yearType);
	"
}


class net.sourceforge.fenixedu.domain.support.FAQEntry extends net.sourceforge.fenixedu.domain.DomainObject {
	String answer;
	String question;
	Integer keyParentSection;

	interface "
    public IFAQSection getParentSection();

    public void setParentSection(IFAQSection parentSection);
    "
}


class net.sourceforge.fenixedu.domain.support.FAQSection extends net.sourceforge.fenixedu.domain.DomainObject {
	String sectionName;
	Integer keyParentSection;

	interface "
    public IFAQSection getParentSection();

    public void setParentSection(IFAQSection parentSection);
    "
}


class net.sourceforge.fenixedu.domain.support.GlossaryEntry extends net.sourceforge.fenixedu.domain.DomainObject {
	String definition;
	String term;
}


class net.sourceforge.fenixedu.domain.inquiries.OldInquiriesCoursesRes extends net.sourceforge.fenixedu.domain.DomainObject {
	Double tolerance2_3;
	Double deviation2_3;
	Double tolerance2_2;
	Integer numAnswers2_4;
	Integer gepCourseId;
	Integer numAnswers2_5_number;
	Double average2_8;
	Integer numAnswers2_3;
	String gepCourseName;
	String average2_7;
	Double numberEvaluated;
	Integer numAnswers2_6;
	Double tolerance2_4;
	Double deviation2_2;
	Double average2_6;
	Integer semester;
	Integer numAnswers2_7;
	Double average2_3;
	Integer numAnswers2_8;
	Integer keyExecutionPeriod;
	Double tolerance2_6;
	Double deviation2_4;
	Double numberApproved;
	Integer curricularYear;
	Double average2_4;
	Double tolerance2_5;
	Double deviation2_5;
	Integer firstEnrollment;
	Double average2_2;
	String courseCode;
	Integer keyDegree;
	Double average2_5;
	Integer numAnswers2_2;
	Double numberEnrollments;
	Integer gepExecutionYear;
	Double representationQuota;
	Double deviation2_8;
	Double deviation2_6;
	Double tolerance2_8;
	Integer numAnswers2_5_text;
	Integer numberAnswers;
	Integer inquiryId;
}


class net.sourceforge.fenixedu.domain.inquiries.OldInquiriesSummary extends net.sourceforge.fenixedu.domain.DomainObject {
	Double average3_9;
	Double average3_4_numerical;
	Integer gepCourseId;
	Double average2_8;
	Double roomAverage;
	String average3_3_interval;
	String gepCourseName;
	Integer numberEvaluated;
	Double averageAppreciationTeachers;
	Double average3_3_numerical;
	Double averageAppreciationCourse;
	Double average2_6;
	Integer semester;
	Double average6_2;
	Double average2_7_numerical;
	Double average2_3;
	Double average3_6;
	Integer keyExecutionPeriod;
	String average2_7_interval;
	Integer numberApproved;
	Integer curricularYear;
	Double average6_1;
	Double average2_4;
	Double average3_11;
	Double average3_10;
	String average3_4_interval;
	String gepDegreeName;
	Double firstEnrollment;
	Double average2_2;
	String courseCode;
	Integer keyDegree;
	Double average3_7;
	Double average2_5;
	Integer numberEnrollments;
	Integer gepExecutionYear;
	Double average3_5;
	Double representationQuota;
	Double average6_3;
	Double average3_8;
	Integer numberAnswers;
	Integer inquiryId;
}


class net.sourceforge.fenixedu.domain.inquiries.OldInquiriesTeachersRes extends net.sourceforge.fenixedu.domain.DomainObject {
	String classTypeLong;
	Double average3_9;
	Double deviation3_4;
	Double tolerance3_4;
	Integer numAnswers3_5;
	Integer keyTeacher;
	Double tolerance3_10;
	String average3_4;
	String classType;
	Integer numAnswers3_7;
	Double tolerance3_5;
	String active;
	Integer numAnswers3_8;
	Integer numAnswers3_9;
	Double average3_6;
	Integer mail;
	Double average3_11;
	Integer numAnswers3_3;
	Double deviation3_7;
	String courseCode;
	Integer numAnswers3_10;
	Double tolerance3_11;
	Integer gepExecutionYear;
	Double deviation3_6;
	Integer numAnswers3_4;
	Double average3_8;
	Integer inquiryId;
	Double tolerance3_6;
	Integer gepCourseId;
	Integer numAnswers3_11;
	String average3_3;
	Double tolerance3_3;
	String gepCourseName;
	Double deviation3_11;
	Double deviation3_10;
	Double deviation3_3;
	Integer semester;
	Double tolerance3_8;
	Integer keyExecutionPeriod;
	String category;
	Double deviation3_8;
	Integer curricularYear;
	Double tolerance3_7;
	Double deviation3_5;
	Double average3_10;
	Integer totalNumberAnswers;
	String teacherName;
	Integer teacherNumber;
	Integer keyDegree;
	Integer numAnswers3_6;
	Double average3_7;
	Double average3_5;
	Double tolerance3_9;
	Integer departmentCode;
	Double deviation3_9;
}


class net.sourceforge.fenixedu.domain.teacher.OldPublication extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyTeacher;
	Date lastModificationDate;
	String publication;
	
	interface "
	public net.sourceforge.fenixedu.util.OldPublicationType getOldPublicationType();

	public void setOldPublicationType(net.sourceforge.fenixedu.util.OldPublicationType oldPublicationType);
	"
}


class net.sourceforge.fenixedu.domain.Person extends net.sourceforge.fenixedu.domain.DomainObject {
	String localidade;
	String codigoFiscal;
	String telemovel;
	String enderecoWeb;
	Date dataValidadeDocumentoIdentificacao;
	String distritoMorada;
	String numeroDocumentoIdentificacao;
	Integer chavePais;
	String profissao;
	String concelhoNaturalidade;
	Date dataEmissaoDocumentoIdentificacao;
	String morada;
	Boolean availableWebSite;
	String nacionalidade;
	String numContribuinte;
	String localidadeCodigoPostal;
	String username;
	String telefone;
	String localEmissaoDocumentoIdentificacao;
	String distritoNaturalidade;
	String password;
	Boolean availableEmail;
	String workPhone;
	String nome;
	String freguesiaNaturalidade;
	String codigoPostal;
	String nomePai;
	String nomeMae;
	Boolean availablePhoto;
	String email;
	String concelhoMorada;
	Date nascimento;
	String freguesiaMorada;

	interface "
    public java.util.List getManageableDepartmentCredits();

    public void setManageableDepartmentCredits(final java.util.List manageableDepartmentCredits);

    public net.sourceforge.fenixedu.util.EstadoCivil getEstadoCivil();

    public ICountry getPais();

    public java.util.Collection getPersonRoles();

    public net.sourceforge.fenixedu.domain.person.Sex getSex();

    public net.sourceforge.fenixedu.util.TipoDocumentoIdentificacao getTipoDocumentoIdentificacao();

    public void setEstadoCivil(net.sourceforge.fenixedu.util.EstadoCivil estadoCivil);

    public void setPais(ICountry pais);

    public void setPersonRoles(java.util.Collection personRoles);

    public void setSex(net.sourceforge.fenixedu.domain.person.Sex sex);

    public void setTipoDocumentoIdentificacao(net.sourceforge.fenixedu.util.TipoDocumentoIdentificacao tipoDocumentoIdentificacao);

    public java.util.List getAdvisories();

    public void setAdvisories(java.util.List list);

    public String getSlideName();
    "
}


class net.sourceforge.fenixedu.domain.Role extends net.sourceforge.fenixedu.domain.DomainObject {
	String portalSubApplication;
	String pageNameProperty;
	String page;

	interface "
    public net.sourceforge.fenixedu.domain.person.RoleType getRoleType();

    public void setRoleType(net.sourceforge.fenixedu.domain.person.RoleType roleType);
    "
}


class net.sourceforge.fenixedu.domain.gesdis.StudentCourseReport extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyCurricularCourse;
	Date lastModificationDate;
	String strongPoints;
	String weakPoints;
	String studentReport;
}

class net.sourceforge.fenixedu.domain.StudentCurricularPlan extends net.sourceforge.fenixedu.domain.DomainObject {
    
    Integer branchKey;
    Double  classification;
    Integer completedCourses;
    Integer degreeCurricularPlanKey;
    Integer employeeKey;
    Integer enrolledCourses;
    Double givenCredits;
    String observations;
    String ojbConcreteClass;
    Date startDate;
    Integer studentKey;
    Date when;
    
    interface "
    
        public boolean areNewAreasCompatible(net.sourceforge.fenixedu.domain.IBranch specializationArea, net.sourceforge.fenixedu.domain.IBranch secundaryArea)
            throws net.sourceforge.fenixedu.persistenceTier.ExcepcaoPersistencia, net.sourceforge.fenixedu.applicationTier.Servico.exceptions.BothAreasAreTheSameServiceException, net.sourceforge.fenixedu.applicationTier.Servico.exceptions.InvalidArgumentsServiceException;
    
        public java.util.List getAllStudentEnrolledEnrollmentsInExecutionPeriod(net.sourceforge.fenixedu.domain.IExecutionPeriod executionPeriod);
        public java.util.List getAprovedEnrolmentsInExecutionPeriod(final net.sourceforge.fenixedu.domain.IExecutionPeriod executionPeriod);
        public net.sourceforge.fenixedu.domain.IBranch getBranch();
        public boolean getCanChangeSpecializationArea();
        public Integer getCreditsInSecundaryArea();
        public Integer getCreditsInSpecializationArea();
        public net.sourceforge.fenixedu.util.StudentCurricularPlanState getCurrentState();
        public Integer getCurricularCourseAcumulatedEnrollments(net.sourceforge.fenixedu.domain.ICurricularCourse curricularCourse);
        public net.sourceforge.fenixedu.util.enrollment.CurricularCourseEnrollmentType getCurricularCourseEnrollmentType(
                net.sourceforge.fenixedu.domain.ICurricularCourse curricularCourse, net.sourceforge.fenixedu.domain.IExecutionPeriod currentExecutionPeriod);
        public java.util.List getCurricularCoursesToEnroll(net.sourceforge.fenixedu.domain.IExecutionPeriod executionPeriod) throws net.sourceforge.fenixedu.domain.exceptions.FenixDomainException;
        public net.sourceforge.fenixedu.domain.IDegreeCurricularPlan getDegreeCurricularPlan();
        public net.sourceforge.fenixedu.domain.IEmployee getEmployee();
        public java.util.List getEnrollmentReports();
        public java.util.List getEnrolments();
        public Integer getMaximumNumberOfAcumulatedEnrollments();
        public Integer getMaximumNumberOfCoursesToEnroll();
        public Integer getMinimumNumberOfCoursesToEnroll();
        public java.util.List getNotNeedToEnrollCurricularCourses();        
        public int getNumberOfApprovedCurricularCourses();
        public int getNumberOfEnrolledCurricularCourses();
        public net.sourceforge.fenixedu.domain.IBranch getSecundaryBranch();
        public net.sourceforge.fenixedu.util.Specialization getSpecialization();
        public net.sourceforge.fenixedu.domain.IStudent getStudent();

        public boolean isCurricularCourseApproved(net.sourceforge.fenixedu.domain.ICurricularCourse curricularCourse);
        public boolean isCurricularCourseEnrolled(net.sourceforge.fenixedu.domain.ICurricularCourse curricularCourse);
        public boolean isCurricularCourseEnrolledInExecutionPeriod(net.sourceforge.fenixedu.domain.ICurricularCourse curricularCourse,
                net.sourceforge.fenixedu.domain.IExecutionPeriod executionPeriod);
        
        public void setBranch(net.sourceforge.fenixedu.domain.IBranch branch);
        public void setCreditsInSecundaryArea(Integer creditsInSecundaryArea);
        public void setCreditsInSpecializationArea(Integer creditsInSpecializationArea);
        public void setCurrentState(net.sourceforge.fenixedu.util.StudentCurricularPlanState currentState);
        public void setDegreeCurricularPlan(net.sourceforge.fenixedu.domain.IDegreeCurricularPlan degreeCurricularPlan);
        public void setEmployee(net.sourceforge.fenixedu.domain.IEmployee employee);
        public void setEnrollmentReports(java.util.List enrollmentReports);
        public void setEnrolments(java.util.List enrolments);        
        public void setNotNeedToEnrollCurricularCourses(java.util.List notNeedToEnrollCurricularCourses);
        public void setSecundaryBranch(net.sourceforge.fenixedu.domain.IBranch secundaryBranch);
        public void setSpecialization(net.sourceforge.fenixedu.util.Specialization specialization);
        public void setStudent(net.sourceforge.fenixedu.domain.IStudent student);
    "
}


class net.sourceforge.fenixedu.domain.StudentCurricularPlanLEIC extends net.sourceforge.fenixedu.domain.StudentCurricularPlan {
        
    Integer creditsInSecundaryArea;
    Integer creditsInSpecializationArea;
    Integer secundaryBranchKey;
}

class net.sourceforge.fenixedu.domain.StudentCurricularPlanLEEC extends net.sourceforge.fenixedu.domain.StudentCurricularPlan {
    Integer creditsInSecundaryArea;
    Integer creditsInSpecializationArea;
    Integer secundaryBranchKey;
}

class net.sourceforge.fenixedu.domain.EvaluationExecutionCourse extends net.sourceforge.fenixedu.domain.DomainObject {
	Integer keyExecutionCourse;
	Integer keyEvaluation;

	interface "
	public net.sourceforge.fenixedu.domain.IExecutionCourse getExecutionCourse();
	
	public void setExecutionCourse(net.sourceforge.fenixedu.domain.IExecutionCourse executionCourse);
	
	public net.sourceforge.fenixedu.domain.IEvaluation getEvaluation();
	
	public void setEvaluation(net.sourceforge.fenixedu.domain.IEvaluation evaluation);
	"
}



/*
 * External classes declarations
 *
 * The following declarations allow the DmlCompiler to recognize the classes in
 * the relations definitions. Remove each declaration once the corresponding 
 * class definition is included.
 * 
 */

external class net.sourceforge.fenixedu.domain.CurricularCourse;
external class net.sourceforge.fenixedu.domain.Degree;
external class net.sourceforge.fenixedu.domain.ExecutionCourse;
external class net.sourceforge.fenixedu.domain.ExecutionPeriod;
external class net.sourceforge.fenixedu.domain.ExecutionYear;
external class net.sourceforge.fenixedu.domain.Student;
external class net.sourceforge.fenixedu.domain.Teacher;
external class net.sourceforge.fenixedu.domain.teacher.TeachingCareer;



/*
 * Relations definitions
 * 
 */

relation CurricularCourseHistoric {
	net.sourceforge.fenixedu.domain.gesdis.CourseHistoric playsRole courseHistoric;
	net.sourceforge.fenixedu.domain.CurricularCourse playsRole curricularCourse;
}


relation CurricularCourseStudentReport {
	net.sourceforge.fenixedu.domain.gesdis.StudentCourseReport playsRole studentCourseReport {
		multiplicity 1;
	}
	net.sourceforge.fenixedu.domain.CurricularCourse playsRole curricularCourse;
}


relation DelegateDegree {
	net.sourceforge.fenixedu.domain.student.Delegate playsRole delegate {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Degree playsRole degree;
}


relation DelegateExecutionYear {
	net.sourceforge.fenixedu.domain.student.Delegate playsRole delegate {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.ExecutionYear playsRole executionYear;
}


relation DelegateStudent {
	net.sourceforge.fenixedu.domain.student.Delegate playsRole delegate {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Student playsRole student;
}


relation ExecutionCourseReport {
	net.sourceforge.fenixedu.domain.gesdis.CourseReport playsRole courseReport {
		multiplicity 1;
	}
	net.sourceforge.fenixedu.domain.ExecutionCourse playsRole executionCourse;
}


relation OldInquiriesCoursesResDegree {
	net.sourceforge.fenixedu.domain.inquiries.OldInquiriesCoursesRes playsRole oldInquiriesCoursesRes {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Degree playsRole degree;
}


relation OldInquiriesCoursesResExecutionPeriod {
	net.sourceforge.fenixedu.domain.inquiries.OldInquiriesCoursesRes playsRole oldInquiriesCoursesRes {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.ExecutionPeriod playsRole executionPeriod;
}


relation OldInquiriesSummaryDegree {
	net.sourceforge.fenixedu.domain.inquiries.OldInquiriesSummary playsRole oldInquiriesSummary {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Degree playsRole degree;
}


relation OldInquiriesSummaryExecutionPeriod {
	net.sourceforge.fenixedu.domain.inquiries.OldInquiriesSummary playsRole oldInquiriesSummary {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.ExecutionPeriod playsRole executionPeriod;
}


relation OldInquiriesTeachersResDegree {
	net.sourceforge.fenixedu.domain.inquiries.OldInquiriesTeachersRes playsRole oldInquiriesTeachersRes {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Degree playsRole degree;
}


relation OldInquiriesTeachersResExecutionPeriod {
	net.sourceforge.fenixedu.domain.inquiries.OldInquiriesTeachersRes playsRole oldInquiriesTeachersRes {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.ExecutionPeriod playsRole executionPeriod {
		multiplicity 1;
	}
}


relation OldInquiriesTeachersResTeacher {
	net.sourceforge.fenixedu.domain.inquiries.OldInquiriesTeachersRes playsRole oldInquiriesTeacherRes {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Teacher playsRole teacher;
}


relation TeachingCareerCategory {
	net.sourceforge.fenixedu.domain.teacher.TeachingCareer playsRole teachingCareer {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.teacher.Category playsRole category;
}


relation TeacherCategory {
	net.sourceforge.fenixedu.domain.Teacher playsRole teacher {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.teacher.Category playsRole category;
}


relation TeacherOldPublication {
	net.sourceforge.fenixedu.domain.teacher.OldPublication playsRole oldPublication {
		multiplicity *;
	}
	net.sourceforge.fenixedu.domain.Teacher playsRole teacher;
}
