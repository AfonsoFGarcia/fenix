class domain.ExecutionCourse {
	String nome;
	Double theoreticalHours;
	String sigla;
	Integer ackOptLock;
	Double labHours;
	Integer idInternal;
	Integer keyExecutionPeriod;
	Double praticalHours;
	String comment;
	Double theoPratHours;
}


class domain.GroupPropertiesExecutionCourse {
	Integer keySenderExecutionCourse;
	Integer ackOptLock;
	Integer idInternal;
	Integer keySenderPerson;
	Integer keyExecutionCourse;
	Integer keyReceiverPerson;
	Integer keyGroupProperties;
}


class domain.GroupProperties {
	String projectDescription;
	Integer idInternal;
	Integer keyAttendsSet;
	Integer maximumCapacity;
	Integer groupMaximumNumber;
	Integer ackOptLock;
	Integer idealCapacity;
	Integer minimumCapacity;
	String name;
}


class domain.AttendsSet {
	Integer ackOptLock;
	Integer idInternal;
	String name;
	Integer keyGroupProperties;
}

class domain.AttendInAttendsSet {
	Integer ackOptLock;
	Integer idInternal;
	Integer keyAttend;
	Integer keyAttendsSet;
}


class domain.Frequenta {
	Integer chaveDisciplinaExecucao;
	Integer chaveAluno;
	Integer ackOptLock;
	Integer idInternal;
	Integer keyEnrolment;
}


class domain.StudentGroup {
	Integer keyShift;
	Integer ackOptLock;
	Integer idInternal;
	Integer groupNumber;
	Integer keyAttendsSet;
}


class domain.Turno {
	String nome;
	Integer ackOptLock;
	Integer idInternal;
	Integer chaveDisciplinaExecucao;
	Integer availabilityFinal;
	Integer lotacao;
}

class domain.StudentGroupAttend {
	Integer keyStudentGroup;
	Integer ackOptLock;
	Integer idInternal;
	Integer keyAttend;
}


relation sendProposal {
	domain.GroupPropertiesExecutionCourse playsRole groupPropertiesExecutionCourse {
		multiplicity *;
	}
	domain.ExecutionCourse playsRole senderExecutionCourse;
}



relation goalExecutionCourse {
	domain.GroupPropertiesExecutionCourse playsRole groupPropertiesExecutionCourse {
		multiplicity *;
	}
	domain.ExecutionCourse playsRole executionCourse;
}


--->>relation ??? {
	domain.ExecutionCourse playsRole senderExecutionCourse

	domain.GroupPropertiesExecutionCourse playsRole groupPropertiesExecutionCourse {
		multiplicity *;
	}
}


relation permission {
	domain.AttendsSet playsRole attendsSet;
	domain.GroupProperties playsRole groupProperties;
}


relation belongsTo {
	domain.GroupPropertiesExecutionCourse playsRole groupPropertiesExecutionCourse {
		multiplicity *;
	}
	domain.GroupProperties playsRole groupProperties;
}

relation answerExportProposal {
	domain.GroupPropertiesExecutionCourse playsRole groupPropertiesExecutionCourse {
		multiplicity *;
	}
	domain.Pessoa playsRole receiverPerson;
}


relation makeExportProposal {
	domain.GroupPropertiesExecutionCourse playsRole groupPropertiesExecutionCourse {
		multiplicity *;
	}
	domain.Pessoa playsRole senderPerson;
}

relation studentGroupBelongsToGroupProperties {
	domain.StudentGroup playsRole studentGroups {
		multiplicity *;
	}
	domain.AttendsSet playsRole attendsSet;
}

relation attendsSetHasAttend {
	domain.AttendInAttendsSet playsRole attendInAttendsSet {
		multiplicity *;
	}
	domain.AttendsSet playsRole attendsSet;
}

relation attendBelongsToAttendsSet {
	domain.AttendInAttendsSet playsRole attendInAttendsSet {
		multiplicity *;
	}
	domain.Frequenta playsRole attend;
}


relation StudentGroupAttendFrequenta {
	domain.StudentGroupAttend playsRole studentGroupAttends {
		multiplicity *;
	}
	domain.Frequenta playsRole attend;
}

relation StudentGroupAttendStudentGroup {
	domain.StudentGroupAttend playsRole studentGroupAttends {
		multiplicity *;
	}
	domain.StudentGroup playsRole studentGroup;
}

relation StudentGroup {
	domain.StudentGroup playsRole associatedStudentGroups {
		multiplicity *;
	}
	domain.Turno playsRole shift;
}



