<?xml version="1.0" encoding="ISO-8859-1"?>
<project basedir="." default="compile" name="Compilation Scripts">

	<property environment="env"/>
	<property name="encoding" value="ISO-8859-1"/>

	<property file="build.properties"/>

	<!-- Source code directories -->
	<property name="src" location="src"/>
	<property name="src_gen" location="src_gen"/>	
	<property name="config" location="config"/>
	<property name="reports" location="reports"/>	
	<property name="institution.config" location="${institution.project}/config"/>
	<property name="institution.metadata.tiles" location="${institution.project}/metadata/tiles"/>
	<property name="config.web" location="metadata"/>
	

	<!-- Directories for compiled code -->
	<property name="build.home" location="build"/>
	<property name="build.home.webinf" value="${build.home}/WEB-INF"/>
	<property name="build.home.webinf.classes" value="${build.home.webinf}/classes"/>
	<property name="build.home.webinf.classes.meta.inf" value="${build.home.webinf.classes}/META-INF"/>
	<property name="build.home.webinf.conf" value="${build.home.webinf}/conf"/>
	<property name="build.home.webinf.libs" value="${build.home.webinf}/lib"/>
	<property name="build.home.jsp_gen_code" value="${build.home}/Jsp-Code"/>
	<property name="build.home.jsp_gen_code.classes" value="${build.home.jsp_gen_code}/classes"/>
	<property name="build.home.reports" value="${build.home.webinf.classes}/reports"/>

	<!-- Directories for deploy -->
	<property name="deploy.home" location="deploy"/>

	<!-- Directories with libraries (JARs) -->
	<property name="lib" location="lib" />

	<!-- Directory with SQL instructions -->
	<property name="etc" location="etc"/>

	<!-- Directory with web-content -->
	<property name="web-content" location="jsp"/>
	<property name="institution.web-content" location="${institution.project}/jsp"/>

	<!-- DML definition file -->
	<property name="dml.definition.file" value="${config}/domain_model.dml"/>
	<property name="dml.definition.file.completed" value="${build.home.webinf.classes}/domain_model.dml"/>

	<!-- WebServices(xfire) Directories -->
	<property name="xfire" location="${config}/xfire" />
	<property name="build.home.xfire" value="${build.home.webinf.classes.meta.inf}/xfire" />
	<property name="xfire.stubsTempDir" value="${basedir}/stubsTempDir"/>
	<property name="xfire.stubsTempDir.classes" value="${basedir}/stubsTempDir/classes"/>
	
	<!-- Compilation options -->
	<property name="compile.debug"       value="on"/>
	<property name="compile.deprecation" value="off"/>
	<property name="compile.optimize"    value="on"/>
	
	<!-- Renderers properties -->
	<property name="renderers.package.dir" value="net/sourceforge/fenixedu/renderers"/>
	<property name="renderers.lib.name" value="fenix-renderers.jar"/>

	<target name="clean-all"
    		description="Removes any generated files">
		<delete dir="${build.home}"/>
		<delete dir="${deploy.home}"/>
		<delete dir="${src_gen}"/>
	</target>

	<target name="check-dml-file" description="Checks if the dml file is still up to date">
		<uptodate property="dml.skip-compile" targetfile="${build.home.webinf.classes}/domain_model.dml" srcfile="${config}/domain_model.dml"/>
	</target>

	<target name="prepare"
			depends="check-dml-file"
			description="Copy configuration files to compile dir">
	
		<mkdir dir="${build.home}"/>
		<mkdir dir="${build.home.webinf}"/>
		<mkdir dir="${build.home.webinf.classes}"/>
		<mkdir dir="${build.home.xfire}"/>
		<mkdir dir="${build.home.webinf.libs}"/>
		<mkdir dir="${build.home}/images/logs"/>

		<sequential>
			<copy encoding="${encoding}" todir="${build.home}">
				<fileset dir="${web-content}" >
					<include name="**/*.*"/>
					<exclude name="WEB-INF//*.*"/>
				</fileset>
			</copy>

			<copy encoding="${encoding}" todir="${build.home.webinf.classes}">
				<fileset dir="${config}"/>
				<fileset file="build.properties"/>
			</copy>

			<copy encoding="${encoding}" todir="${build.home.webinf}">
				<fileset dir="${config.web}" >
					<include name="**/*.*"/>
				</fileset>
			</copy>

			<copy encoding="${encoding}" todir="${build.home.webinf.libs}">
				<fileset dir="${lib}" >
					<include name="*.jar"/>
				</fileset>
			</copy>
			
			<copy encoding="${encoding}" todir="${build.home.xfire}">
				<fileset dir="${xfire}"/>
			</copy>

			<antcall target="prepare-institution"/>

			<!-- Replace tokens in configuration files with local config -->
			<antcall target="replace-property-values"/>
		</sequential>

		<echo file="${build.home.webinf.classes}/checkIsAlive.properties" append="false">
			script.isAlive.check.db=${script.isAlive.check.db}
			script.isAlive.check.slide=${script.isAlive.check.slide}
		</echo>
	</target>

	<target name="prepare-institution" if="institution.project">
		<copy encoding="${encoding}" todir="${build.home}" overwrite="true">
			<fileset dir="${institution.web-content}" >
				<include name="**/*.*"/>
				<exclude name="WEB-INF//*.*"/>
			</fileset>
		</copy>

		<copy encoding="${encoding}" todir="${build.home.webinf.classes}" overwrite="true">
			<fileset dir="${institution.config}"/>
		</copy>

		<copy encoding="${encoding}" todir="${build.home.webinf}/tiles" overwrite="true">
			<fileset dir="${institution.metadata.tiles}"/>
		</copy>
		
	</target>

	<target name="replace-property-values">

		<sequential>
			<replace encoding="${encoding}" dir="${build.home.webinf.classes}/OJB/"
					 propertyFile="build.properties">
				<include name="repository_database.xml"/>
				<replacefilter token="@db.user@"
							   property="db.user"/>
				<replacefilter token="@db.pass@" 
							   property="db.pass"/>
				<replacefilter token="@db.name@"
							   property="db.name"/>
				<replacefilter token="@db.alias@"
							   property="db.alias"/>

				<replacefilter token="@db.personFilter.user@" 
				    			   property="db.personFilter.user"/>
				<replacefilter token="@db.personFilter.pass@" 
				    			   property="db.personFilter.pass"/>
				<replacefilter token="@db.personFilter.name@" 
				    			   property="db.personFilter.name"/>
				<replacefilter token="@db.personFilter.alias@" 
				    			   property="db.personFilter.alias"/>
				<replacefilter token="@db.personFilter.platform@" 
				    			   property="db.personFilter.platform"/>
				<replacefilter token="@db.personFilter.driver@" 
				    			   property="db.personFilter.driver"/>
				<replacefilter token="@db.personFilter.protocol@" 
				    			   property="db.personFilter.protocol"/>
				<replacefilter token="@db.personFilter.subprotocol@" 
				    			   property="db.personFilter.subprotocol"/>
				<replacefilter token="@db.personFilter.validationQuery@" 
				    			   property="db.personFilter.validationQuery"/>
				<replacefilter token="@db.personFilter.other@" 
				    			   property="db.personFilter.other"/>
				<replacefilter token="@db.personFilter.errorFile@" 
				    			   property="db.personFilter.errorFile"/>
				<replacefilter token="@db.personFilter.log@" 
				    			   property="db.personFilter.log"/>
			</replace>

			<replace encoding="${encoding}" dir="${build.home.webinf.classes}"
					 propertyFile="build.properties">
				<include name="Domain.xml"/>
				<replacefilter token="@db.slide.driver@" 
			    			   property="db.slide.driver"/>
				<replacefilter token="@db.slide.alias@" 
			    			   property="db.slide.alias"/>
				<replacefilter token="@db.slide.user@" 
			    			   property="db.slide.user"/>
				<replacefilter token="@db.slide.pass@" 
			    			   property="db.slide.pass"/>
			</replace>		

			<replace encoding="${encoding}" dir="${build.home.webinf.classes}"
					 propertyFile="build.properties">
				<include name="SMTPConfiguration.properties"/>
				<replacefilter token="@mail.smtp.host@" 
			    			   property="mail.smtp.host"/>
				<replacefilter token="@mail.smtp.name@" 
			    			   property="mail.smtp.name"/>
					<replacefilter token="@mailingList.host.name@" 
				    			   property="mailingList.host.name"/>				
			</replace>



			<replace encoding="${encoding}" dir="${build.home.webinf.classes}"
					 propertyFile="build.properties">
				<include name="slide.properties"/>
				<replacefilter token="@slide.config@" 
			    			   property="slide.config"/>
				<replacefilter token="@db.slide.driver@" 
			    			   property="db.slide.driver"/>
				<replacefilter token="@db.slide.alias@" 
			    			   property="db.slide.alias"/>
				<replacefilter token="@db.slide.user@" 
			    			   property="db.slide.user"/>
				<replacefilter token="@db.slide.pass@" 
			    			   property="db.slide.pass"/>
			</replace>
			
			<replace encoding="${encoding}" dir="${build.home.webinf.classes}"
					 propertyFile="build.properties">
				<include name="printers.properties"/>
				<replacefilter token="@markSheet.printers@" 
			    			   property="markSheet.printers"/>
			</replace>
			
			<replace encoding="${encoding}" dir="${build.home.webinf.classes}"
					 propertyFile="build.properties">
				<include name="IstFtpServerConfig.properties"/>
				<replacefilter 
		                 token="@ftp.IST.server.user@" 
		                 property="ftp.IST.server.user"/>
				<replacefilter 
	                  token="@ftp.IST.server.pass@" 
	                  property="ftp.IST.server.pass"/>
				<replacefilter 
	                 token="@ftp.IST.server.address@" 
	                 property="ftp.IST.server.address"/>
				<replacefilter 
	                 token="@ftp.IST.scp.command@" 
	                 property="ftp.IST.scp.command"/>
				<replacefilter 
	                 token="@ftp.IST.scp.args@" 
	                 property="ftp.IST.scp.args"/>
			</replace>

			<replace encoding="${encoding}" dir="${build.home.webinf.classes}"
					 propertyFile="build.properties">
				<include name="DegreeGradesFtpServerConfig.properties"/>
				<replacefilter 
    	             token="@ftp.degree.grades.server.user@" 
	                 property="ftp.degree.grades.server.user"/>
				<replacefilter 
	                  token="@ftp.degree.grades.server.pass@" 
	                  property="ftp.degree.grades.server.pass"/>
				<replacefilter 
	                 token="@ftp.degree.grades.server.address@" 
	                 property="ftp.degree.grades.server.address"/>
			</replace>

			<replace encoding="${encoding}" dir="${build.home.webinf.classes}"
					 propertyFile="build.properties">
				<include name="logAnalyser.properties"/>
				<include name="log4j.xml"/>
				<replacefilter token="@log.image.directory@"
			  				   property="log.image.directory"/>
				<replacefilter token="@log.profile.dir@"
			  				   property="log.profile.dir"/>
				<replacefilter token="@log.profile.filename@"
			  				   property="log.profile.filename"/>
			</replace>

			<replace encoding="${encoding}" dir="${build.home.webinf.classes}"
					 propertyFile="build.properties">
				<include name="OJB.properties"/>
				<replacefilter token="@ObjectCacheClass@"
			    			   property="ObjectCacheClass"/>
				<replacefilter token="@JdbcAccessClass@"
			    			   property="JdbcAccessClass"/>
			</replace>

			<replace encoding="${encoding}" dir="${build.home.webinf.classes}"
					 propertyFile="build.properties">
				<include name="oscache.properties"/>
				<replacefilter token="@cache.event.listeners@"
			    			   property="cache.event.listeners"/>
				<replacefilter token="@cache.cluster.multicast.ip@"
			    			   property="cache.cluster.multicast.ip"/>
			</replace>

			<replace encoding="${encoding}" dir="${build.home.webinf.classes}"
					 propertyFile="build.properties">
				<include name="SMSConfiguration.properties"/>
				<replacefilter token="@sms.gateway.host@"
			    			   property="sms.gateway.host"/>
				<replacefilter token="@sms.gateway.port@"
			    			   property="sms.gateway.port"/>
				<replacefilter token="@sms.gateway.uri@"
			    			   property="sms.gateway.uri"/>
				<replacefilter token="@sms.gateway.protocol@"
			    			   property="sms.gateway.protocol"/>
				<replacefilter token="@sms.gateway.username@"
			    			   property="sms.gateway.username"/>
				<replacefilter token="@sms.gateway.password@"
			    			   property="sms.gateway.password"/>
				<replacefilter token="@sms.delivery.host@"
			    			   property="sms.delivery.host"/>
				<replacefilter token="@sms.delivery.port@"
			    			   property="sms.delivery.port"/>
				<replacefilter token="@sms.delivery.uri@"
			    			   property="sms.delivery.uri"/>
				<replacefilter token="@sms.delivery.protocol@"
			    			   property="sms.delivery.protocol"/>
				<replacefilter token="@sms.delivery.username@"
			    			   property="sms.delivery.username"/>
				<replacefilter token="@sms.delivery.password@"
			    			   property="sms.delivery.password"/>
			</replace>

			<replace encoding="${encoding}" dir="${build.home.webinf.classes}"
					 propertyFile="build.properties">
				<include name="GratuitySituationCreatorTask.properties"/>
				<replacefilter token="@gratuity.situation.creator.task.hour@"
		    			   property="gratuity.situation.creator.task.hour"/>
			</replace>

			<replace encoding="${encoding}" dir="${build.home.webinf.classes}"
					 propertyFile="build.properties">
				<include name="configuration.properties"/>
				<replacefilter token="@app.name@"
		    			   property="app.name"/>
				<replacefilter 
				    token="@app.context@"
				    property="app.context"/>
				<replacefilter token="@login.page@"
						   value="${login.page}"/>
				<replacefilter token="@roleback.filename@"
		    			   property="roleback.filename"/>
				<replacefilter token="@default.persistenceSupport@"
		    			   property="default.persistenceSupport"/>
				<replacefilter token="@cas.enabled@"
			  			   property="cas.enabled"/>
				<replacefilter token="@cas.loginUrl@"
			  			   property="cas.loginUrl"/>
				<replacefilter token="@cas.validateUrl@"
			  			   property="cas.validateUrl"/>
				<replacefilter token="@cas.logoutUrl@"
			  			   property="cas.logoutUrl"/>
				<replacefilter token="@password.generator@"
		    			   property="password.generator"/>	
				<replacefilter token="@language@"
						   property="language"/>	
				<replacefilter token="@location@"
						   property="location"/>
				<replacefilter token="@variant@"
						   property="variant"/>
				<replacefilter token="@sibs.entityCode@"
						   property="sibs.entityCode"/>
				<replacefilter token="@sibs.sourceInstitutionId@"
						   property="sibs.sourceInstitutionId"/>
				<replacefilter token="@sibs.destinationInstitutionId@"
						   property="sibs.destinationInstitutionId"/>
				<replacefilter token="@webServices.external.urls@"
						   property="webServices.external.urls"/>
			</replace>

			<replace encoding="${encoding}" dir="${build.home.webinf.classes}"
					 propertyFile="build.properties">
				<include name="log4j.xml"/>
				<replacefilter token="@log4j.email.smtp.host@"
							   property="log4j.email.smtp.host"/>
				<replacefilter token="@log4j.email.smtp.from@"
							   property="log4j.email.smtp.from"/>
				<replacefilter token="@log4j.email.smtp.to@"
							   property="log4j.email.smtp.to"/>
				<replacefilter token="@log4j.email.smtp.subject@"
							   property="log4j.email.smtp.subject"/>
				<replacefilter token="@log.image.directory@"
			  				   property="log.image.directory"/>
				<replacefilter token="@log.profile.dir@"
			  				   property="log.profile.dir"/>
				<replacefilter token="@log.profile.filename@"
			  				   property="log.profile.filename"/>
			</replace>

			<replace encoding="${encoding}" dir="${build.home.webinf.classes}"
					 propertyFile="build.properties">
				<include name="projectsManagement.properties"/>
				<replacefilter token="@db.projectManagement.user@"
							   property="db.projectManagement.user"/>
				<replacefilter token="@db.projectManagement.pass@"
							   property="db.projectManagement.pass"/>
				<replacefilter token="@db.projectManagement.alias@"
							   property="db.projectManagement.alias"/>
			</replace>
			<replace encoding="${encoding}" dir="${build.home.webinf.classes}"
								 propertyFile="build.properties">
							<include name="assiduousness.properties"/>
			<replacefilter token="@db.assiduousness.user@"
							   property="db.assiduousness.user"/>
			<replacefilter token="@db.assiduousness.pass@" 
			    			   property="db.assiduousness.pass"/>
			<replacefilter token="@db.assiduousness.name@" 
							   property="db.assiduousness.name"/>
			<replacefilter token="@db.assiduousness.alias@" 
			    			   property="db.assiduousness.alias"/>
			<replacefilter token="@db.assiduousness.platform@" 
			    			   property="db.assiduousness.platform"/>
			<replacefilter token="@db.assiduousness.driver@" 
			    			   property="db.assiduousness.driver"/>
			<replacefilter token="@db.assiduousness.protocol@" 
			    			   property="db.assiduousness.protocol"/>
			<replacefilter token="@db.assiduousness.subprotocol@" 
			    			   property="db.assiduousness.subprotocol"/>
			<replacefilter token="@db.assiduousness.validationQuery@" 
			    			   property="db.assiduousness.validationQuery"/>
				</replace>

			<replace encoding="${encoding}" dir="${build.home.webinf.classes}/resources"
					 propertyFile="build.properties">
				<include name="ApplicationResources*.properties"/>
				<include name="ApplicationResourcesSOP*.properties"/>
				<include name="ManagerResources*.properties"/>
				<replacefilter token="@login.page@"
							   value="${login.page}"/>
			</replace>

			<replace encoding="${encoding}" dir="${build.home.webinf.classes}"
					 propertyFile="build.properties">
				<include name="logAnalyser.properties"/>
				<replacefilter token="@login.page@"
					  		   value="${login.page}"/>
				<replacefilter token="@log.image.directory@"
			  				   property="log.image.directory"/>
				<replacefilter token="@log.profile.dir@"
			  				   property="log.profile.dir"/>
				<replacefilter token="@log.profile.filename@"
			  				   property="log.profile.filename"/>
			</replace>

			<replace encoding="${encoding}" dir="${build.home.webinf}"
					 propertyFile="build.properties">
				<include name="web.xml"/>
				<replacefilter 
				    token="@app.context@"
				    property="app.context"/>
				<replacefilter 
				    token="@manager.filter.pattern@"
				    property="manager.filter.pattern"/>
			</replace>

			<replace encoding="${encoding}" dir="${build.home.webinf}/conf" propertyFile="build.properties">
				<include name="validation*.xml"/>
				<replacefilter 
				    token="@validation.doctype.url@" 
				    property="struts.validation.doctype.url"/>
			</replace>

			<replace encoding="${encoding}" dir="${build.home}"
					 propertyFile="build.properties">
				<include name="publico/index.html"/>
				<include name="publico/degreeSite/mainNavigation_without_teaching.jsp"/>
				<replacefilter 
					    token="@institution.url@" 
					    property="institution.url"/>
			</replace>

			<replace encoding="${encoding}" dir="${build.home}"
					 propertyFile="build.properties">
				<include name="student/enrollment/warning.jsp"/>
				<include name="degreeAdministrativeOffice/enrolment/withRules/enrollmentConfirmation.jsp"/>
				<include name="degreeAdministrativeOffice/enrolment/withRules/prepareEnrollmentChooseCurricularCourses.jsp"/>
				<replacefilter token="@enrollment.faq.url@"
			    			   property="enrollment.faq.url"/>
			</replace>
			<replace encoding="${encoding}" dir="${build.home.webinf.classes}"
					 propertyFile="build.properties">
				<include name="services.xml"/>
				<replacefilter token="@authenticationService@"
			  		property="authenticationService"/>
				<replacefilter token="@changePassService@"
					property="changePassService"/>
			</replace>
			<replace encoding="${encoding}" dir="${build.home.webinf.classes}"
					 propertyFile="build.properties">
				<include name="berserk.properties"/>
				<replacefilter token="@application.filterBroker@"
			  				   property="application.filterBroker"/>
			</replace>
			
			<replace encoding="${encoding}" dir="${build.home.webinf.classes}"
					 propertyFile="build.properties">
				<include name="FileManagerConfiguration.properties"/>
				<replacefilter token="@file.manager.implementation.class@" 
			    			   property="file.manager.implementation.class"/>
				<replacefilter token="@dspace.serverUrl@"
							property="dspace.serverUrl"/>
				<replacefilter token="@dspace.downloadUriFormat@"
							property="dspace.downloadUriFormat"/>
				<replacefilter token="@dspace.username@"
							property="dspace.username"/>
				<replacefilter token="@dspace.password@"
							property="dspace.password"/>
				<replacefilter token="@dspace.client.transport.class@" 
							property="dspace.client.transport.class"/>
				<replacefilter token="@dspace.rmi.server.name@" 
							property="dspace.rmi.server.name"/>
				<replacefilter token="@rmi.registry.port@" 
							property="rmi.registry.port"/>
				<replacefilter token="@jndi.properties.file@" 
							property="jndi.properties.file"/>
				<replacefilter token="@rmi.port@" 
							property="rmi.port"/>
				<replacefilter token="@rmi.ssl@" 
							property="rmi.ssl"/>
				<replacefilter token="@rmi.ssl.truststore@" 
							property="rmi.ssl.truststore"/>
				<replacefilter token="@rmi.ssl.truststore.password@" 
							property="rmi.ssl.truststore.password"/>
				<replacefilter token="@rmi.stream.bytes.min@" 
							property="rmi.stream.bytes.min"/>
				<replacefilter token="@rmi.stream.bytes.max@" 
							property="rmi.stream.bytes.max"/>
				<replacefilter token="@rmi.stream.bytes.block@" 
							property="rmi.stream.bytes.block"/>
				
			</replace>
			
			<replace encoding="${encoding}" dir="${build.home.webinf.classes}"
								 propertyFile="build.properties">
							<include name="dspace.jndi.properties"/>
							<replacefilter token="@something@"
								property="rmi.stream.bytes.block"/>
			</replace>
			
		</sequential>
	</target>

    <!-- = = = = = = = = = = = = = = = = =
          macrodef: generateHostDependentProperties
          
          Generates a properties file with a definition (or key entry) for each host
          specified in the ${filter.hostnames} property.
          
          Args:
          	prefix   - the prefix for each host dependent property. This means that the property
          	           for each host will have the form ${prefix}.${hostname}
          	destfile - the name of the properties file to be generated. This file will contain
          	           one lines for each hostname with the format:
          	           
          	           ${prefix}.${hostname}=${prefix.hostname}
          	           
          	hostnames - the name of the property that contains the list of hostnames
          				default = filter.hostnames
         = = = = = = = = = = = = = = = = = -->
    <macrodef name="generateHostDependentProperties">
        <attribute name="hostnames" default="filter.hostnames" />
        <attribute name="prefix" default="" />
        <attribute name="destfile" default="" />
    	
        <sequential>
        		<delete file="@{destfile}.xml"/>
    			<delete file="${build.home.webinf.classes}/@{destfile}"/>
    			<property name="ant.regexp.regexpimpl" value="org.apache.tools.ant.util.regexp.Jdk14RegexpRegexp"/>
    			<concat destfile="@{destfile}.xml">
    				${@{hostnames}}
    				<filterchain>
    					<tokenfilter>
    						<ignoreblank/>
    						<trim/>
    						<stringtokenizer delims="," delimsaretokens="true" includeDelims="false"/>
    						<replaceregex pattern="(.*)" replace="\1${line.seperator}"/>
    					</tokenfilter>
    					<tokenfilter>
    						<replacestring from="," to=""/>
    						<trim/>
    						<ignoreblank/>
    					</tokenfilter>
    					<prefixlines prefix="@@@{prefix}."/>
    					<prefixlines prefix="file='${build.home.webinf.classes}/@{destfile}'>"/>
    					<prefixlines prefix="append='true' "/>
    					<prefixlines prefix="${character.lessthan}echo "/>
    					<tokenfilter>
    						<stringtokenizer delims="${line.seperator}" delimsaretokens="false" includeDelims="false"/>
    						<replaceregex pattern="(.*)"
    							flags="s"
    							replace="\1@${allowed-roles.newline.instruction}${character.lessthan}/echo>"/>
    					</tokenfilter>
    					<tokenfilter>
    						<stringtokenizer delims="${line.seperator}" delimsaretokens="false" includeDelims="false"/>
    						<replaceregex pattern="@(.*)@"
    							flags="s"
    							replace="\1=${character.dollar}{\1}"/>
    					</tokenfilter>
    					<tokenfilter>
    						<stringtokenizer delims="@@@@@@" delimsaretokens="false" includeDelims="false"/>
    						<replaceregex pattern="(.*)"
    							flags="s"
    							replace="${allowed-roles.build.file.constructor.header}\1${allowed-roles.build.file.constructor.tail}"/>
    					</tokenfilter>
    					<escapeunicode/>
    				</filterchain>
    			</concat>
    			<ant antfile="@{destfile}.xml"/>
    			<delete file="@{destfile}.xml"/>
        </sequential>
    </macrodef>

	<target name="write-index-redirect-hostnames-configuration-file">
		<generateHostDependentProperties prefix="index.html.link" destfile=".indexRedirectHostnames.properties"/>
	</target>

	<target name="write-login-redirect-hostnames-configuration-file">
		<generateHostDependentProperties prefix="login.html.link" destfile=".loginRedirectHostnames.properties"/>
	</target>

	<target name="write-filter-hostnames-configuration-file">
		<generateHostDependentProperties prefix="filter.hostname" destfile=".authenticationServiceHostnamesFiltering.properties"/>
	</target>
	
	<target name="write-cas-serviceUrl-hostnames-configuration-file">
		<generateHostDependentProperties prefix="cas.serviceUrl" destfile=".casServiceUrlHostnames.properties"/>
	</target>

	<target name="write-path-access-control-configuration-file">
		<copy encoding="${encoding}" file="build.properties" tofile="${build.home.webinf.classes}/.hostAccessControl.properties">
			<filterchain>
				<linecontainsregexp>
					<regexp pattern="^host.control.(path|name)."/>
				</linecontainsregexp>
			</filterchain>
		</copy>
	</target>
	
	<target name="write-all-properties" 
		depends="write-filter-hostnames-configuration-file,write-index-redirect-hostnames-configuration-file,write-login-redirect-hostnames-configuration-file,write-cas-serviceUrl-hostnames-configuration-file,write-path-access-control-configuration-file">
	</target>
	
	<target name="print-dml-message" if="dml.skip-compile">
		<echo level="info">Dml file is up to date, code generation is not necessary.</echo>
	</target>

	<target name="generate" 
			depends="check-dml-file, print-dml-message"
			unless="dml.skip-compile"
			description="Generate java code">
		<ant antfile="build_codeGenerator.xml" target="generate-domain"/>
		<ant antfile="build_codeGenerator.xml" target="update-RootDomainObject"/>
		<ant antfile="build_codeGenerator.xml" target="generateDeprecatedDateGettersAndSetters"/>
	</target>

	<target name="generate-groups-language" 	description="Generate the parser for the groups language">
		<ant antfile="build_codeGenerator.xml" target="generate-groups-language"/>
	</target>

	<target name="i18nDefault"
    		depends="prepare">
		<copy encoding="${encoding}" todir="${build.home.webinf.classes}/resources">
			<fileset dir="${build.home.webinf.classes}/resources" >
				<include name="*_pt.properties"/>
			</fileset>
			<globmapper from="*_pt.properties" to="*.properties"/>
		</copy>
	</target>

	<target name="compile-domain" 
          description="Compile application's domain"
          depends="generate, generate-groups-language">
		<javac destdir="${build.home.webinf.classes}"
           extdirs="${lib}"
           debug="${compile.debug}"
           optimize="${compile.optimize}"
           deprecation="${compile.deprecation}"
           encoding="${encoding}"
           nowarn="true"
  		   >
			<src path="${src_gen}"/>
			<src path="${src}"/>
			<include name="net/sourceforge/fenixedu/tools/**"/>
			<include name="net/sourceforge/fenixedu/domain/**"/>
			<include name="relation/**"/>
		</javac>
	</target>

	<target name="check-renderers" description="Checks if the lib built is still up to date">
		<uptodate property="renderers.skip-compile" targetfile="${lib}/${renderers.lib.name}">
			<srcfiles dir="${src}/${renderers.package.dir}" includes="**/*.*" />
		</uptodate>
	</target>

	<target name="print-renderers-message" if="renderers.skip-compile">
		<echo level="info">Renderers lib is up to date: '${renderers.lib.name}' not built.</echo>
	</target>

	<target name="compile-renderers" depends="check-renderers,print-renderers-message" unless="renderers.skip-compile" description="Make renderers available as a lib">
		<javac srcdir="${src}" includes="${renderers.package.dir}/**" destdir="${build.home.webinf.classes}" 
			   extdirs="${lib}" 
			   debug="${compile.debug}" 
			   optimize="${compile.optimize}" 
			   deprecation="${compile.deprecation}" 
			   encoding="${encoding}" 
			   nowarn="true" 
  			   />
		
		<jar destfile="${lib}/${renderers.lib.name}" basedir="${build.home.webinf.classes}" 
			 includes="${renderers.package.dir}/**" />
		<copy encoding="${encoding}" file="${lib}/${renderers.lib.name}" todir="${build.home.webinf.libs}"/>

		<delete dir="${build.home.webinf.classes}/${renderers.package.dir}" />
	</target>

	<target name="base-compile" description="Compile application" depends="compile-domain,compile-renderers,i18nDefault, write-all-properties, generate">
		<javac destdir="${build.home.webinf.classes}" extdirs="${lib}" debug="${compile.debug}" optimize="${compile.optimize}" deprecation="${compile.deprecation}" encoding="${encoding}" nowarn="true" >
			<src path="${src_gen}"/>
			<src path="${src}"/>

			<!-- they are used as a lib and not directly -->
			<exclude name="${renderers.package.dir}/**"/>
		</javac>
		<java classname="net.sourceforge.fenixedu.tools.AddOJBConstructors" 
			dir="${build.home.webinf.classes}"
			fork="true">
			<classpath>
				<pathelement path="${build.home.webinf.classes}"/>
				<fileset dir="${lib}">
					<include name="**/*.jar"/>
				</fileset>
			</classpath>
			<arg value="-cfn"/>
			<arg value="net.sourceforge.fenixedu.persistenceTier.OJB.DomainAllocator"/>
			<arg value="-d"/>
			<arg value="${dml.definition.file.completed}"/>
		</java>
		<copy encoding="${encoding}" todir="${build.home.webinf.classes}">
			<fileset dir="${src}" >
				<include name="**/*.*"/>
				<exclude name="**/*.java"/>
			</fileset>
		</copy>
	</target>

	<target name="generateStubs">		
		<mkdir dir="${xfire.stubsTempDir}"/>		
		<mkdir dir="${xfire.stubsTempDir.classes}"/>		
		<path id="fenix.lib.path">
			<fileset dir="${lib}">
				<include name="**/*.jar"/>
			</fileset>
		</path>		
		<taskdef name="wsgen" classname="org.codehaus.xfire.gen.WsGenTask" classpathref="fenix.lib.path"/>
		<taskdef name="for" classname="net.sf.antcontrib.logic.ForTask" classpathref="fenix.lib.path"/>			
		<for param="url" list="${webServices.external.urls}">
			<sequential>
				<wsgen outputDirectory="${xfire.stubsTempDir}" wsdl="@{url}" package="net.sourceforge.fenixedu.webServices.generatedStubs" overwrite="true"/>					
			</sequential>			
		</for>								
		<javac srcdir="${xfire.stubsTempDir}" destdir="${xfire.stubsTempDir.classes}" 
			   extdirs="${lib}" 
			   debug="${compile.debug}" 
			   optimize="${compile.optimize}" 
			   deprecation="${compile.deprecation}" 
			   encoding="${encoding}" 
			   nowarn="true">		
			<exclude name="${xfire.stubsTempDir}/*.xml"/>
		</javac>
		<delete file="${lib}/fenix-stubs.jar" />
		<jar destfile="${lib}/fenix-stubs.jar">
			<fileset dir="${xfire.stubsTempDir.classes}" />
		</jar>
		<delete dir="${xfire.stubsTempDir}"/>
	</target>
	
	<target name="compile" description="Compile application" depends="i18nDefault, compile-domain, compile-renderers, write-all-properties, generate, generate-groups-language, base-compile, compile-reports">
		<ant antfile="build_injectionCode.xml" target="inject-accessControl-code"/>
		<ant antfile="build_injectionCode.xml" target="inject-domainObjectActionLog-code"/>
	</target>

	<target name="compile-without-injectionCode" description="Compile application" depends="i18nDefault, write-all-properties, compile-domain,compile-renderers, generate, base-compile">
		<ant antfile="build_injectionCode.xml" target="accessControl-void-inject"/>
		<ant antfile="build_injectionCode.xml" target="domainObjectActionLog-void-inject"/>
	</target>

	<target name="deploy-linux"
            description="Deploys standalone application to local web server">
		<exec executable="rm" failonerror="false" os="Linux">
			<arg line="-rf"/>
			<arg line="${env.CATALINA_HOME}/webapps/${app.context}"/>
		</exec>
		<exec executable="ln" failonerror="false" os="Linux">
			<arg line="-s"/>
			<arg line="${build.home}"/>
			<arg line="${env.CATALINA_HOME}/webapps/${app.context}"/>
		</exec>
	</target>

	<target name="deploy-win"
            description="Deploys standalone application to local web server">
		<ant antfile="build_tomcat.xml" target="install">
			<property name="webapp" value="${build.home}"/>
		</ant>
	</target>

	<target name="install-without-depends"
            description="Deploys standalone application to web server">
		<exec executable="ant.bat" failonerror="false" failifexecutionfails="false" os="Windows XP, Windows 2000, Windows 98, Windows NT, Windows 95">
			<arg line="-f"/>
			<arg line="build_compile.xml"/>
			<arg line="deploy-win"/>
		</exec>
		<exec executable="ant" failonerror="false" os="Linux">
			<arg line="-f"/>
			<arg line="build_compile.xml"/>
			<arg line="deploy-linux"/>
		</exec>
	</target>

	<target name="install"
    		depends="compile"
            description="Deploys standalone application to web server">
		<antcall target="install-without-depends"/>
	</target>

	<target name="base-jar"
            description="Generates a java archive applications 'core' (services and domain).">
		<mkdir dir="${deploy.home}"/>
		<jar destfile="${deploy.home}/${app.name}.jar">
			<fileset dir="${build.home.webinf.classes}">
				<include name="net/sourceforge/fenixedu/_development/**/*.class"/>
				<include name="net/sourceforge/fenixedu/injectionCode/**/*.class"/>
				<include name="net/sourceforge/fenixedu/constants/**/*.class"/>
				<include name="net/sourceforge/fenixedu/commons/**/*.class"/>
				<include name="net/sourceforge/fenixedu/dataTransferObject/**/*.class"/>
				<include name="net/sourceforge/fenixedu/domain/**/*.class"/>
				<include name="net/sourceforge/fenixedu/fileSuport/**/*.class"/>
				<include name="net/sourceforge/fenixedu/middleware/**/*.class"/>
				<include name="net/sourceforge/fenixedu/integrationTier/**/*.class"/>
				<include name="net/sourceforge/fenixedu/applicationTier/**/*.class"/>
				<include name="net/sourceforge/fenixedu/persistenceTier/**/*.class"/>
				<include name="net/sourceforge/fenixedu/persistenceTierFiltroPessoa/**/*.class"/>
				<include name="net/sourceforge/fenixedu/persistenceTierJDBC/**/*.class"/>
				<include name="net/sourceforge/fenixedu/persistenceTierOracle/**/*.class"/>
				<include name="net/sourceforge/fenixedu/presentationTier/renderers/htmlEditor/*.class"/>
				<include name="net/sourceforge/fenixedu/util/**/*.class"/>
				<include name="net/sourceforge/fenixedu/utilInsc/**/*.class"/>
				<include name="net/sourceforge/fenixedu/utilTests/**/*.class"/>
				<include name="net/sourceforge/fenixedu/stm/**/*.class"/>
				<include name="net/sourceforge/fenixedu/tools/**/*.class"/>
				<include name="net/sourceforge/fenixedu/framework/**/*.class"/>
				<include name="relations/*.class"/>
				<include name="org/**/*.class"/>
			</fileset>
		</jar>
	</target>

	<target name="jar"
    		depends="compile, base-jar"
            description="Generates a java archive applications 'core' (services and domain)."/>

	<target name="jar-without-injectionCode"
    		depends="compile-without-injectionCode, base-jar"
            description="Generates a java archive applications 'core' (services and domain), without code injection"/>

	<target name="war"
	    	depends="compile"
            description="Generates a web archive of the application.">
		<mkdir dir="${deploy.home}"/>
		<war destfile="${deploy.home}/${app.name}.war" webxml="${build.home.webinf}/web.xml">
			<fileset dir="${build.home}">
				<exclude name="WEB-INF/web.xml"/>
				<exclude name="WEB-INF/classes/**"/>
				<exclude name="WEB-INF/lib/*"/>
			</fileset>
			<lib dir="${build.home.webinf.libs}"/>
			<classes dir="${build.home.webinf.classes}"/>
		</war>
	</target>

	<target name="jsp-precompile" depends="compile">
		
		<mkdir dir="${build.home.jsp_gen_code}"/>
		<mkdir dir="${build.home.jsp_gen_code.classes}"/>
		
		<taskdef classname="org.apache.jasper.JspC" name="jasper2" >
			<classpath id="jspc.classpath">
				<pathelement location="${jenv.JAVA_HOME}/../lib/tools.jar"/>
				<fileset dir="${env.CATALINA_HOME}/bin">
					<include name="*.jar"/>
				</fileset>
				<fileset dir="${env.CATALINA_HOME}/server/lib">
					<include name="*.jar"/>
				</fileset>
				<fileset dir="${env.CATALINA_HOME}/common/lib">
					<include name="*.jar"/>
				</fileset>
			</classpath>
		</taskdef>

		<jasper2 validateXml="false" 
	             uriroot="${build.home}" 	            
	        	 webXmlFragment="${build.home.webinf}/generated_web.xml"
	             outputDir="${build.home.jsp_gen_code}" />

		<javac destdir="${build.home.webinf.classes}"
			   failonerror="false"
               debug="${compile.debug}"
               optimize="${compile.optimize}"
               deprecation="${compile.deprecation}"
			   classpath="struts.jar"
               encoding="${encoding}"
			   nowarn="true"
	  		   >			
			<classpath>
				<pathelement path="${build.home.webinf.classes};"/>
				<fileset dir="${lib}">
					<include name="*.jar"/>
				</fileset>
				<pathelement location="${env.CATALINA_HOME}/common/classes"/>
				<fileset dir="${env.CATALINA_HOME}/common/lib">
					<include name="*.jar"/>
				</fileset>
				<pathelement location="${env.CATALINA_HOME}/shared/classes"/>
				<fileset dir="${env.CATALINA_HOME}/shared/lib">
					<include name="*.jar"/>
				</fileset>
				<fileset dir="${env.CATALINA_HOME}/bin">
					<include name="*.jar"/>
				</fileset>
			</classpath>
			<src path="${build.home.jsp_gen_code}"/>
		</javac>

	</target>

	<target name="fix">
		<java classname="net.sourceforge.fenixedu.applicationTier.Servico.manager.semesterInitialization.FixRoomOccupations"
				fork="true"
				failonerror="true"
				maxmemory="1024m"
				>
			<classpath>
				<pathelement path="${build.home.webinf.classes}"/>
				<fileset dir="${lib}">
					<include name="**/*.jar"/>
				</fileset>
			</classpath>
		</java>
	</target>

	<target name="slide">
		<java classname="net.sourceforge.fenixedu.persistenceTier.fileSupport.JdbcMysqlFileSupport"
				fork="true"
				failonerror="true"
				maxmemory="1024m"
				>
			<classpath>
				<pathelement path="${build.home.webinf.classes}"/>
				<fileset dir="${lib}">
					<include name="**/*.jar"/>
				</fileset>
			</classpath>
		</java>
	</target>
	
	<target name="compile-reports" >
		<mkdir dir="${build.home.reports}"/>
		<taskdef name="jrc" 
		      classname="net.sf.jasperreports.ant.JRAntCompileTask">
		  <classpath>
			<fileset dir="${lib}">
				<include name="*.jar"/>
			</fileset>
		  </classpath>
		</taskdef>
		<jrc destdir="${build.home.reports}">
			<src>
				<fileset dir="${reports}">
				    <include name="*.jrxml"/>
				</fileset>
			</src>
			<classpath>
				<pathelement path="${build.home.webinf.classes};"/>
				<fileset dir="${lib}">
					<include name="*.jar"/>
				</fileset>
			</classpath>
		</jrc>
	</target>

	<target name="fix-html">
		<java classname="pt.utl.ist.fenix.tools.html.JspHtmlValidator"
				fork="true"
				failonerror="true"
				maxmemory="1024m"
				>
			<arg value="${basedir}"/>
			<classpath>
				<fileset dir="${lib}">
					<include name="**/*.jar"/>
				</fileset>
			</classpath>
		</java>
	</target>

</project>