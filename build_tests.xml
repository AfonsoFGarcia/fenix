<?xml version="1.0" encoding="ISO-8859-1"?>
<project basedir="." default="run-tests-cache" name="Tests">

	<property name="encoding" value="ISO-8859-1"/>

    <property name="src" location="src"/>
    <property name="config" location="config"/>
    <property name="config.j2ee" value="${config}/jboss"/>
    <property name="config.web" location="metadata"/>

    <property name="lib" location="lib" />
	<property name="lib.web" location="lib_web"/>

	<property name="src.tests" location="src_tests"/>
	<property name="src.tests.cache" location="${src.tests}/ServidorPersistente/cache"/>
	<property name="src.tests.cloner" location="${src.tests}/DataBeans/util"/>

	<property name="build.home" location="build"/>
	<property name="build.app-server" value="${build.home}/app-server"/>
	<property name="build.tests" value="${build.home}/tests"/>
	<property name="build.tests.cache" value="${build.tests}/cache"/>
	
	<property name="sshtools.home" location="lib"/>

    <property environment="env"/>

	<property file="build.properties"/>

    <!-- Directorios com codigo fonte -->
    <property name="src" location="src"/>
	<property name="build.home" location="build"/>

    <!-- Directorios destino da compilacao do projecto -->
	<property name="webapp"          location="${build.home}/app"/>
    <property name="webapp.metadata" value="${webapp}/WEB-INF"/>
    <property name="webapp.classes"  value="${webapp.metadata}/classes"/>
    <property name="webapp.lib"      value="${webapp.metadata}/lib"/>

    <!-- Directorio com bibliotecas (JAR) a utilizar -->
    <property name="lib" location="lib"/>
	<property location="lib_web" name="libs.web"/>

    <!-- Directorio com configuracoes -->
    <property location="config" name="config"/>

    <!-- Directorio com instrucoes SQL -->
    <property location="etc" name="sql"/>

	<!-- Compilation options -->
	<property name="compile.debug"       value="on"/>
  	<property name="compile.deprecation" value="on"/>
  	<property name="compile.optimize"    value="on"/>

	<property name="encoding" value="ISO-8859-15"/>	
	

	<target name="compile-tests-cache"
            description="Compiles tests to verify correct cache distribution.">
		<ant antfile="build_jboss.xml" target="compile-app-server"/>
		<mkdir dir="${build.tests.cache}"/>
		<javac classpath="${build.app-server}"
               destdir="${build.tests.cache}"
               extdirs="${lib}" 
               srcdir="${src.tests.cache};${src.tests.cloner}"
               debug="true"
               optimize="true"
               deprecation="true"
               encoding="${encoding}"
               fork="yes"
               />
	</target>
	
	<target name="compile-tests"
            description="Compiles tests to verify correct cache distribution.">
		<ant antfile="build_jboss.xml" target="compile-app-server"/>
		<mkdir dir="${build.tests.cache}"/>
		<javac classpath="${build.app-server}"
               destdir="${build.tests}"
               extdirs="${lib}" 
               srcdir="${src.tests}"
               debug="true"
               optimize="true"
               deprecation="true"
               encoding="${encoding}"
               fork="yes"
               />
	</target>

	<target name="run-tests-cache-concurrency"
			depends="compile-tests-cache"
            description="Verifies correct cache distribution.">
		<java classname="ServidorPersistente.cache.DistributedCacheConcurrencyTest">
			<classpath>
				<pathelement path="${build.tests.cache}"/>
				<pathelement path="${build.app-server}"/>
                <fileset dir="${lib}">
                    <include name="**/*.jar"/>
                </fileset>
                <fileset dir="/usr/local/jboss/client">
                    <include name="**/*.jar"/>
                </fileset>
			</classpath>
		</java>
	</target>

	<target name="run-tests-cache-performance"
			depends="compile-tests-cache"
            description="Verifies correct cache distribution.">
		<java classname="ServidorPersistente.cache.DistributedCachePerformanceTest">
			<classpath>
				<pathelement path="${build.tests.cache}"/>
				<pathelement path="${build.app-server}"/>
                <fileset dir="${lib}">
                    <include name="**/*.jar"/>
                </fileset>
                <fileset dir="/usr/local/jboss/client">
                    <include name="**/*.jar"/>
                </fileset>
			</classpath>
		</java>
	</target>

	<target name="run-tests-cloner-performance"
			depends="compile-tests-cache"
            description="Verifies correct cache distribution.">
		<java classname="DataBeans.util.ClonerInfoObjectCachePerformanceTest">
			<classpath>
				<pathelement path="${build.tests.cache}"/>
				<pathelement path="${build.app-server}"/>
                <fileset dir="${lib}">
                    <include name="**/*.jar"/>
                </fileset>
                <fileset dir="/usr/local/jboss/client">
                    <include name="**/*.jar"/>
                </fileset>
			</classpath>
		</java>
	</target>
	
	<target name="prepare">
		<!-- Create build directories as needed -->
		<mkdir dir="${webapp.classes}"/>	
		<mkdir dir="${webapp.lib}"/>

		<!-- Copy external dependencies as required -->
		<copy todir="${webapp.metadata}">
			<fileset dir="${basedir}/metadata"/>    
		</copy>

		<copy todir="${webapp.lib}">
			<fileset dir="${basedir}/lib">    
				<exclude name="servlet.jar"/>
				<exclude name="strutstest.jar"/>
			</fileset>
			<fileset dir="${basedir}/lib_web">
				<exclude name="servlet.jar"/>
				<exclude name="strutstest.jar"/>
			</fileset>
		</copy>

		<copy todir="${webapp.classes}">
			<fileset dir="${basedir}/config"/>
		</copy>
	</target>
	
	
	<target name="compile-proj"
            description="Compila o projecto principal" depends="prepare">
        <tstamp/>
        <javac destdir="${webapp.classes}"
               extdirs="${lib};${libs.web}"
               debug="${compile.debug}"
               optimize="${compile.optimize}"
               deprecation="${compile.deprecation}"
               encoding="${encoding}"
               memoryInitialSize="512m"
               memoryMaximumSize="512m"
               fork="yes">
			<src path="${src};${src.tests}"/>
        </javac>
		<replace dir="${webapp.metadata}" propertyFile="build.properties">
	    	<include name="**/**/*.xml"/>
	    	<include name="**/**/ApplicationResources.properties"/>
	    	<include name="**/ServidorPersistenteConfig.properties"/>
	    	<include name="**/ServidorPersistenteOracleConfig.properties"/>

			<replacefilter token="&lt;!-- @validation.doctype@ -->" property="validation.doctype"/>

			<replacefilter token="@login.page@" property="login.page"/>

			<replacefilter token="@db.user@" property="db.user"/>
			<replacefilter token="@db.pass@" property="db.pass"/>
			<replacefilter token="@db.name@" property="db.name"/>
			<replacefilter token="@db.alias@" property="db.alias"/>

			<replacefilter token="@application@" property="application"/>
		</replace>
    </target>
	<target name="replace-tokens-for-ileec">
		<delete file="${sql}/middleware/PopulateTables_generated.sql"/>
		<copy file="${sql}/middleware/ileec/populateTablesIleec.sql" toFile="${sql}/middleware/PopulateTables_generated.sql"/>
		<replace dir="${sql}/middleware" propertyFile="middleware.properties">
			<include name="PopulateTables_generated.sql"/>
			<replacefilter token="@load.data.infile.rootIleec@" property="load.data.infile.rootIleec"/>
		</replace>
	</target>
	
	
	
	
	<target name="generate-leec-dataset"  >
		
		<java classname="Util.GeraXml" fork="yes" failonerror="true" maxmemory="512m">
			<classpath>
				<pathelement path="${webapp.classes}"/>
				<pathelement path="${config}"/>
				<pathelement path="${sql}"/>
				<pathelement path="${src}"/>
				<fileset dir="${webapp.lib}">
					<include name="**/*.jar"/>
				</fileset>
			</classpath>
			<arg value="${number}" />
			<arg value="${file}" />
		</java>
		
	</target>

	<target name="leec-test-battery-loop" >
		<property file="etc/LEEC_Enrollment_Tests_Arguments/LEEC_Test_Battery.properties"/>
		
		<script language="javascript">
		  <![CDATA[
      
        
         for (i= project.getProperty("start");i<=project.getProperty("end");i++)
         {
         
          var callTask = project.createTask("antcall");	
		  callTask.setTarget("generate-leec-dataset");	
		  var param1 = callTask.createParam();
	      param1.setName("number");
          param1.setValue(i);
		  var param2 = callTask.createParam();
          param2.setName("file");
		  param2.setValue("input");
		  leec_test_battery.addTask(callTask); 
         
         }

			  ]]>
		 </script>
		
	</target>
	
	<target name="leec-test-execution-loop" >
		<property file="etc/LEEC_Enrollment_Tests_Arguments/LEEC_Test_Battery.properties"/>
		
		<script language="javascript">
		  <![CDATA[
      
        
         for (i= project.getProperty("start");i<=project.getProperty("end");i++)
         {
         	  
		  var callTask = project.createTask("antcall");	
		  callTask.setTarget("run-leec-enrollment-test");	
		  var param3 = callTask.createParam();
	      param3.setName("number");
          param3.setValue(i);
		  leec_test_battery.addTask(callTask);          
         
         }

			  ]]>
		 </script>
		
	</target>
	
	<target name="leec_test_battery" depends="compile-proj,leec-test-battery-loop,leec-test-execution-loop">
		<property file="etc/LEEC_Enrollment_Tests_Arguments/LEEC_Test_Battery.properties"/>
	</target>
	
	
	<target 
            description="Executa todos os testes"
            name="run-leec-enrollment-test">
		<java 
			classname="ServidorAplicacao.Servicos.enrolment.degree.LeecEnrollmentTestSuite" 
			fork="yes" failonerror="true" maxmemory="512m">
			<classpath>
				<pathelement path="${webapp.classes}"/>
				<pathelement path="${config}"/>
				<pathelement path="${sql}"/>
				<pathelement path="${src}"/>
				<pathelement path="${src.tests}"/>
				<fileset dir="${webapp.lib}">
					<include name="**/*.jar"/>
				</fileset>
			</classpath>
			<arg value="${number}" />
		</java>
       
    </target>
	
	
	
	
</project>