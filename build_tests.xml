<?xml version="1.0" encoding="ISO-8859-1"?>
<project basedir="."  default="leec_test_battery" name="Tests">

	<taskdef name="dbunit" classname="org.dbunit.ant.DbUnitTask"/>
	
	<property name="encoding" value="ISO-8859-1"/>

    <property name="src" location="src"/>
    <property name="config" location="config"/>
    <property name="config.j2ee" value="${config}/jboss"/>
    <property name="config.web" location="metadata"/>

    <property name="lib" location="lib" />
	<property name="lib.web" location="lib_web"/>

	<property name="src.tests" location="src_tests"/>
	<property name="src.tests.cache" location="${src.tests}/ServidorPersistente/cache"/>
	<property name="src.tests.cloner" location="${src.tests}/DataBeans/util"/>
	<property name="src.tests.jboss" location="${src.tests}/framework"/>
	<property name="src.tests.services" location="${src.tests}/ServidorAplicacao"/>

	<property name="build.home" location="build"/>
	<property name="build.app-server" value="${build.home}/app-server"/>
	<property name="build.web-client-classes" value="${build.home}/web-client/WEB-INF/classes"/>
	<property name="build.tests" value="${build.home}/tests"/>
	<property name="build.tests.cache" value="${build.tests}/cache"/>
	<property name="build.tests.jboss" value="${build.tests}/jboss"/>
	<property name="build.tests.services" value="${build.tests}/services"/>
	
    <property name="etc" location="etc"/>
	<property name="etc.datasets" location="${etc}/datasets" />
    <property name="etc.datasets_templates" location="${etc}/datasets_templates" />
	
	<property name="sshtools.home" location="lib"/>

    <property environment="env"/>

	<property file="build.properties"/>

    <!-- Directorios com codigo fonte -->
    <property name="src" location="src"/>
	<property name="build.home" location="build"/>

    <!-- Directorios destino da compilacao do projecto -->
	<property name="webapp"          location="${build.home}/app"/>
    <property name="webapp.metadata" value="${webapp}/WEB-INF"/>
    <property name="webapp.classes"  value="${webapp.metadata}/classes"/>
    <property name="webapp.lib"      value="${webapp.metadata}/lib"/>

    <!-- Directorio com bibliotecas (JAR) a utilizar -->
    <property name="lib" location="lib"/>
	<property location="lib_web" name="libs.web"/>

    <!-- Directorio com configuracoes -->
    <property location="config" name="config"/>

    <!-- Directorio com instrucoes SQL -->
    <property location="etc" name="sql"/>

	<!-- Compilation options -->
	<property name="compile.debug"       value="on"/>
  	<property name="compile.deprecation" value="on"/>
  	<property name="compile.optimize"    value="on"/>

	<property name="encoding" value="ISO-8859-15"/>	

	<target name="compile-app-server"
            description="Compiles application server.">
		<ant antfile="build_jboss.xml" target="compile-app-server"/>
		<javac classpath="${build.app-server}"
               destdir="${build.app-server}"
               extdirs="${lib}" 
               srcdir="${src}"
               debug="true"
               optimize="true"
               deprecation="true"
               encoding="${encoding}"
               fork="yes">
            <include name="Tools/*.java"/>
		</javac>
	</target>
		
	<target name="compile-tests-jboss"
            description="Compiles tests to verify correct jboss integration.">
		<ant antfile="build_jboss.xml" target="compile-web-client"/>
		<mkdir dir="${build.tests.jboss}"/>
		<javac classpath="${build.web-client-classes}"
               destdir="${build.tests.jboss}"
               extdirs="${lib}" 
               srcdir="${src.tests.jboss}"
               debug="true"
               optimize="true"
               deprecation="true"
               encoding="${encoding}"
               fork="yes"
               />
	</target>

	<target name="compile-service-tests-examsV4"
			depends="compile-app-server"
            description="Compiles application server.">
		<mkdir dir="${build.tests.services}"/>
		<javac classpath="${build.app-server}"
               destdir="${build.tests.services}"
               extdirs="${lib}" 
               srcdir="${src.tests}"
               debug="true"
               optimize="true"
               deprecation="true"
               encoding="${encoding}"
               fork="yes">
            <include name="Tools/*.java"/>
            <include name="ServidorAplicacao/Servicos/*.java"/>
            <include name="ServidorAplicacao/Servicos/sop/exams/*.java"/>
            <!--
			<include name="ServidorAplicacao/Servicos/sop/exams/*Test.java"/>
			-->
		</javac>
	</target>

	<target name="compile-service-tests-publication"
			depends="compile-app-server"
            description="Compiles application server.">
		<mkdir dir="${build.tests.services}"/>
		<javac classpath="${build.app-server}"
               destdir="${build.tests.services}"
               extdirs="${lib}" 
               srcdir="${src.tests}"
               debug="true"
               optimize="true"
               deprecation="true"
               encoding="${encoding}"
               fork="yes">
			<include name="ServidorAplicacao/Servicos/publication/*Test.java"/>
			<include name="ServidorAplicacao/Filtros/publication/*Test.java"/>
		</javac>
	</target>
	
	<target name="run-tests-publication"
    		depends="compile-service-tests-publication"
            description="Executes tests for publications">
        <ant antfile="build_dataBaseUtils.xml" target="create-tables"/>
        <junit haltonfailure="false" printsummary="yes" dir="${basedir}">
            <formatter type="plain" usefile="false"/>
            <batchtest fork="yes">
                <fileset dir="${src.tests}">
                	<include name="ServidorAplicacao/Servicos/publication/*Test.java"/>                  
					<include name="ServidorAplicacao/Filtros/publication/*Test.java"/>
                </fileset>
            </batchtest>
            <classpath>
                <pathelement path="${build.app-server}"/>
                <pathelement path="${build.tests.services}"/>
                <pathelement path="${sql}"/>
                <fileset dir="${env.JBOSS_HOME}/client">
                	<include name="*.jar"/>
                </fileset>
                <fileset dir="${lib}">
                    <include name="**/*.jar"/>
                </fileset>
            </classpath>
        </junit>
    </target>

    <target name="create-tables"
            description="Cria as tabelas da base de dados.">
        <sql
            driver="com.mysql.jdbc.Driver"
            url="jdbc:mysql://localhost/"
            userid="${db.user}"
            password="${db.pass}"
            encoding="${encoding}"
            classpath="${lib}/mysql-connector-java-3.0.7.jar"
        >
        DROP DATABASE IF EXISTS ${db.name};
        CREATE DATABASE ${db.name};
        </sql>
        <sql
            driver="com.mysql.jdbc.Driver"
            url="jdbc:mysql://localhost/${db.name}"
            userid="${db.user}"
            password="${db.pass}"
            encoding="${encoding}">
	        <fileset dir="${sql}">
			 <include name="tables.sql" />
  			</fileset>
            <classpath>
                <fileset dir="${lib}">
                    <include name="**/*.jar"/>
                </fileset>
            </classpath>
        </sql>
    </target>

    <target name="run-tests-examsV4"
    		depends="compile-service-tests-examsV4"
            description="Executes tests for branch ExamsV4">
        <antcall target="create-tables"/>
        <junit haltonfailure="false" printsummary="yes" dir="${basedir}">
            <formatter type="plain" usefile="false"/>
            <batchtest fork="yes">
                <fileset dir="${src.tests}">
                

<!--	                <include name="ServidorAplicacao/Servicos/sop/exams/ReadCurricularYearByOIDTest.java"/>
	                <include name="ServidorAplicacao/Servicos/sop/exams/ReadExecutionDegreeByOIDTest.java"/>
	                <include name="ServidorAplicacao/Servicos/sop/exams/ReadExecutionDegreesByExecutionYearTest.java"/>
	                <include name="ServidorAplicacao/Servicos/sop/exams/ReadExecutionPeriodsTest.java"/>
	                <include name="ServidorAplicacao/Servicos/sop/exams/ReadExecutionPeriodsNoPeriodsTest.java"/>

	                <include name="ServidorAplicacao/Servicos/sop/exams/CreateExamNewTest.java"/>
	                <include name="ServidorAplicacao/Servicos/sop/exams/DeleteExamNewTest.java"/>
	                <include name="ServidorAplicacao/Servicos/sop/exams/EditExamNewTest.java"/>
		            <include name="ServidorAplicacao/Servicos/sop/exams/ReadAllBuildingsTest.java"/>
	                <include name="ServidorAplicacao/Servicos/sop/exams/ReadAllBuildingsNoBuildingsTest.java"/>
					<include name="ServidorAplicacao/Servicos/sop/exams/ReadAvailableRoomsForExamTest.java"/>                
	                <include name="ServidorAplicacao/Servicos/sop/exams/ReadExamByOIDTest.java"/>
	                <include name="ServidorAplicacao/Servicos/sop/exams/ReadExamsByDateTest.java"/>
	                <include name="ServidorAplicacao/Servicos/sop/exams/ReadExamsMapByRoomsTest.java"/>
	                <include name="ServidorAplicacao/Servicos/sop/exams/ReadFilteredExamsMapTest.java"/>
                    <include name="ServidorAplicacao/Servicos/sop/exams/SearchRoomsTest.java"/>
	                <include name="ServidorAplicacao/Servicos/sop/exams/ReadExecutionCourseWithAssociatedCurricularCoursesTest.java"/>
-->
	                <include name="ServidorAplicacao/Servicos/sop/exams/*Test.java"/>                  

               
                	

                </fileset>
            </batchtest>
            <classpath>
                <pathelement path="${build.app-server}"/>
                <pathelement path="${build.tests.services}"/>
                <pathelement path="${sql}"/>
                <fileset dir="${lib}">
                    <include name="**/*.jar"/>
                </fileset>
            </classpath>
        </junit>
    </target>

	<target name="compile-tests-cache"
			depends="compile-app-server"
            description="Compiles tests to verify correct cache distribution.">
		<mkdir dir="${build.tests.cache}"/>
		<javac classpath="${build.app-server}"
               destdir="${build.tests.cache}"
               extdirs="${lib}" 
               srcdir="${src.tests.cache};${src.tests.cloner}"
               debug="true"
               optimize="true"
               deprecation="true"
               encoding="${encoding}"
               fork="yes"
               />
	</target>
	
	<target name="compile-tests"
			depends="compile-app-server"
            description="Compiles tests to verify correct cache distribution.">
		<mkdir dir="${build.tests.cache}"/>
		<javac classpath="${build.app-server}"
               destdir="${build.tests}"
               extdirs="${lib}" 
               srcdir="${src.tests}"
               debug="true"
               optimize="true"
               deprecation="true"
               encoding="${encoding}"
               fork="yes"
               />
	</target>

	<target name="run-tests-jboss"
			depends="compile-tests-jboss"
            description="Verifies correct integration with jboss.">
		<java classname="framework.JBossIntegrationTest">
			<classpath>
				<pathelement path="${build.tests.jboss}"/>
				<pathelement path="${build.web-client-classes}"/>
                <fileset dir="${lib}">
                    <include name="**/*.jar"/>
                </fileset>
                <fileset dir="/usr/local/jboss/client">
                    <include name="**/*.jar"/>
                </fileset>
			</classpath>
		</java>
	</target>

	<target name="run-tests-cache-concurrency"
			depends="compile-tests-cache"
            description="Verifies correct cache distribution.">
		<java classname="ServidorPersistente.cache.DistributedCacheConcurrencyTest">
			<classpath>
				<pathelement path="${build.tests.cache}"/>
				<pathelement path="${build.app-server}"/>
                <fileset dir="${lib}">
                    <include name="**/*.jar"/>
                </fileset>
                <fileset dir="/usr/local/jboss/client">
                    <include name="**/*.jar"/>
                </fileset>
			</classpath>
		</java>
	</target>

	<target name="run-tests-cache-performance"
			depends="compile-tests-cache"
            description="Verifies correct cache distribution.">
		<java classname="ServidorPersistente.cache.DistributedCachePerformanceTest">
			<classpath>
				<pathelement path="${build.tests.cache}"/>
				<pathelement path="${build.app-server}"/>
                <fileset dir="${lib}">
                    <include name="**/*.jar"/>
                </fileset>
                <fileset dir="/usr/local/jboss/client">
                    <include name="**/*.jar"/>
                </fileset>
			</classpath>
		</java>
	</target>

	<target name="run-tests-cloner-performance"
			depends="compile-tests-cache"
            description="Verifies correct cache distribution.">
		<java classname="DataBeans.util.ClonerInfoObjectCachePerformanceTest">
			<classpath>
				<pathelement path="${build.tests.cache}"/>
				<pathelement path="${build.app-server}"/>
                <fileset dir="${lib}">
                    <include name="**/*.jar"/>
                </fileset>
                <fileset dir="/usr/local/jboss/client">
                    <include name="**/*.jar"/>
                </fileset>
			</classpath>
		</java>
	</target>
	
	<path id="runtime-classpath">
    	<fileset dir="${libs.web}">
    		<include  name="**/*.jar"/>
    	</fileset>
        <fileset dir="${lib}">
    		<include  name="**/*.jar"/>
    	</fileset>
        <pathelement path="${build.app-server}"/> 
    </path>

	<!-- Access the classpath as a property -->
    <property 	name="runtime-classpath" refid="runtime-classpath"/>

	<target name="generate-dataset"
			description="Generates a dataset using the parameters specified in SmartDataSetGenerator.properties"
			depends="compile-app-server">
		<java classname="Tools.SmartDataSetGeneratorMain" fork="true">
			<classpath refid="runtime-classpath" />
		</java>
	</target>

	<target name="compile-service-tests-luis-cruz"
			depends="compile-app-server"
            description="Compiles application server.">
		<mkdir dir="${build.tests.services}"/>
		<javac classpath="${build.app-server}"
               destdir="${build.tests.services}"
               extdirs="${lib}" 
               srcdir="${src.tests}"
               debug="true"
               optimize="true"
               deprecation="true"
               encoding="${encoding}"
               fork="yes">
            <include name="Tools/*.java"/>
            <include name="ServidorAplicacao/Servicos/*.java"/>
            <include name="ServidorAplicacao/Servicos/publico/ReadPublishedFinalDegreeWorkProposalHeadersTest.java"/>
		</javac>
	</target>		
	
	<target name="run-tests-luis-cruz"
    		depends="compile-service-tests-luis-cruz"
            description="Executes tests for branch ExamsV4">
        <ant antfile="build_dataBaseUtils.xml" target="create-tables"/>
        <junit haltonfailure="false" printsummary="yes" dir="${basedir}">
            <formatter type="plain" usefile="false"/>
            <batchtest fork="yes">
                <fileset dir="${src.tests}">
	                <include name="ServidorAplicacao/Servicos/publico/ReadPublishedFinalDegreeWorkProposalHeadersTest.java"/>
	                <!--
                	<include name="Servicos/sop/exams/*Test.java"/>                  
                	-->
                </fileset>
            </batchtest>
            <classpath>
                <pathelement path="${build.app-server}"/>
                <pathelement path="${build.tests.services}"/>
                <pathelement path="${sql}"/>
                <fileset dir="${lib}">
                    <include name="**/*.jar"/>
                </fileset>
            </classpath>
        </junit>
    </target>
	
	<target name="compile-service-tests-sana-naat"
			depends="compile-app-server"
            description="Compiles application server.">
		<mkdir dir="${build.tests.services}"/>
		<javac classpath="${build.app-server}"
               destdir="${build.tests.services}"
               extdirs="${lib}" 
               srcdir="${src.tests}"
               debug="true"
               optimize="true"
               deprecation="true"
               encoding="${encoding}"
               fork="yes">
               
            <include name="Tools/*.java"/>
			<include name="ServidorAplicacao/Servicos/MasterDegree/administrativeOffice/guide/CreateGuideFromTransactionsTest.java"/>
            <include name="ServidorAplicacao/Servicos/MasterDegree/administrativeOffice/thesis/*.java"/>
            <include name="ServidorAplicacao/Servicos/commons/workLocation/**/*.java"/>
            <include name="ServidorAplicacao/Servicos/commons/externalPerson/*.java"/>
			<include name="ServidorAplicacao/Servicos/MasterDegree/administrativeOffice/guide/reimbursementGuide/*.java"/>
			<include name="ServidorAplicacao/Servicos/MasterDegree/administrativeOffice/gratuity/transactions/*.java"/>
			<include name="ServidorAplicacao/Servicos/MasterDegree/administrativeOffice/gratuity/EditInsuranceValueByExecutionYearIDTest.java"/>
			<include name="ServidorAplicacao/Servicos/MasterDegree/administrativeOffice/gratuity/ReadGratuitySituationByExecutionDegreeIDAndStudentIDTest.java"/>
			<include name="ServidorAplicacao/Servicos/MasterDegree/administrativeOffice/gratuity/ReadInsuranceValueByExecutionYearIDTest.java"/>
			<include name="ServidorAplicacao/Servicos/MasterDegree/administrativeOffice/gratuity/ReadGratuitySituationsByStudentNumberTest.java"/>
			<include name="ServidorAplicacao/Servicos/MasterDegree/administrativeOffice/gratuity/ReadNonProcessedSibsEntriesTest.java"/>
			<include name="ServidorAplicacao/Servicos/MasterDegree/administrativeOffice/gratuity/FixSibsEntryByIDTest.java"/>
            <include name="ServidorAplicacao/Servicos/commons/ReadExecutionYearByIDTest.java"/>

            
		</javac>
	</target>		
	
    
    <target name="run-tests-sana-naat"
    		depends="compile-service-tests-sana-naat,prepare-datasets"
            description="Executes tests for branch Anavarali Tarmahomed">
        <ant antfile="build_dataBaseUtils.xml" target="create-tables"/>
        <junit haltonfailure="true" printsummary="yes" dir="${basedir}">
            <formatter type="plain" usefile="false"/>
            <batchtest fork="yes">
                <fileset dir="${src.tests}">
					<include name="ServidorAplicacao/Servicos/MasterDegree/administrativeOffice/guide/CreateGuideFromTransactionsTest.java"/>
					<include name="ServidorAplicacao/Servicos/MasterDegree/administrativeOffice/thesis/*.java"/>
       	            <include name="ServidorAplicacao/Servicos/commons/workLocation/**/*.java"/>
       	            <include name="ServidorAplicacao/Servicos/commons/externalPerson/*.java"/>
					<include name="ServidorAplicacao/Servicos/MasterDegree/administrativeOffice/guide/reimbursementGuide/*.java"/>
					<include name="ServidorAplicacao/Servicos/MasterDegree/administrativeOffice/gratuity/transactions/*.java"/>
					<include name="ServidorAplicacao/Servicos/MasterDegree/administrativeOffice/gratuity/EditInsuranceValueByExecutionYearIDTest.java"/>
					<include name="ServidorAplicacao/Servicos/MasterDegree/administrativeOffice/gratuity/ReadGratuitySituationByExecutionDegreeIDAndStudentIDTest.java"/>
					<include name="ServidorAplicacao/Servicos/MasterDegree/administrativeOffice/gratuity/ReadInsuranceValueByExecutionYearIDTest.java"/>
					<include name="ServidorAplicacao/Servicos/MasterDegree/administrativeOffice/gratuity/ReadGratuitySituationsByStudentNumberTest.java"/>
					<include name="ServidorAplicacao/Servicos/MasterDegree/administrativeOffice/gratuity/ReadNonProcessedSibsEntriesTest.java"/>					
		            <include name="ServidorAplicacao/Servicos/commons/ReadExecutionYearByIDTest.java"/>
					<include name="ServidorAplicacao/Servicos/MasterDegree/administrativeOffice/gratuity/FixSibsEntryByIDTest.java"/>
				
					
                </fileset>
            </batchtest>
            <classpath>
                <pathelement path="${build.app-server}"/>
                <pathelement path="${build.tests.services}"/>
                <pathelement path="${sql}"/>
                <fileset dir="${lib}">
                    <include name="**/*.jar"/>
                </fileset>
                <fileset dir="${env.JBOSS_HOME}/client">
                	<include name="**/*.jar" />
                </fileset>
            </classpath>
        </junit>
    </target>
		
		
	<target name="prepare">
		<!-- Create build directories as needed -->
		<mkdir dir="${webapp.classes}"/>	
		<mkdir dir="${webapp.lib}"/>

		<!-- Copy external dependencies as required -->
		<copy todir="${webapp.metadata}">
			<fileset dir="${basedir}/metadata"/>    
		</copy>

		<copy todir="${webapp.lib}">
			<fileset dir="${basedir}/lib">    
				<exclude name="servlet.jar"/>
				<exclude name="strutstest.jar"/>
			</fileset>
			<fileset dir="${basedir}/lib_web">
				<exclude name="servlet.jar"/>
				<exclude name="strutstest.jar"/>
			</fileset>
		</copy>

		<copy todir="${webapp.classes}">
			<fileset dir="${basedir}/config"/>
		</copy>
	</target>
	
	
	<target name="compile-proj"
            description="Compila o projecto principal" depends="prepare">
        <tstamp/>
        <javac destdir="${webapp.classes}"
               extdirs="${lib};${libs.web}"
               debug="${compile.debug}"
               optimize="${compile.optimize}"
               deprecation="${compile.deprecation}"
               encoding="${encoding}"
               memoryInitialSize="512m"
               memoryMaximumSize="512m"
               fork="yes">
			<src path="${src};${src.tests}"/>
        </javac>
		<replace dir="${webapp.metadata}" propertyFile="build.properties">
	    	<include name="**/**/*.xml"/>
	    	<include name="**/**/ApplicationResources.properties"/>
	    	<include name="**/ServidorPersistenteConfig.properties"/>
	    	<include name="**/ServidorPersistenteOracleConfig.properties"/>

			<replacefilter token="&lt;!-- @validation.doctype@ -->" property="validation.doctype"/>

			<replacefilter token="@login.page@" property="login.page"/>

			<replacefilter token="@db.user@" property="db.user"/>
			<replacefilter token="@db.pass@" property="db.pass"/>
			<replacefilter token="@db.name@" property="db.name"/>
			<replacefilter token="@db.alias@" property="db.alias"/>

			<replacefilter token="@application@" property="application"/>
		</replace>
    </target>
	<target name="replace-tokens-for-ileec">
		<delete file="${sql}/middleware/commons/PopulateTables_generated.sql"/>
		<copy file="${sql}/middleware/ileec/populateTablesIleec.sql" toFile="${sql}/middleware/commons/PopulateTables_generated.sql"/>
		<replace dir="${sql}/middleware/commons" propertyFile="middleware.properties">
			<include name="PopulateTables_generated.sql"/>
			<replacefilter token="@load.data.infile.rootIleec@" property="load.data.infile.rootIleec"/>
		</replace>
	</target>
	
	<target name="generate-dataset-examsV4"
			description="Generates a dataset using the parameters specified in SmartDataSetGenerator.properties"
			depends="compile-app-server">
		<java classname="Tools.SmartDataSetGeneratorMain" fork="true">
			<classpath refid="runtime-classpath" />
		</java>
	</target>
	
	
	<target name="generate-leec-dataset"  >
		
		<java classname="net.sourceforge.fenixedu.util.GeraXml" fork="yes" failonerror="true" maxmemory="512m">
			<classpath>
				<pathelement path="${webapp.classes}"/>
				<pathelement path="${config}"/>
				<pathelement path="${sql}"/>
				<pathelement path="${src}"/>
				<fileset dir="${webapp.lib}">
					<include name="**/*.jar"/>
				</fileset>
			</classpath>
			<arg value="${number}" />
			<arg value="${file}" />
		</java>
		
	</target>

	<target name="leec-test-battery-loop" >
		<property file="etc/LEEC_Enrollment_Tests_Arguments/LEEC_Test_Battery.properties"/>
		
		<script language="javascript">
		  <![CDATA[
      
        
         for (i= project.getProperty("start");i<=project.getProperty("end");i++)
         {
         
          var callTask = project.createTask("antcall");	
		  callTask.setTarget("generate-leec-dataset");	
		  var param1 = callTask.createParam();
	      param1.setName("number");
          param1.setValue(i);
		  var param2 = callTask.createParam();
          param2.setName("file");
		  param2.setValue("input");
		  leec_test_battery_datasets.addTask(callTask); 
         
         }

	<path id="runtime-classpath">
    	<fileset dir="${libs.web}">
    		<include  name="**/*.jar"/>
    	</fileset>
        <fileset dir="${lib}">
    		<include  name="**/*.jar"/>
    	</fileset>
        <pathelement path="${build.app-server}"/> 
    </path>

	<!-- Access the classpath as a property -->
    <property 	name="runtime.classpath" refid="runtime-classpath"/>

	<target name="generate-dataset"
			description="Generates a dataset using the parameters specified in SmartDataSetGenerator.properties"
			depends="compile-app-server">
		<java classname="Tools.SmartDataSetGeneratorMain" fork="true">
			<classpath refid="runtime-classpath" />
		</java>
	</target>

	<target name="compile-service-tests-luis-cruz"
			depends="compile-app-server"
            description="Compiles application server.">
		<mkdir dir="${build.tests.services}"/>
		<javac classpath="${build.app-server}"
               destdir="${build.tests.services}"
               extdirs="${lib}" 
               srcdir="${src.tests}"
               debug="true"
               optimize="true"
               deprecation="true"
               encoding="${encoding}"
               fork="yes">
            <include name="Tools/*.java"/>
            <include name="ServidorAplicacao/Servicos/*.java"/>
            <include name="ServidorAplicacao/Servicos/publico/ReadPublishedFinalDegreeWorkProposalHeadersTest.java"/>
		</javac>
	</target>		
	
	<target name="run-tests-luis-cruz"
    		depends="compile-service-tests-luis-cruz"
            description="Executes tests for branch ExamsV4">
        <ant antfile="build_dataBaseUtils.xml" target="create-tables"/>
        <junit haltonfailure="false" printsummary="yes" dir="${basedir}">
            <formatter type="plain" usefile="false"/>
            <batchtest fork="yes">
                <fileset dir="${src.tests}">
	                <include name="ServidorAplicacao/Servicos/publico/ReadPublishedFinalDegreeWorkProposalHeadersTest.java"/>
	                <!--
                	<include name="Servicos/sop/exams/*Test.java"/>                  
                	-->
                </fileset>
            </batchtest>
            <classpath>
                <pathelement path="${build.app-server}"/>
                <pathelement path="${build.tests.services}"/>
                <pathelement path="${sql}"/>
                <fileset dir="${lib}">
                    <include name="**/*.jar"/>
                </fileset>
            </classpath>
        </junit>
    </target>
		
	<target name="prepare">
		<!-- Create build directories as needed -->
		<mkdir dir="${webapp.classes}"/>	
		<mkdir dir="${webapp.lib}"/>

		<!-- Copy external dependencies as required -->
		<copy todir="${webapp.metadata}">
			<fileset dir="${basedir}/metadata"/>    
		</copy>

		<copy todir="${webapp.lib}">
			<fileset dir="${basedir}/lib">    
				<exclude name="servlet.jar"/>
				<exclude name="strutstest.jar"/>
			</fileset>
			<fileset dir="${basedir}/lib_web">
				<exclude name="servlet.jar"/>
				<exclude name="strutstest.jar"/>
			</fileset>
		</copy>

		<copy todir="${webapp.classes}">
			<fileset dir="${basedir}/config"/>
		</copy>
	</target>
	
	
	<target name="compile-proj"
            description="Compila o projecto principal" depends="prepare">
        <tstamp/>
        <javac destdir="${webapp.classes}"
               extdirs="${lib};${libs.web}"
               debug="${compile.debug}"
               optimize="${compile.optimize}"
               deprecation="${compile.deprecation}"
               encoding="${encoding}"
               memoryInitialSize="512m"
               memoryMaximumSize="512m"
               fork="yes">
			<src path="${src};${src.tests}"/>
        </javac>
		<replace dir="${webapp.metadata}" propertyFile="build.properties">
	    	<include name="**/**/*.xml"/>
	    	<include name="**/**/ApplicationResources.properties"/>
	    	<include name="**/ServidorPersistenteConfig.properties"/>
	    	<include name="**/ServidorPersistenteOracleConfig.properties"/>

			<replacefilter token="&lt;!-- @validation.doctype@ -->" property="validation.doctype"/>

			<replacefilter token="@login.page@" property="login.page"/>

			<replacefilter token="@db.user@" property="db.user"/>
			<replacefilter token="@db.pass@" property="db.pass"/>
			<replacefilter token="@db.name@" property="db.name"/>
			<replacefilter token="@db.alias@" property="db.alias"/>

			<replacefilter token="@application@" property="application"/>
		</replace>
    </target>
	<target name="replace-tokens-for-ileec">
		<delete file="${sql}/middleware/PopulateTables_generated.sql"/>
		<copy file="${sql}/middleware/ileec/populateTablesIleec.sql" toFile="${sql}/middleware/PopulateTables_generated.sql"/>
		<replace dir="${sql}/middleware" propertyFile="middleware.properties">
			<include name="PopulateTables_generated.sql"/>
			<replacefilter token="@load.data.infile.rootIleec@" property="load.data.infile.rootIleec"/>
		</replace>
	</target>
	
	<target name="generate-dataset-examsV4"
			description="Generates a dataset using the parameters specified in SmartDataSetGenerator.properties"
			depends="compile-app-server">
		<java classname="Tools.SmartDataSetGeneratorMain" fork="true">
			<classpath refid="runtime-classpath" />
		</java>
	</target>
	
	
	<target name="generate-leec-dataset"  >
		
		<java classname="net.sourceforge.fenixedu.util.GeraXml" fork="yes" failonerror="true" maxmemory="512m">
			<classpath>
				<pathelement path="${webapp.classes}"/>
				<pathelement path="${config}"/>
				<pathelement path="${sql}"/>
				<pathelement path="${src}"/>
				<fileset dir="${webapp.lib}">
					<include name="**/*.jar"/>
				</fileset>
			</classpath>
			<arg value="${number}" />
			<arg value="${file}" />
		</java>
		
	</target>

	<target name="leec-test-battery-loop" >
		<property file="etc/LEEC_Enrollment_Tests_Arguments/LEEC_Test_Battery.properties"/>
		
		<script language="javascript">
		  <![CDATA[
      
        
         for (i= project.getProperty("start");i<=project.getProperty("end");i++)
         {
         
          var callTask = project.createTask("antcall");	
		  callTask.setTarget("generate-leec-dataset");	
		  var param1 = callTask.createParam();
	      param1.setName("number");
          param1.setValue(i);
		  var param2 = callTask.createParam();
          param2.setName("file");
		  param2.setValue("input");
		  leec_test_battery_datasets.addTask(callTask); 
         
         }

	<path id="runtime-classpath">
    	<fileset dir="${libs.web}">
    		<include  name="**/*.jar"/>
    	</fileset>
        <fileset dir="${lib}">
    		<include  name="**/*.jar"/>
    	</fileset>
        <pathelement path="${build.app-server}"/> 
    </path>

	<!-- Access the classpath as a property -->
    <property 	name="runtime.classpath" refid="runtime-classpath"/>

	<target name="generate-dataset"
			description="Generates a dataset using the parameters specified in SmartDataSetGenerator.properties"
			depends="compile-app-server">
		<java classname="Tools.SmartDataSetGeneratorMain" fork="true">
			<classpath refid="runtime-classpath" />
		</java>
	</target>

	<target name="compile-service-tests-luis-cruz"
			depends="compile-app-server"
            description="Compiles application server.">
		<mkdir dir="${build.tests.services}"/>
		<javac classpath="${build.app-server}"
               destdir="${build.tests.services}"
               extdirs="${lib}" 
               srcdir="${src.tests}"
               debug="true"
               optimize="true"
               deprecation="true"
               encoding="${encoding}"
               fork="yes">
            <include name="Tools/*.java"/>
            <include name="ServidorAplicacao/Servicos/*.java"/>
            <include name="ServidorAplicacao/Servicos/publico/ReadPublishedFinalDegreeWorkProposalHeadersTest.java"/>
		</javac>
	</target>		
	
	<target name="run-tests-luis-cruz"
    		depends="compile-service-tests-luis-cruz"
            description="Executes tests for branch ExamsV4">
        <ant antfile="build_dataBaseUtils.xml" target="create-tables"/>
        <junit haltonfailure="false" printsummary="yes" dir="${basedir}">
            <formatter type="plain" usefile="false"/>
            <batchtest fork="yes">
                <fileset dir="${src.tests}">
	                <include name="ServidorAplicacao/Servicos/publico/ReadPublishedFinalDegreeWorkProposalHeadersTest.java"/>
	                <!--
                	<include name="Servicos/sop/exams/*Test.java"/>                  
                	-->
                </fileset>
            </batchtest>
            <classpath>
                <pathelement path="${build.app-server}"/>
                <pathelement path="${build.tests.services}"/>
                <pathelement path="${sql}"/>
                <fileset dir="${lib}">
                    <include name="**/*.jar"/>
                </fileset>
            </classpath>
        </junit>
    </target>
		
	<target name="prepare">
		<!-- Create build directories as needed -->
		<mkdir dir="${webapp.classes}"/>	
		<mkdir dir="${webapp.lib}"/>

		<!-- Copy external dependencies as required -->
		<copy todir="${webapp.metadata}">
			<fileset dir="${basedir}/metadata"/>    
		</copy>

		<copy todir="${webapp.lib}">
			<fileset dir="${basedir}/lib">    
				<exclude name="servlet.jar"/>
				<exclude name="strutstest.jar"/>
			</fileset>
			<fileset dir="${basedir}/lib_web">
				<exclude name="servlet.jar"/>
				<exclude name="strutstest.jar"/>
			</fileset>
		</copy>

		<copy todir="${webapp.classes}">
			<fileset dir="${basedir}/config"/>
		</copy>
	</target>
	
	
	<target name="compile-proj"
            description="Compila o projecto principal" depends="prepare">
        <tstamp/>
        <javac destdir="${webapp.classes}"
               extdirs="${lib};${libs.web}"
               debug="${compile.debug}"
               optimize="${compile.optimize}"
               deprecation="${compile.deprecation}"
               encoding="${encoding}"
               memoryInitialSize="512m"
               memoryMaximumSize="512m"
               fork="yes">
			<src path="${src};${src.tests}"/>
        </javac>
		<replace dir="${webapp.metadata}" propertyFile="build.properties">
	    	<include name="**/**/*.xml"/>
	    	<include name="**/**/ApplicationResources.properties"/>
	    	<include name="**/ServidorPersistenteConfig.properties"/>
	    	<include name="**/ServidorPersistenteOracleConfig.properties"/>

			<replacefilter token="&lt;!-- @validation.doctype@ -->" property="validation.doctype"/>

			<replacefilter token="@login.page@" property="login.page"/>

			<replacefilter token="@db.user@" property="db.user"/>
			<replacefilter token="@db.pass@" property="db.pass"/>
			<replacefilter token="@db.name@" property="db.name"/>
			<replacefilter token="@db.alias@" property="db.alias"/>

			<replacefilter token="@application@" property="application"/>
		</replace>
    </target>
	<target name="replace-tokens-for-ileec">
		<delete file="${sql}/middleware/PopulateTables_generated.sql"/>
		<copy file="${sql}/middleware/ileec/populateTablesIleec.sql" toFile="${sql}/middleware/PopulateTables_generated.sql"/>
		<replace dir="${sql}/middleware" propertyFile="middleware.properties">
			<include name="PopulateTables_generated.sql"/>
			<replacefilter token="@load.data.infile.rootIleec@" property="load.data.infile.rootIleec"/>
		</replace>
	</target>
	
	
	
	
	<target name="generate-leec-dataset"  >
		
		<java classname="net.sourceforge.fenixedu.util.GeraXml" fork="yes" failonerror="true" maxmemory="512m">
			<classpath>
				<pathelement path="${webapp.classes}"/>
				<pathelement path="${config}"/>
				<pathelement path="${sql}"/>
				<pathelement path="${src}"/>
				<fileset dir="${webapp.lib}">
					<include name="**/*.jar"/>
				</fileset>
			</classpath>
			<arg value="${number}" />
			<arg value="${file}" />
		</java>
		
	</target>

	<target name="leec-test-battery-loop" >
		<property file="etc/LEEC_Enrollment_Tests_Arguments/LEEC_Test_Battery.properties"/>
		
		<script language="javascript">
		  <![CDATA[
      
        
         for (i= project.getProperty("start");i<=project.getProperty("end");i++)
         {
         
          var callTask = project.createTask("antcall");	
		  callTask.setTarget("generate-leec-dataset");	
		  var param1 = callTask.createParam();
	      param1.setName("number");
          param1.setValue(i);
		  var param2 = callTask.createParam();
          param2.setName("file");
		  param2.setValue("input");
		  leec_test_battery_datasets.addTask(callTask); 
         
         }

			  ]]>
		 </script>
		
	</target>
	
	<target name="leec-test-execution-loop" >
		<property file="etc/LEEC_Enrollment_Tests_Arguments/LEEC_Test_Battery.properties"/>
		
		<script language="javascript">
		  <![CDATA[
      
        
         for (i= project.getProperty("start");i<=project.getProperty("end");i++)
         {
         	  
		  var callTask = project.createTask("antcall");	
		  callTask.setTarget("run-leec-enrollment-test");	
		  var param3 = callTask.createParam();
	      param3.setName("number");
          param3.setValue(i);
		  leec_test_battery.addTask(callTask);         
         
         }

			  ]]>
		 </script>
		
	</target>
	
	<target name="leec_test_battery" depends="compile-proj,leec-test-execution-loop">
		<property file="etc/LEEC_Enrollment_Tests_Arguments/LEEC_Test_Battery.properties"/>
	</target>
	
	<target name="leec_test_battery_datasets" depends="compile-proj,leec-test-battery-loop">
		<property file="etc/LEEC_Enrollment_Tests_Arguments/LEEC_Test_Battery.properties"/>
	</target>
	
	
	<target 
            description="Executa todos os testes"
            name="run-leec-enrollment-test">
		<java 
			classname="ServidorAplicacao.Servicos.enrolment.degree.LeecEnrollmentTestSuite" 
			fork="yes" failonerror="false" maxmemory="512m">
			<classpath>
				<pathelement path="${webapp.classes}"/>
				<pathelement path="${config}"/>
				<pathelement path="${sql}"/>
				<pathelement path="${src}"/>
				<pathelement path="${src.tests}"/>
				<fileset dir="${webapp.lib}">
					<include name="**/*.jar"/>
				</fileset>
			</classpath>
			<arg value="${number}" />
		</java>
       
    </target>

	<target name="compile-service-grant-tests"
			depends="compile-app-server"
            description="Compiles application server.">
		<mkdir dir="${build.tests.services}"/>
		<javac classpath="${build.app-server}"
               destdir="${build.tests.services}"
               extdirs="${lib};${env.JBOSS_HOME}/client"
               srcdir="${src.tests}"
               debug="true"
               optimize="true"
               deprecation="true"
               encoding="${encoding}"
               fork="yes">
            <include name="Tools/*.java"/>
            <include name="ServidorAplicacao/Servicos/*.java"/>
            <include name="ServidorAplicacao/Servicos/grant/owner/*Test.java"/>
			<include name="ServidorAplicacao/Servicos/grant/contract/*Test.java"/>
		</javac>		
	</target>	
	
	<target name="run-service-grant-tests"
		   depends="compile-service-grant-tests"
	 	   >	
		<junit haltonfailure="false" printsummary="yes" dir="${basedir}">
            <formatter type="plain" usefile="false"/>
            <batchtest fork="yes">
                <fileset dir="${src.tests}">
                	<!-- Test in doubt
					<include name="ServidorAplicacao/Servicos/grant/owner/EditGrantOwnerTest.java"/>
					<include name="ServidorAplicacao/Servicos/grant/contract/EditGrantContractTest.java"/>
                	-->

                	<!-- Tests Sucessfull -->
				   	<include name="ServidorAplicacao/Servicos/grant/owner/SearchGrantOwnerTest.java"/>
                	<include name="ServidorAplicacao/Servicos/grant/owner/ReadGrantOwnerByPersonTest.java"/>
                	<include name="ServidorAplicacao/Servicos/grant/owner/ReadGrantOwnerTest.java"/>

                	<include name="ServidorAplicacao/Servicos/grant/contract/DeleteGrantPartTest.java"/>
					<include name="ServidorAplicacao/Servicos/grant/contract/DeleteGrantContractTest.java"/>

                	<include name="ServidorAplicacao/Servicos/grant/contract/EditGrantTypeTest.java"/>

                	<include name="ServidorAplicacao/Servicos/grant/contract/EditGrantContractRegimeTest.java"/>
                	<include name="ServidorAplicacao/Servicos/grant/contract/EditGrantPaymentEntityTest.java"/>
                	<include name="ServidorAplicacao/Servicos/grant/contract/EditGrantSubsidyTest.java"/>
					<include name="ServidorAplicacao/Servicos/grant/contract/EditGrantPartTest.java"/>                	

                	<include name="ServidorAplicacao/Servicos/grant/contract/ReadAllGrantTypesTest.java"/>
					<include name="ServidorAplicacao/Servicos/grant/contract/ReadGrantTypeTest.java"/>
	               	<include name="ServidorAplicacao/Servicos/grant/contract/ReadGrantPaymentEntityTest.java"/>
	               	<include name="ServidorAplicacao/Servicos/grant/contract/ReadAllGrantPaymentEntitiesByClassNameTest.java"/>
                	<include name="ServidorAplicacao/Servicos/grant/contract/ReadPaymentEntityByNumberAndClassTest.java"/>
	               	<include name="ServidorAplicacao/Servicos/grant/contract/ReadGrantPartTest.java"/>
                	<include name="ServidorAplicacao/Servicos/grant/contract/ReadAllGrantPartsByGrantSubsidyTest.java"/>
					<include name="ServidorAplicacao/Servicos/grant/contract/ReadGrantContractRegimeTest.java"/>
					<include name="ServidorAplicacao/Servicos/grant/contract/ReadGrantSubsidyTest.java"/>
					<include name="ServidorAplicacao/Servicos/grant/contract/ReadLastGrantContractCreatedByGrantOwnerTest.java"/>
					<include name="ServidorAplicacao/Servicos/grant/contract/ReadAllGrantSubsidiesByGrantContractTest.java"/>
					<include name="ServidorAplicacao/Servicos/grant/contract/ReadAllGrantSubsidiesByGrantContractAndStateTest.java"/>
					<include name="ServidorAplicacao/Servicos/grant/contract/ReadGrantContractTest.java"/>
					<include name="ServidorAplicacao/Servicos/grant/contract/ReadAllContractsByGrantOwnerTest.java"/>
                	<include name="ServidorAplicacao/Servicos/grant/contract/ReadGrantContractRegimeByContractAndStateTest.java"/>
                	
				</fileset>
            </batchtest>
            <classpath>
                <pathelement path="${build.app-server}"/>
                <pathelement path="${build.tests.services}"/>
                <pathelement path="${sql}"/>
            	<fileset dir="${env.JBOSS_HOME}/client">
                    <include name="*.jar"/>
                </fileset>
                <fileset dir="${lib}">
                    <include name="**/*.jar"/>
                </fileset>
            </classpath>
        </junit>
	</target>

	
	
	
	<target name="load-db-for-curicula-course-enrollment-test" description="" depends="compile-app-server">
		<java classname="Tools.enrollment.LoadDBForCurricularCourseEnrollmentTest" fork="true">
			<classpath>
				<pathelement path="${build.app-server}"/>
            	<fileset dir="${env.JBOSS_HOME}/client">
                    <include name="*.jar"/>
                </fileset>
                <fileset dir="${lib}">
                    <include name="**/*.jar"/>
                </fileset>
			</classpath>
		</java>
	</target>

	<target name="verify-LEEC-curricular-plan" description="" depends="compile-app-server">
		<java classname="Tools.enrollment.VerifyLEECCurricularPlan" fork="true">
			<classpath>
				<pathelement path="${build.app-server}"/>
            	<fileset dir="${env.JBOSS_HOME}/client">
                    <include name="*.jar"/>
                </fileset>
                <fileset dir="${lib}">
                    <include name="**/*.jar"/>
                </fileset>
			</classpath>
		</java>
	</target>

	<!-- generate dataset (smart mode) -->
	<target name="smart-generate-dataset" description="Generates a dataset using the parameters specified in SmartDataSetGenerator.properties" depends="compile-app-server">
		<java classname="Tools.SmartDataSetGeneratorMain" fork="true">
			<classpath refid="runtime-classpath" />
		</java>
	</target>
	
	<!-- Prepare datasets -->
	<target name="prepare-datasets">
    	<mkdir dir="${etc.datasets}" />
    	<copy todir="${etc.datasets}" overwrite="true">
    		<fileset dir="${etc.datasets_templates}"/>
    	</copy>	
    	<tstamp>
         	<format property="today" pattern="yyyy-MM-dd"/>
		</tstamp>
		<tstamp>
	      <format property="week_before" pattern="yyyy-MM-dd"
              offset="-1" unit="week"/>
        </tstamp>
        <tstamp>
	      <format property="week_after" pattern="yyyy-MM-dd"
              offset="1" unit="week"/>
        </tstamp>
        <tstamp>
	      <format property="2weeks_before" pattern="yyyy-MM-dd"
              offset="-2" unit="week"/>
        </tstamp>
        <tstamp>
        	<format property="current_year" pattern="yyyy" />	
        </tstamp>
    	<replace 
	    	dir="${etc.datasets}">    	
	   	<include name="**/**/*.xml"/>
    		<replacefilter 
		    	token="@project.base.path@" 
		    	value="${basedir}"/>
		    <replacefilter
		    	token="@TODAY@"
		    	value="${today}"/>
		    <replacefilter
		    	token="@WEEK_BEFORE@"
		    	value="${week_before}"/>
		    <replacefilter
		    	token="@WEEK_AFTER@"
		    	value="${week_after}"/>
		    <replacefilter
		    	token="@2WEEKS_BEFORE@"
		    	value="${2weeks_before}"/>
		    <replacefilter
		    	token="@CURRENT_YEAR@"
		    	value="${current_year}"/>
		</replace>
		
		<tstamp>
         	<format property="today" pattern="yyyy-MM-dd"/>
		</tstamp>
		<tstamp>
	      <format property="week_before" pattern="yyyy-MM-dd"
              offset="-1" unit="week"/>
        </tstamp>
        <tstamp>
	      <format property="week_before" pattern="yyyy-MM-dd"
              offset="1" unit="week"/>
        </tstamp>
			
    </target>

</project>