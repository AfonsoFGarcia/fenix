accessControl.group.builder.custom.class.notGroup = The type "{0}" is not a subtype of Group.
accessControl.group.builder.custom.constructor.doesNotExist = Unable to create the group. Could not find a constructor for the types {0}.
accessControl.group.builder.custom.constructor.exception = An error as occured while invoking the constructor for the types {0}. 
accessControl.group.builder.custom.constructor.failed = An unexpected error occured while trying to invoke the constructor for types {0}.
accessControl.group.builder.noSuchGroup = There is no group defined with the name "{0}".
accessControl.group.builder.role.type.doesNotExist = There is no role with the name "{0}".
accessControl.group.builder.role.type.notAvailable = It's not possible to obtain a persistent role with the name "{0}". 
accessControl.group.expression.evaluation.error = An error occured while evaluating the availability expression.
accessControl.group.expression.invalid = The given expression is invalid.
accessControl.group.expression.method.notAvailable = The method "{1}" is not defind in type "{0}" and with arguments of types {2}.
accessControl.group.expression.operator.class.invalidName = The name "{1}" is not a valid class name even considering the prefix "{0}".
accessControl.group.expression.operator.enum.invalidName = It's not possible to obtain an enum named "{0}" and of type "{1}".
accessControl.group.expression.operator.number.invalid = The value "{0}", present in the parameter, is not a valid number
accessControl.group.expression.operator.number.invalidType = The type "{0}" is not supported in the number conversion.
accessControl.group.expression.operator.parameter.required = The parameter "{0}" is not present in the current context. 
accessControl.group.expression.property.notAvailable = The property "{1}" is not defined for type "{0}".
accessControl.group.expression.variable.notDefined = A variable named "{0}" is not defined in the current context.
accessControl.group.expression.wrong.argumentType = Argument {0} should be of type {1} and not {2}.
accessControl.group.expression.wrong.numberOfArguments = Wrong number of arguments. You gave {0} but it was expecting between {1} and {2}.
accessControl.group.expression.wrong.numberOfArguments.simple = Wrong number of arguments. You gave {0} but {1} expected.
button.tree.reset = Cancel changes
button.tree.save = Save structure
filterTest.person.select.id.invalid = There is no person with the given id.
filterTest.person.select.name.invalid = You must select a person from the completion list.
functionalities.delete.confirm = Do you wish to delete this functionality?
functionalities.expression.help = The availability of a functionality is specified by writting an expression in a groups combination language. A tipical usage example of the this language is the specification of groups of people with a certain role: <pre>role(MANAGER)</pre>To obtain more information you may visit the <a href="{0}/manager/functionalities/groupLanguage.do">list of group types available</a> or the <a href="http://fenix-ashes.ist.utl.pt/GroupExpressionLanguage">groups language description</a>.
functionalities.expression.success = The expression was changed.
functionalities.functionality.availability.notPrincipal = You can only change the availability policy for the principal functionality of a public path.
functionalities.functionality.matchPath.conflict = There is a conflict with the match path of the functionality. Only one functionality can be marked as principal for a certain path.
functionalities.groupLanguage.list.help = The following table shows lists all the groups builders currently registered in the application and that can be used in functionalitiies' availability expressions. The name shown is the name that can be used in the expression. The number of arguments expected by the builder and a description of the builder inner workings is also shown. 
functionalities.import.file.failed = There was an error while reading the file: {0}
functionalities.import.file.read.failed = Could not read the provided file. The structure was not imported.
functionalities.import.structure.invalid = The provided file is invalid.
functionalities.import.version.notSupported = The version of the indicated structure is not currenlty supported.
functionalities.module.required.prefix = You have to specify a prefix for every module.
label.accessible = Accessible
label.arguments = Arguments
label.availabilityPolicy = Availability Expression
label.builder.class = Description
label.currentParentUsed = Use current module as parent
label.description = Description
label.enabled = Active
label.executionPath = Path
label.expression = Expression
label.maximized = Maximizado
label.module.name = Module
label.name = Name
label.net.sourceforge.fenixedu.domain.accessControl.PersonGroup$Builder = A group of one person. This group can be usefull to create exceptions to more generic groups. This group receives as argument the internal identificator of the person.
label.net.sourceforge.fenixedu.domain.accessControl.RoleGroup$Builder = All person with a certain role. The given argument is interpreted as the name of the role. 
label.net.sourceforge.fenixedu.domain.accessControl.groups.language.CustomGroupBuilder = This constructor allows you to create groups that don't have registered builder in this list. The first argument is the class of the group to create. The remaining arguments are passed to the group construction.
label.parameters = Parameters
label.parameters.required = Parameters
label.path = Path
label.person = Person (by name)
label.personId = Person (by id)
label.prefix = Prefix
label.principal = Principal
label.principalPreserved = Principal
label.publicPath = Complete Path
label.publicPrefix = Complete Prefix
label.relative = Relative Path
label.stream = File
label.title = Title
label.type = Type
label.uuidUsed = Use UUIDs defined in the file
label.visible = Visivel
link.filter.test = Test Filter
link.functionalities = View Functionalities
link.functionality.bottom = Bottom
link.functionality.create = Create functionality
link.functionality.delete = Delete
link.functionality.delete.cancel = Cancel
link.functionality.disable = Disable
link.functionality.down = Down
link.functionality.edit = Edit
link.functionality.enable = Enable
link.functionality.export = Export structure
link.functionality.indent = Indent
link.functionality.manage = Manage availability
link.functionality.outdent = Outdent
link.functionality.top = Top
link.functionality.up = Up
link.functionality.view = View
link.module.create = Create module
link.module.delete = Delete
link.module.edit = Edit
link.module.import = Import structure
link.module.manage = Manage availability
link.module.view = View
link.remove = Remove
link.toplevel.view = Top
link.tree.collapse-all = Collapse all
link.tree.expand-all = Expand all
notAvailable.main.message = The requested functionality is not available at the moment.
title.delete.confirm = Confirm Deletion
title.filter.test = Test Filter
title.functionalities = Functionality Management
title.functionality = Manage Funcionalidade
title.functionality.create = Create Functionality
title.functionality.edit = Edit Functionality
title.functionality.manage = Manage Availability
title.functionality.parameters = Parameters
title.groupLanguage = Group Language
title.module = Manage Module
title.module.create = Create Module
title.module.edit = Edit Module
title.toplevel = Manage Toplevel Functionalities
title.uploadStructure = Import Structure
tree.unavailable = There are no functionalities under this module.
