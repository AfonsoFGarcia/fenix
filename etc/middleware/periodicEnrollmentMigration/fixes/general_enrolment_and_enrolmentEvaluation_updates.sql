--
-- UPDATE ENROLMENT STATES FOR THOSE WITH ONLY ONE ENROLMENT_EVALUATION
--

DROP TABLE IF EXISTS XPTO;
CREATE TABLE XPTO SELECT * FROM ENROLMENT_EVALUATION WHERE GRADE IS NOT NULL GROUP BY KEY_ENROLMENT HAVING COUNT(*) = 1;

DROP TABLE IF EXISTS XPTI;
CREATE TABLE XPTI SELECT * FROM XPTO WHERE GRADE = 'RE';

DROP TABLE IF EXISTS XPTE;
CREATE TABLE XPTE SELECT E.* FROM ENROLMENT E
INNER JOIN XPTI X ON X.KEY_ENROLMENT = E.ID_INTERNAL
INNER JOIN CURRICULAR_COURSE CC ON E.KEY_CURRICULAR_COURSE = CC.ID_INTERNAL
INNER JOIN DEGREE_CURRICULAR_PLAN DCP ON CC.KEY_DEGREE_CURRICULAR_PLAN = DCP.ID_INTERNAL
INNER JOIN DEGREE D ON DCP.KEY_DEGREE = D.ID_INTERNAL
WHERE E.STATE <> 2 AND E.STATE <> 5 AND D.TYPE_DEGREE = 1;

SELECT CONCAT('UPDATE ENROLMENT SET STATE = 2 WHERE ID_INTERNAL = ', X.ID_INTERNAL, ';') AS "" FROM XPTE X;


DROP TABLE IF EXISTS XPTI;
CREATE TABLE XPTI SELECT * FROM XPTO WHERE GRADE = 'NA';

DROP TABLE IF EXISTS XPTE;
CREATE TABLE XPTE SELECT E.* FROM ENROLMENT E
INNER JOIN XPTI X ON X.KEY_ENROLMENT = E.ID_INTERNAL
INNER JOIN CURRICULAR_COURSE CC ON E.KEY_CURRICULAR_COURSE = CC.ID_INTERNAL
INNER JOIN DEGREE_CURRICULAR_PLAN DCP ON CC.KEY_DEGREE_CURRICULAR_PLAN = DCP.ID_INTERNAL
INNER JOIN DEGREE D ON DCP.KEY_DEGREE = D.ID_INTERNAL
WHERE E.STATE <> 6 AND E.STATE <> 5 AND D.TYPE_DEGREE = 1;

SELECT CONCAT('UPDATE ENROLMENT SET STATE = 6 WHERE ID_INTERNAL = ', X.ID_INTERNAL, ';') AS "" FROM XPTE X;


DROP TABLE IF EXISTS XPTI;
CREATE TABLE XPTI SELECT * FROM XPTO WHERE GRADE IS NULL;

DROP TABLE IF EXISTS XPTE;
CREATE TABLE XPTE SELECT E.* FROM ENROLMENT E
INNER JOIN XPTI X ON X.KEY_ENROLMENT = E.ID_INTERNAL
INNER JOIN CURRICULAR_COURSE CC ON E.KEY_CURRICULAR_COURSE = CC.ID_INTERNAL
INNER JOIN DEGREE_CURRICULAR_PLAN DCP ON CC.KEY_DEGREE_CURRICULAR_PLAN = DCP.ID_INTERNAL
INNER JOIN DEGREE D ON DCP.KEY_DEGREE = D.ID_INTERNAL
WHERE E.STATE <> 3 AND E.STATE <> 5 AND D.TYPE_DEGREE = 1;

SELECT CONCAT('UPDATE ENROLMENT SET STATE = 3 WHERE ID_INTERNAL = ', X.ID_INTERNAL, ';') AS "" FROM XPTE X;

-- ***

DROP TABLE IF EXISTS XPTE;
CREATE TABLE XPTE SELECT E.* FROM ENROLMENT E
INNER JOIN XPTI X ON X.KEY_ENROLMENT = E.ID_INTERNAL
INNER JOIN CURRICULAR_COURSE CC ON E.KEY_CURRICULAR_COURSE = CC.ID_INTERNAL
INNER JOIN DEGREE_CURRICULAR_PLAN DCP ON CC.KEY_DEGREE_CURRICULAR_PLAN = DCP.ID_INTERNAL
INNER JOIN DEGREE D ON DCP.KEY_DEGREE = D.ID_INTERNAL
INNER JOIN EXECUTION_PERIOD EP ON E.KEY_EXECUTION_PERIOD = EP.ID_INTERNAL
WHERE EP.STATE <> 'C' AND E.STATE = 3 AND D.TYPE_DEGREE = 1;

SELECT CONCAT('UPDATE ENROLMENT SET STATE = 6 WHERE ID_INTERNAL = ', X.ID_INTERNAL, ';') AS "" FROM XPTE X;

DROP TABLE IF EXISTS XPTI;
CREATE TABLE XPTI SELECT xpto.* FROM XPTO xpto
INNER JOIN XPTE xpte ON xpto.KEY_ENROLMENT = xpte.ID_INTERNAL;

SELECT CONCAT('UPDATE ENROLMENT_EVALUATION SET GRADE = "NA" WHERE ID_INTERNAL = ', X.ID_INTERNAL, ';') AS "" FROM XPTI X;

-- ***

DROP TABLE IF EXISTS XPTI;
CREATE TABLE XPTI SELECT * FROM XPTO WHERE GRADE <> 'NA' AND GRADE <> 'RE' AND GRADE IS NOT NULL;

DROP TABLE IF EXISTS XPTE;
CREATE TABLE XPTE SELECT E.* FROM ENROLMENT E
INNER JOIN XPTI X ON X.KEY_ENROLMENT = E.ID_INTERNAL
INNER JOIN CURRICULAR_COURSE CC ON E.KEY_CURRICULAR_COURSE = CC.ID_INTERNAL
INNER JOIN DEGREE_CURRICULAR_PLAN DCP ON CC.KEY_DEGREE_CURRICULAR_PLAN = DCP.ID_INTERNAL
INNER JOIN DEGREE D ON DCP.KEY_DEGREE = D.ID_INTERNAL
WHERE E.STATE <> 1 AND E.STATE <> 5 AND D.TYPE_DEGREE = 1;

SELECT CONCAT('UPDATE ENROLMENT SET STATE = 1 WHERE ID_INTERNAL = ', X.ID_INTERNAL, ';') AS "" FROM XPTE X;


DROP TABLE IF EXISTS XPTO;
DROP TABLE IF EXISTS XPTI;
DROP TABLE IF EXISTS XPTE;

-- ******************************************************************************************************
--
-- UPDATE ENROLMENT_EVALUATION STATES FOR THOSE WITH GRADE NOT NULL AND STATE DIFERENT THAN FINAL
--

SELECT CONCAT('UPDATE ENROLMENT_EVALUATION SET STATE = 1 WHERE ID_INTERNAL = ', EV.ID_INTERNAL, ';') AS ""
FROM ENROLMENT_EVALUATION EV, ENROLMENT E, STUDENT_CURRICULAR_PLAN SCP, DEGREE_CURRICULAR_PLAN DCP, DEGREE D
WHERE EV.KEY_ENROLMENT = E.ID_INTERNAL
AND E.KEY_STUDENT_CURRICULAR_PLAN = SCP.ID_INTERNAL
AND SCP.KEY_DEGREE_CURRICULAR_PLAN = DCP.ID_INTERNAL
AND DCP.KEY_DEGREE = D.ID_INTERNAL
AND D.TYPE_DEGREE = 1
AND EV.STATE <> 2
AND EV.GRADE IS NOT NULL;

-- ******************************************************************************************************
--
-- EACH ENROLMENT CAN HAVE ONLY ONE ENROLMENT_EVALUATION WITH GRADE NULL. THIS DELETES OTHER ENROLMENT_EVALUATIONS WITH GRADE NULL CONNECTED TO SAME ENROLMENT
--

DROP TABLE IF EXISTS XPTO;
CREATE TABLE XPTO
SELECT EE1.* FROM ENROLMENT_EVALUATION EE1
INNER JOIN ENROLMENT_EVALUATION EE2 ON EE1.KEY_ENROLMENT = EE2.KEY_ENROLMENT
WHERE
EE1.GRADE IS NULL AND
EE2.GRADE IS NULL AND
EE1.ID_INTERNAL <> EE2.ID_INTERNAL;


DROP TABLE IF EXISTS XPTI;
CREATE TABLE XPTI
SELECT * FROM ENROLMENT_EVALUATION WHERE GRADE IS NULL GROUP BY KEY_ENROLMENT HAVING COUNT(*) > 1;


SELECT CONCAT('DELETE FROM ENROLMENT_EVALUATION WHERE ID_INTERNAL = ', EE.ID_INTERNAL, ';') AS ""
FROM ENROLMENT_EVALUATION EE
INNER JOIN XPTO X ON X.ID_INTERNAL = EE.ID_INTERNAL
INNER JOIN ENROLMENT E ON EE.KEY_ENROLMENT = E.ID_INTERNAL
INNER JOIN EXECUTION_PERIOD EP ON E.KEY_EXECUTION_PERIOD = EP.ID_INTERNAL
WHERE EP.STATE = 'C';


SELECT CONCAT('INSERT INTO ENROLMENT_EVALUATION VALUES (NULL, NULL, 1, NULL, NULL, NULL, 2, ', KEY_ENROLMENT, ', NULL, NULL, NULL, NULL, 1);') AS ""
FROM XPTI;

DROP TABLE IF EXISTS XPTO;
DROP TABLE IF EXISTS XPTI;

-- ******************************************************************************************************
--
-- INSERT ENROLMENT_EVALUATIONS WITH GRADE NULL FOR ENROLMENT WITHOUT ENROLMENT_EVALUATION CONNECTED TO CURRENT EXECUTION_PERIOD
--

SELECT CONCAT('INSERT INTO ENROLMENT_EVALUATION VALUES (NULL, NULL, 1, NULL, NULL, NULL, 2, ', E.ID_INTERNAL, ', NULL, NULL, NULL, NULL, 1);') AS ""
FROM ENROLMENT E
INNER JOIN CURRICULAR_COURSE CC ON E.KEY_CURRICULAR_COURSE = CC.ID_INTERNAL
INNER JOIN DEGREE_CURRICULAR_PLAN DCP ON CC.KEY_DEGREE_CURRICULAR_PLAN = DCP.ID_INTERNAL
INNER JOIN DEGREE D ON DCP.KEY_DEGREE = D.ID_INTERNAL
INNER JOIN EXECUTION_PERIOD EP ON E.KEY_EXECUTION_PERIOD = EP.ID_INTERNAL
LEFT JOIN ENROLMENT_EVALUATION EE ON EE.KEY_ENROLMENT = E.ID_INTERNAL
WHERE EE.ID_INTERNAL IS NULL AND EP.STATE = 'C' AND D.TYPE_DEGREE = 1;

-- ******************************************************************************************************
--
-- DELETE ENROLMENT_EVALUATIONS WITH GRADE NULL FOR ENROLMENT WITH OTHER ENROLMENT_EVALUATIONS IN EXECUTION_PERIODS OTHER THAN THE CURRENT
--

SELECT CONCAT('DELETE FROM ENROLMENT_EVALUATION WHERE ID_INTERNAL = ', EE2.ID_INTERNAL, ';') AS "QQ"
FROM ENROLMENT E
INNER JOIN ENROLMENT_EVALUATION EE1 ON EE1.KEY_ENROLMENT = E.ID_INTERNAL
INNER JOIN ENROLMENT_EVALUATION EE2 ON EE2.KEY_ENROLMENT = E.ID_INTERNAL
INNER JOIN STUDENT_CURRICULAR_PLAN SCP ON E.KEY_STUDENT_CURRICULAR_PLAN = SCP.ID_INTERNAL
INNER JOIN STUDENT S ON SCP.KEY_STUDENT = S.ID_INTERNAL
INNER JOIN EXECUTION_PERIOD EP ON E.KEY_EXECUTION_PERIOD = EP.ID_INTERNAL
WHERE
EE1.GRADE IS NOT NULL AND
EE2.GRADE IS NULL AND
S.DEGREE_TYPE = 1 AND
EP.STATE = 'C';
