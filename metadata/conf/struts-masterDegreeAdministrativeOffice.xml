<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE struts-config PUBLIC
      "-//Apache Software Foundation//DTD Struts Configuration 1.1//EN"
      "http://jakarta.apache.org/struts/dtds/struts-config_1_1.dtd">
<struts-config>
    
    <!-- ========== Data Source Configuration =============================== -->
    <data-sources />
    
    <!-- ========== Form Bean Definitions ================================== -->
    <form-beans type="org.apache.struts.action.ActionFormBean">
      
		<form-bean name="getStudentByNumberAndDegreeTypeForm" type="org.apache.struts.validator.DynaValidatorForm" dynamic="true">
			<form-property name="method" type="java.lang.String"/>
			<form-property name="page" type="java.lang.Integer"/>
			<form-property name="degreeType" type="java.lang.String"/>
			<form-property name="studentNumber" type="java.lang.String"/>
			<form-property name="executionPeriodOID" type="java.lang.String"/>
		</form-bean>
		
		<form-bean name="getStudentByNumberAndDegreeTypeForThesisForm" type="org.apache.struts.validator.DynaValidatorForm" dynamic="true">
			<form-property name="method" type="java.lang.String"/>
			<form-property name="page" type="java.lang.Integer"/>
			<form-property name="degreeType" type="java.lang.String"/>
			<form-property name="studentNumber" type="java.lang.String"/>
		</form-bean>
		
		<form-bean name="getStudentByNumberAndGraduationTypeForm" type="org.apache.struts.validator.DynaValidatorForm" dynamic="true">
			<form-property name="method" type="java.lang.String"/>
			<form-property name="page" type="java.lang.Integer"/>
			<form-property name="graduationType" type="java.lang.String"/>
			<form-property name="studentNumber" type="java.lang.String"/>
		</form-bean>

		<form-bean name="getDegreeAndCurricularSemesterAndCurricularYearForm" type="org.apache.struts.validator.DynaValidatorForm" dynamic="true">
			<form-property name="method" type="java.lang.String"/>
			<form-property name="page" type="java.lang.Integer"/>
			<form-property name="studentOID" type="java.lang.Integer"/>
			<form-property name="infoExecutionDegree" type="java.lang.String"/>
			<form-property name="curricularYears" type="java.lang.Integer[]"/>
			<form-property name="curricularSemesters" type="java.lang.Integer[]"/>
			<form-property name="executionPeriodOID" type="java.lang.Integer"/>
		</form-bean>

		<form-bean name="curricularCourseEnrollmentForm" type="org.apache.struts.validator.DynaValidatorForm" dynamic="true">
			<form-property name="method" type="java.lang.String"/>
			<form-property name="curricularCourses" type="java.lang.Integer[]"/>
			<form-property name="studentOID" type="java.lang.Integer"/>
		</form-bean>

		<form-bean name="seeStudentAndCurricularPlansForm" type="org.apache.struts.validator.DynaValidatorForm" dynamic="true">
			<form-property name="method" type="java.lang.String"/>
			<form-property name="page" type="java.lang.Integer"/>
			<form-property name="studentName" type="java.lang.String"/>
			<form-property name="idNumber" type="java.lang.String"/>
			<form-property name="idType" type="java.lang.String"/>
			<form-property name="studentNumber" type="java.lang.String"/>
		</form-bean>

      <!-- Dynamic-FormBean para Selecionar Documento -->
<!--      <form-bean name="posicaoFormBean"
                 type="org.apache.struts.validator.DynaValidatorForm"
                 dynamic="true">
        <form-property name="posicao" type="java.lang.Integer"/>
      </form-bean>
    -->  
      <!-- Bean for The Creation of a Candidate -->
      <form-bean name="createCandidateForm" 
                 type="org.apache.struts.validator.DynaValidatorForm"
                 dynamic="true">
        <form-property name="page" type="java.lang.Integer" />
        <form-property name="specialization" type="java.lang.String" />
        <form-property name="executionDegreeOID" type="java.lang.String" />
        <form-property name="name" type="java.lang.String" />
        <form-property name="executionYear" type="java.lang.String" />
        <form-property name="identificationDocumentNumber" type="java.lang.String" />
        <form-property name="identificationDocumentType" type="java.lang.String" />
      </form-bean>

      
      <!-- Bean for The Choosing of a Person -->
      <form-bean name="choosePersonForm" 
                 type="org.apache.struts.validator.DynaValidatorForm"
                 dynamic="true">
        <form-property name="page" type="java.lang.Integer" />
        <form-property name="identificationDocumentNumber" type="java.lang.String" />
        <form-property name="identificationDocumentType" type="java.lang.String" />
      </form-bean>

	  <!-- Bean for The List of Candidates -->
      <form-bean name="listCandidatesForm" 
                 type="org.apache.struts.validator.DynaValidatorForm"
                 dynamic="true">
         <form-property name="page" type="java.lang.Integer" />
		 <form-property name="degree" type="java.lang.String" />
         <form-property name="specialization" type="java.lang.String" />
		 <form-property name="candidateSituation" type="java.lang.String" />
		 <form-property name="candidateNumber" type="java.lang.String" />
		 <form-property name="executionYear" type="java.lang.String" />
      </form-bean>
      
      <!-- Bean for The Creation of a Contributor -->
      <form-bean name="createContributorForm" 
                 type="org.apache.struts.validator.DynaValidatorForm"
                 dynamic="true">

         <form-property name="page" type="java.lang.Integer" />
         <form-property name="contributorNumber" type="java.lang.String" />
         <form-property name="contributorName" type="java.lang.String" />
         <form-property name="contributorAddress" type="java.lang.String" />
      </form-bean>


      <!-- Bean for The Choosing of a Contributor -->
      <form-bean name="chooseContributorForm" 
                 type="org.apache.struts.validator.DynaValidatorForm"
                 dynamic="true">

         <form-property name="page" type="java.lang.Integer" />
         <form-property name="contributorNumber" type="java.lang.String" />
      </form-bean>
      
      
	  <!-- Bean for The Choosing of a Guide -->
      <form-bean name="chooseGuideForm" 
                 type="org.apache.struts.validator.DynaValidatorForm"
                 dynamic="true">

         <form-property name="page" type="java.lang.Integer" />
         <form-property name="guideNumber" type="java.lang.String" />
         <form-property name="guideYear" type="java.lang.String" />
      </form-bean>


	  <!-- Generic Bean for The Choosing of a Year -->
      <form-bean name="chooseExecutionYearForm" 
                 type="org.apache.struts.validator.DynaValidatorForm"
                 dynamic="true">

         <form-property name="page" type="java.lang.Integer" />
         <form-property name="executionYear" type="java.lang.String" />
      </form-bean>      

      <!-- Generic Bean to Choose a Master Degree -->
      <form-bean name="chooseMasterDegreeForm" 
                 type="org.apache.struts.validator.DynaValidatorForm"
                 dynamic="true">

         <form-property name="page" type="java.lang.Integer" />
         <form-property name="masterDegree" type="java.lang.String" />
      </form-bean>

		<!-- Bean for The Creation of a Guide -->
	    <form-bean name="createGuideForm" 
     			type="org.apache.struts.validator.DynaValidatorForm"
			    dynamic="true">

            <form-property name="page" type="java.lang.Integer" />
        	<form-property name="degree" type="java.lang.String" />
        	<form-property name="number" type="java.lang.String" />
        	<form-property name="requester" type="java.lang.String" />
        	<form-property name="graduationType" type="java.lang.String" />
        	<form-property name="contributorNumber" type="java.lang.String" />
        	<form-property name="contributorName" type="java.lang.String" />
        	<form-property name="contributorAddress" type="java.lang.String" />
        	<form-property name="contributorList" type="java.lang.String" />

      </form-bean>

	  <!-- Bean for ready to create a guide  -->
      <form-bean name="guideCreateReadyForm" 
                 type="org.apache.struts.validator.DynaValidatorForm"
                 dynamic="true">

            <form-property name="page" type="java.lang.Integer" />
        	<form-property name="othersRemarks" type="java.lang.String" />
        	<form-property name="othersPrice" type="java.lang.String" />
        	<form-property name="remarks" type="java.lang.String" />
        	<form-property name="guideSituation" type="java.lang.String" />
        	<form-property name="paymentType" type="java.lang.String" />
        	
      </form-bean>


      <!-- Bean for change of Application Information -->
      <form-bean name="changeCandidateForm" 
                 type="org.apache.struts.validator.DynaValidatorForm"
                 dynamic="true">
                 
            <form-property name="page" type="java.lang.Integer" />
        	<form-property name="identificationDocumentType" type="java.lang.String" />
        	<form-property name="identificationDocumentNumber" type="java.lang.String" />
        	<form-property name="identificationDocumentIssuePlace" type="java.lang.String" />		
        	<form-property name="name" type="java.lang.String" />
        	<form-property name="sex" type="java.lang.String" />
        	<form-property name="maritalStatus" type="java.lang.String" />
        	<form-property name="nationality" type="java.lang.String" />
        	<form-property name="fatherName" type="java.lang.String" />
        	<form-property name="motherName" type="java.lang.String" />
        	<form-property name="birthPlaceParish" type="java.lang.String" />
        	<form-property name="birthPlaceMunicipality" type="java.lang.String" />
        	<form-property name="birthPlaceDistrict" type="java.lang.String" />
        	<form-property name="address" type="java.lang.String" />
        	<form-property name="place" type="java.lang.String" />
        	<form-property name="postCode" type="java.lang.String" />
        	<form-property name="addressParish" type="java.lang.String" />
        	<form-property name="addressMunicipality" type="java.lang.String" />
        	<form-property name="addressDistrict" type="java.lang.String" />
        	<form-property name="telephone" type="java.lang.String" />
        	<form-property name="mobilePhone" type="java.lang.String" />
        	<form-property name="email" type="java.lang.String" />
        	<form-property name="webSite" type="java.lang.String" />
        	<form-property name="contributorNumber" type="java.lang.String" />
        	<form-property name="occupation" type="java.lang.String" />
        	<form-property name="birthDay" type="java.lang.String" /> 
            <form-property name="birthMonth" type="java.lang.String" /> 
        	<form-property name="birthYear" type="java.lang.String" /> 
        	<form-property name="idIssueDateDay" type="java.lang.String" /> 
            <form-property name="idIssueDateMonth" type="java.lang.String" /> 
        	<form-property name="idIssueDateYear" type="java.lang.String" /> 
        	<form-property name="idExpirationDateDay" type="java.lang.String" /> 
            <form-property name="idExpirationDateMonth" type="java.lang.String" /> 
        	<form-property name="idExpirationDateYear" type="java.lang.String" /> 
        	<form-property name="username" type="java.lang.String" /> 
        	<form-property name="areaOfAreaCode" type="java.lang.String" /> 
        	<form-property name="average" type="java.lang.String" />
        	<form-property name="majorDegree" type="java.lang.String" />
        	<form-property name="majorDegreeSchool" type="java.lang.String" />
        	<form-property name="majorDegreeYear" type="java.lang.String" />
        	<form-property name="situationRemarks" type="java.lang.String" />
        	<form-property name="situation" type="java.lang.String" />
        	<form-property name="specializationArea" type="java.lang.String" />
        	<form-property name="candidateID" type="java.lang.Integer" />
      </form-bean>
      
      <!-- Bean for change of Application Information -->
      <form-bean name="changePersonalInfoForm" 
                 type="org.apache.struts.validator.DynaValidatorForm"
                 dynamic="true">
            <form-property name="page" type="java.lang.Integer" />

        	<form-property name="identificationDocumentType" type="java.lang.String" />
        	<form-property name="identificationDocumentNumber" type="java.lang.String" />
        	<form-property name="identificationDocumentIssuePlace" type="java.lang.String" />		
        	<form-property name="name" type="java.lang.String" />
        	<form-property name="sex" type="java.lang.String" />
        	<form-property name="maritalStatus" type="java.lang.String" />
        	<form-property name="nationality" type="java.lang.String" />
        	<form-property name="fatherName" type="java.lang.String" />
        	<form-property name="motherName" type="java.lang.String" />
        	<form-property name="birthPlaceParish" type="java.lang.String" />
        	<form-property name="birthPlaceMunicipality" type="java.lang.String" />
        	<form-property name="birthPlaceDistrict" type="java.lang.String" />
        	<form-property name="address" type="java.lang.String" />
        	<form-property name="place" type="java.lang.String" />
        	<form-property name="postCode" type="java.lang.String" />
        	<form-property name="addressParish" type="java.lang.String" />
        	<form-property name="addressMunicipality" type="java.lang.String" />
        	<form-property name="addressDistrict" type="java.lang.String" />
        	<form-property name="telephone" type="java.lang.String" />
        	<form-property name="mobilePhone" type="java.lang.String" />
        	<form-property name="email" type="java.lang.String" />
        	<form-property name="webSite" type="java.lang.String" />
        	<form-property name="contributorNumber" type="java.lang.String" />
        	<form-property name="occupation" type="java.lang.String" />
        	<form-property name="birthDay" type="java.lang.String" /> 
            <form-property name="birthMonth" type="java.lang.String" /> 
        	<form-property name="birthYear" type="java.lang.String" /> 
        	<form-property name="idIssueDateDay" type="java.lang.String" /> 
            <form-property name="idIssueDateMonth" type="java.lang.String" /> 
        	<form-property name="idIssueDateYear" type="java.lang.String" /> 
        	<form-property name="idExpirationDateDay" type="java.lang.String" /> 
            <form-property name="idExpirationDateMonth" type="java.lang.String" /> 
        	<form-property name="idExpirationDateYear" type="java.lang.String" /> 
        	<form-property name="username" type="java.lang.String" /> 
        	<form-property name="areaOfAreaCode" type="java.lang.String" /> 
			<form-property name="studentNumber" type="java.lang.String"/>
      </form-bean>
      

	  <!-- Bean to Change the Guide Situation  -->
      <form-bean name="editGuideSituationForm" 
                 type="org.apache.struts.validator.DynaValidatorForm"
                 dynamic="true">

            <form-property name="page" type="java.lang.Integer" />
        	<form-property name="remarks" type="java.lang.String" />
        	<form-property name="guideSituation" type="java.lang.String" />
        	<form-property name="paymentType" type="java.lang.String" />
        	<form-property name="paymentDateDay" type="java.lang.String" />
        	<form-property name="paymentDateMonth" type="java.lang.String" />
			<form-property name="paymentDateYear" type="java.lang.String" />
      </form-bean>

	  <!-- Bean to Change the Guide Information  -->
      <form-bean name="editGuideInformationForm" 
                 type="org.apache.struts.validator.DynaValidatorForm"
                 dynamic="true">

            <form-property name="page" type="java.lang.Integer" />
        	<form-property name="quantityList" type="java.lang.String" />
			<form-property name="contributor" type="java.lang.String" />
			<form-property name="othersRemarks" type="java.lang.String" />
			<form-property name="othersPrice" type="java.lang.String" />
			<form-property name="othersQuantity" type="java.lang.String" />
			
      </form-bean>

      <!-- Bean for The Choosing of a Year -->
      <form-bean name="chooseYearForm" 
                 type="org.apache.struts.validator.DynaValidatorForm"
                 dynamic="true">

         <form-property name="page" type="java.lang.Integer" />
         <form-property name="year" type="java.lang.String" />
      </form-bean>

	  <!-- Bean to Choose the Information for the Certificate  -->
      <form-bean name="chooseCertificateInfoForm" 
                 type="org.apache.struts.validator.DynaValidatorForm"
                 dynamic="true">

            <form-property name="page" type="java.lang.Integer" />
        	<form-property name="requesterNumber" type="java.lang.String" />
        	<form-property name="graduationType" type="java.lang.String" />
        	<form-property name="certificateList" type="java.lang.String"/>
			<form-property name="destination" type="java.lang.String[]"/>
      </form-bean>

	  <!-- Bean to Choose the Information for the Certificate  -->
      <form-bean name="chooseStudentGuideForm" 
                 type="org.apache.struts.validator.DynaValidatorForm"
                 dynamic="true">

            <form-property name="page" type="java.lang.Integer" />
            <form-property name="quantityList" type="java.lang.String" />
			<form-property name="studentGuideList" type="java.lang.String"/>
			<form-property name="specializationGratuityQuantity" type="java.lang.String"/>
			<form-property name="specializationGratuityAmount" type="java.lang.String"/>
			<form-property name="othersGratuityAmount" type="java.lang.String"/>
			<form-property name="othersGratuityDescription" type="java.lang.String"/>
			
      
      </form-bean>
      

	  <!-- Bean for The Choosing of a Student -->
      <form-bean name="studentNumberForm" 
                 type="org.apache.struts.validator.DynaValidatorForm"
                 dynamic="true">

         <form-property name="page" type="java.lang.Integer" initial="0"/>
         <form-property name="studentNumber" type="java.lang.Integer" />         
       	 <form-property name="grade" type="java.lang.String" />
         <form-property name="teacherNumber" type="java.lang.String" />
         <form-property name="enrolmentEvaluationType" type="java.lang.String" />
         <form-property name="observation" type="java.lang.String" />
         <form-property name="examDateDay" type="java.lang.String" /> 
         <form-property name="examDateMonth" type="java.lang.String" /> 
    	 <form-property name="examDateYear" type="java.lang.String" /> 
    	 <form-property name="gradeAvailableDateDay" type="java.lang.String" /> 
         <form-property name="gradeAvailableDateMonth" type="java.lang.String" /> 
    	 <form-property name="gradeAvailableDateYear" type="java.lang.String" /> 
    	 <form-property name="whenAlter" type="java.lang.String" /> 
    	 <form-property name="whoseAlter" type="java.lang.String" /> 
        	
	  </form-bean>
	  
	  <!-- Bean to submit final evaluation -->
      <form-bean name="marksSubmissionForm" 
                 type="org.apache.struts.validator.DynaValidatorForm"
                 dynamic="true">

            <form-property name="page" type="java.lang.Integer" initial="0" />
            <form-property name="studentName" type="java.lang.String" />
            <form-property name="studentNumber" type="java.lang.String" />
            <form-property name="grade" type="java.lang.String" />
            <form-property name="teacherNumber" type="java.lang.String" />
			<form-property name="year" type="java.lang.String" />
			<form-property name="month" type="java.lang.String" />
			<form-property name="day" type="java.lang.String" />				        
      </form-bean>

	  <!-- Bean to Choose the Situation for the Candidate  -->
      <form-bean name="chooseCandidateSituationForm" 
                 type="org.apache.struts.validator.DynaValidatorForm"
                 dynamic="true">

            <form-property name="page" type="java.lang.Integer" />
            <form-property name="situations" type="java.lang.String[]"/>
	        <form-property name="candidatesID" type="java.lang.String[]"/>
        	<form-property name="remarks" type="java.lang.String[]" />
        	<form-property name="executionYear" type="java.lang.String" />
            <form-property name="degree" type="java.lang.String" />
   	        <form-property name="substitutes" type="java.lang.String[]"/>
       </form-bean>

	  <!-- Bean to Choose the Situation for the Candidate  -->
      <form-bean name="chooseStudentForm" 
                 type="org.apache.struts.validator.DynaValidatorForm"
                 dynamic="true">

            <form-property name="page" type="java.lang.Integer" />
            <form-property name="number" type="java.lang.Integer"/>
            <form-property name="degreeType" type="java.lang.Integer"/>
       </form-bean>

	  <!-- Bean to Choose the Situation for the Candidate  -->
      <form-bean name="candidateRegistrationForm" 
                 type="org.apache.struts.validator.DynaValidatorForm"
                 dynamic="true">

            <form-property name="page" type="java.lang.Integer" />
            <form-property name="candidateID" type="java.lang.Integer"/>
            <form-property name="executionYear" type="java.lang.String"/>
            <form-property name="degreeCode" type="java.lang.String"/>
            <form-property name="branchID" type="java.lang.Integer"/>
            <form-property name="studentNumber" type="java.lang.String"/>
            <form-property name="studentCurricularPlanID" type="java.lang.Integer"/>
       </form-bean>




      
	  <!-- Bean to Choose the second Master Degree for Study Plan -->
      <form-bean name="chooseSecondMasterDegreeForm" 
                 type="org.apache.struts.validator.DynaValidatorForm"
                 dynamic="true">

         <form-property name="page" type="java.lang.Integer" />
         <form-property name="masterDegree" type="java.lang.String" />
         <form-property name="candidateID" type="java.lang.Integer"/>
      </form-bean>
      
      <!-- Bean to Choose the Course List for Study Plan  -->
      <form-bean name="chooseCourseListForm" 
                 type="org.apache.struts.validator.DynaValidatorForm"
                 dynamic="true">

            <form-property name="page" type="java.lang.Integer" />
   	        <form-property name="candidateID" type="java.lang.Integer"/>
   	        <form-property name="executionYear" type="java.lang.String"/>
   	        <form-property name="givenCreditsRemarks" type="java.lang.String"/>
        	<form-property name="selection" type="java.lang.Integer[]"/>
        	<form-property name="attributedCredits" type="java.lang.String"/>
      </form-bean>
      
      <!-- Bean to Choose the Course List for Study Plan  -->
      <form-bean name="gratuityChangeForm" 
                 type="org.apache.struts.validator.DynaValidatorForm"
                 dynamic="true">

            <form-property name="page" type="java.lang.Integer" />
   	        <form-property name="studentCPID" type="java.lang.Integer"/>
   	        <form-property name="situation" type="java.lang.String"/>
        	<form-property name="othersRemarks" type="java.lang.String"/>
      </form-bean>


      <form-bean name="chooseGuideStateForm" 
                 type="org.apache.struts.validator.DynaValidatorForm"
                 dynamic="true">

       		<form-property name="page" type="java.lang.Integer" />
   	        <form-property name="year" type="java.lang.String"/>
   	        <form-property name="state" type="java.lang.String"/>
      </form-bean>
      <form-bean name="studentCurricularPlanForm" 
                 type="org.apache.struts.validator.DynaValidatorForm"
                 dynamic="true">
            <form-property name="page" type="java.lang.Integer" />
   	        <form-property name="currentState" type="java.lang.String"/>
   	        <form-property name="credits" type="java.lang.String"/>
   	        <form-property name="startDate" type="java.lang.String"/>
   	        <form-property name="extraCurricularCourses" type="java.lang.String[]"/>
   	        <form-property name="observations" type="java.lang.String"/>
      </form-bean>
     
	  <form-bean name="getStudentByNumberForm" type="org.apache.struts.validator.DynaValidatorForm" dynamic="true">
			<form-property name="method" type="java.lang.String"/>
			<form-property name="page" type="java.lang.Integer"/>
			<form-property name="degreeType" type="java.lang.String"/>
			<form-property name="studentNumber" type="java.lang.String"/>
	  </form-bean>

      <form-bean name="createMasterDegreeThesisForm"
                 type="org.apache.struts.validator.DynaValidatorForm"
                 dynamic="true">
            <form-property name="studentNumber" type="java.lang.Integer" />
   	        <form-property name="degreeType" type="java.lang.Integer"/>
   	        <form-property name="page" type="java.lang.Integer"/>
   	        <form-property name="method" type="java.lang.String"/>
   	        <form-property name="dissertationTitle" type="java.lang.String"/>
   	        <form-property name="guidersNumbers" type="java.lang.Integer[]"/>
   	        <form-property name="assistentGuidersNumbers" type="java.lang.Integer[]"/>
   	        <form-property name="externalGuidersIDs" type="java.lang.Integer[]"/>
   	        <form-property name="externalGuiderName" type="java.lang.String"/>
   	        <form-property name="externalAssistentGuidersIDs" type="java.lang.Integer[]"/>
   	        <form-property name="externalAssistentGuiderName" type="java.lang.String"/>
   	        <form-property name="removedGuidersNumbers" type="java.lang.Integer[]"/>
   	        <form-property name="removedAssistentGuidersNumbers" type="java.lang.Integer[]"/>
   	        <form-property name="removedExternalGuidersIDs" type="java.lang.Integer[]"/>   	        
      		<form-property name="removedExternalAssistentGuidersIDs" type="java.lang.Integer[]"/>   	        
      </form-bean>
      
	  <form-bean name="changeMasterDegreeThesisForm" 
                 type="org.apache.struts.validator.DynaValidatorForm"
                 dynamic="true">
            <form-property name="studentNumber" type="java.lang.Integer" />
   	        <form-property name="degreeType" type="java.lang.Integer"/>
   	        <form-property name="page" type="java.lang.Integer"/>
   	        <form-property name="method" type="java.lang.String"/>
   	        <form-property name="dissertationTitle" type="java.lang.String"/>
   	        <form-property name="guidersNumbers" type="java.lang.Integer[]"/>
   	        <form-property name="externalGuidersIDs" type="java.lang.Integer[]"/>
   	        <form-property name="externalGuiderName" type="java.lang.String"/>
   	        <form-property name="assistentGuidersNumbers" type="java.lang.Integer[]"/>
   	        <form-property name="externalAssistentGuidersIDs" type="java.lang.Integer[]"/>
   	        <form-property name="externalAssistentGuiderName" type="java.lang.String"/>
   	        <form-property name="removedGuidersNumbers" type="java.lang.Integer[]"/>
   	        <form-property name="removedAssistentGuidersNumbers" type="java.lang.Integer[]"/>
   	        <form-property name="removedExternalGuidersIDs" type="java.lang.Integer[]"/>   	        
      		<form-property name="removedExternalAssistentGuidersIDs" type="java.lang.Integer[]"/>   	        
      </form-bean>
     
	  <form-bean name="changeMasterDegreeProofForm" 
                 type="org.apache.struts.validator.DynaValidatorForm"
                 dynamic="true">
            <form-property name="studentNumber" type="java.lang.Integer" />
   	        <form-property name="degreeType" type="java.lang.Integer"/>
   	        <form-property name="page" type="java.lang.Integer"/>
   	        <form-property name="method" type="java.lang.String"/>
   	        <form-property name="dissertationTitle" type="java.lang.String"/>
   	        <form-property name="juriesNumbers" type="java.lang.Integer[]"/>
   	        <form-property name="removedJuriesNumbers" type="java.lang.Integer[]"/>
   	        <form-property name="removedExternalJuriesIDs" type="java.lang.Integer[]"/>   	        
   	        <form-property name="externalJuriesIDs" type="java.lang.Integer[]"/>
   	        <form-property name="externalJuryName" type="java.lang.String"/>
   	        <form-property name="finalResult" type="java.lang.Integer"/>
   	        <form-property name="attachedCopiesNumber" type="java.lang.Integer"/>
   	        <form-property name="proofDateDay" type="java.lang.String"/>
   	        <form-property name="proofDateMonth" type="java.lang.String"/>
   	        <form-property name="proofDateYear" type="java.lang.String"/>
   	        <form-property name="thesisDeliveryDateDay" type="java.lang.String"/>
   	        <form-property name="thesisDeliveryDateMonth" type="java.lang.String"/>
   	        <form-property name="thesisDeliveryDateYear" type="java.lang.String"/>   	        
	  </form-bean>
	  
	  <form-bean name="createReimbursementGuide"  
	  			 type="org.apache.struts.validator.DynaValidatorForm"
                 dynamic="true">
	  		<form-property name="value" type="java.lang.Double"/>
	  		<form-property name="justification" type="java.lang.String"/>
	  		<form-property name="page" type="java.lang.Integer"/>
	  		<form-property name="guideId" type="java.lang.Integer"/>
	  </form-bean>

	  <form-bean name="insertExternalPersonForm"  
	  			 type="org.apache.struts.validator.DynaValidatorForm"
                 dynamic="true">
	  		<form-property name="name" type="java.lang.String"/>
	  		<form-property name="workLocationID" type="java.lang.Integer"/>
	  		<form-property name="address" type="java.lang.String"/>
	  		<form-property name="phone" type="java.lang.String"/>
	  		<form-property name="mobile" type="java.lang.String"/>
	  		<form-property name="homepage" type="java.lang.String"/>
	  		<form-property name="email" type="java.lang.String"/>
	  		<form-property name="page" type="java.lang.Integer"/>
	  </form-bean>

	  <!-- Bean to Insert Work Location  -->
	  <form-bean name="insertWorkLocationForm"
	  			 type="org.apache.struts.validator.DynaValidatorForm"
	  			 dynamic="true">
	  		<form-property name="page" type="java.lang.Integer" />
	  		<form-property name="name" type="java.lang.String" />
	  </form-bean>
	  
	  <!-- Bean to Edit Work Location  -->
	  <form-bean name="editWorkLocationForm"
	  			 type="org.apache.struts.validator.DynaValidatorForm"
	  			 dynamic="true">
	  		<form-property name="page" type="java.lang.Integer" />
	  		<form-property name="workLocationId" type="java.lang.Integer" />
	  		<form-property name="name" type="java.lang.String" />
	  </form-bean> 

   </form-beans>
    
    <!-- ========== Global Exception Definitions ============================== -->
	<global-exceptions>
		<exception type="java.lang.Exception"
			       key="java.lang.Exception"
			       path="/naoExecutado.do"
			       handler="ServidorApresentacao.config.FenixExceptionHandler"/>
		<exception type="ServidorAplicacao.NotAuthorizedException"
			       key="ServidorAplicacao.NotAuthorizedException"
			       path="/naoAutorizado.do"
			       />
		<exception type="ServidorAplicacao.FenixServiceException"
		  	       key="ServidorAplicacao.FenixServiceException"
		  	       path="/naoExecutado.do"
		  	       handler="ServidorApresentacao.config.FenixExceptionHandler" />
	</global-exceptions>
    
    <!-- ========== Global Forward Definitions =============================== -->
    <global-forwards type="org.apache.struts.action.ActionForward">
	  <forward name="index" path="index.do" redirect="true"/>
      <forward name="firstPage" path="/index.do"/>
      <forward name="logoff" path="/logoff.do" contextRelative="true"/> 
		<forward name="equivalenceForMasterDegreeAdministrativeOffice" path="/equivalence.do"/>
    </global-forwards>
    
    <!-- ========== Action Mapping Definitions =============================== -->
    <action-mappings type="org.apache.struts.action.ActionMapping">
      <!-- page fronting actions -->
      <action path="/home" forward="/switchAction.do?prefix=&amp;page=/mainPortalPage.jsp"/>
      <action path="/switchAction" type="org.apache.struts.actions.SwitchAction" />
      <action path="/index" forward="/index.jsp"/>
      <!--<action path="/enrollment" forward="/enrollment/chooseStudentForEnrollment.jsp"/>-->

		<action	type="ServidorApresentacao.Action.commons.VoidAction"
				path="/equivalence"
				scope="request"
				validate="false">
			<forward name="Success" path="/equivalence/chooseStudentForManualEquivalence.jsp"/>
		</action>
		
		<action	name="getStudentByNumberForm"
				type="ServidorApresentacao.Action.degreeAdministrativeOffice.PrepareStudentDataForManualEquivalenceDispatchAction"
				path="/prepareStudentDataForManualEquivalence"
				input="/prepareStudentDataForManualEquivalence.do?method=error&amp;page=0"
				parameter="method"
				scope="request"
				validate="true">
			<forward name="startManualEquivalence" path="/equivalence/manualEquivalenceManagerForMasterDegreeAdministrativeOffice.do?method=show" contextRelative="true"/>
			<forward name="error" path="/equivalence.do"/>
		</action>

		<action	type="ServidorApresentacao.Action.degreeAdministrativeOffice.PrepareExecutionPeriodForEnrolmentContextAction"
				path="/enrollment"
				scope="request"
				validate="false">
			<forward name="chooseStudentAndExecutionPeriodForEnrollment" path="/enrollment/chooseStudentForEnrollment.jsp"/>
		</action>

		<action	name="getStudentByNumberAndDegreeTypeForm"
				type="ServidorApresentacao.Action.degreeAdministrativeOffice.PrepareStudentDataForEnrolmentWithoutRulesDispatchAction"
				path="/prepareStudentForEnrollment"
				input="/prepareStudentForEnrollment.do?method=error&amp;page=0"
				parameter="method"
				scope="request"
				validate="true">
			<forward name="startCurricularCourseEnrolmentWithoutRules" path="/enrollment/chooseDegreeAndCurricularSemesterAndCurricularYear.jsp"/>
			<forward name="error" path="/enrollment/chooseStudentForEnrollment.jsp"/>
		</action>
		
		<action	name="getStudentByNumberAndDegreeTypeForThesisForm"
				type="ServidorApresentacao.Action.masterDegree.administrativeOffice.thesis.PrepareStudentDataForThesisOperationsDispatchAction"
				path="/prepareStudentForMasterDegreeThesisAndProof"
				input="/thesis/chooseStudentForMasterDegreeThesisAndProof.jsp?page=2"
				parameter="method"
				scope="request"
				validate="true">
			<exception	type="ServidorApresentacao.Action.exceptions.NonExistingActionException"
						key="ServidorApresentacao.Action.exceptions.NonExistingActionException"
						handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
			<forward name="success" path="/thesis/indexThesis.jsp"/>
			<forward name="createThesis" path="/thesis/indexCreateThesis.jsp"/>
			<forward name="error" path="/thesis/chooseStudentForMasterDegreeThesisAndProof.jsp"/>
		</action>

		<action name="getDegreeAndCurricularSemesterAndCurricularYearForm"
				type="ServidorApresentacao.Action.degreeAdministrativeOffice.PrepareEnrolmentContextDispatchAction"
				path="/prepareEnrolmentContext"
				input="/prepareEnrolmentContext.do?method=error&amp;page=0"
				parameter="method"
				scope="request"
				validate="true">
			<forward name="showAvailableCurricularCourses" path="/curricularCourseEnrolmentWithoutRulesManager.do?method=start"/>
			<forward name="error" path="/prepareStudentForEnrollment.do?method=getStudentAndDegreeTypeForEnrolmentWithoutRules&amp;page=1"/>
			<forward name="home" path="df.page.main"/>
		</action>

		<action	name="curricularCourseEnrollmentForm"
				type="ServidorApresentacao.Action.degreeAdministrativeOffice.CurricularCourseEnrolmentWithoutRulesManagerDispatchAction"
				path="/curricularCourseEnrolmentWithoutRulesManager"
				parameter="method"
				scope="session"
				validate="false">
			<exception	type="ServidorApresentacao.Action.exceptions.FenixTransactionException"
						key="ServidorApresentacao.Action.exceptions.InvalidSituationActionException"
						handler="ServidorApresentacao.config.FenixTransactionExceptionHandler"/>
			<forward name="beginTransaction" path="/curricularCourseEnrolmentWithoutRulesManager.do?method=error"/>
			<forward name="showAvailableCurricularCourses" path="/enrollment/showAvailableCurricularCourses.jsp"/>
			<forward name="verifyEnrolment" path="/enrollment/verifyEnrollment.jsp"/>
			<forward name="acceptEnrolment" path="/enrollment/acceptEnrollment.jsp"/>
			<forward name="error" path="/prepareStudentForEnrollment.do?method=getStudentAndDegreeTypeForEnrolmentWithoutRules&amp;page=0"/>
		</action>

      <action path="/printGuidePage"
		      parameter="method"
              type="ServidorApresentacao.Action.commons.VoidAction" 
			  >
	         <forward name="Success" path="/guide/printGuidePage.jsp"/> 
      </action>
 	  <action path="/printGuidePages"
		      parameter="method"
              type="ServidorApresentacao.Action.masterDegree.administrativeOffice.guide.VoidAction" 
			  >
	         <forward name="Success" path="/guide/printGuidePage.jsp"/> 
      </action>
      <action path="/candidateSection"
		      parameter="method"
              type="ServidorApresentacao.Action.commons.VoidAction"
			  >
	         <forward name="Success" path="/candidateIndex.jsp"/> 
      </action>

      <action path="/listingSection"
		      parameter="method"
              type="ServidorApresentacao.Action.commons.VoidAction"
			  >
	         <forward name="Success" path="/lists/indexLists.jsp"/> 
      </action>
            
	  <action path="/contributorSection"
		      parameter="method"
              type="ServidorApresentacao.Action.commons.VoidAction"
			  >
	         <forward name="Success" path="/contributor/indexContributor.jsp"/> 
      </action>

	  <action path="/guideSection"
		      parameter="method"
              type="ServidorApresentacao.Action.commons.VoidAction"
			  >
	         <forward name="Success" path="/guide/indexGuide.jsp"/> 
      </action>
      
      <action path="/thesisSection"
		      parameter="method"
              type="ServidorApresentacao.Action.commons.VoidAction"
			  >
	         <forward name="Success" path="/thesis/chooseStudentForMasterDegreeThesisAndProof.jsp"/> 
      </action>
      
      <action path="/externalPersonSection"
		      parameter="method"
              type="ServidorApresentacao.Action.commons.VoidAction"
			  >
	         <forward name="Success" path="df.page.externalPersonIndex"/> 
      </action>
      
      <action path="/studentSection"
		      parameter="method"
              type="ServidorApresentacao.Action.commons.VoidAction"
			  >
	         <forward name="Success" path="/student/indexStudent.jsp"/> 
      </action>
	  
	  <action path="/guideListingSection"
		      parameter="method"
              type="ServidorApresentacao.Action.commons.VoidAction"
			  >
	         <forward name="Success" path="/guide/indexGuideListing.jsp"/> 
      </action>    
 
 	  <action path="/marksSection"
		      parameter="method"
              type="ServidorApresentacao.Action.commons.VoidAction"
			  >
	         <forward name="Success" path="/marksManagement/indexMarksManagement.jsp"/> 
      </action>
      
    
      
      <!-- action definition -->
      
      <!-- List Students from Master Degree -->
	  <action path="/listMasterDegrees"
		      parameter="method"
		      scope="request"
		      input="/lists/displayCurricularPlanByChosenMasterDegree.jsp"
              type="ServidorApresentacao.Action.masterDegree.administrativeOffice.student.MasterDegreeListingDispatchAction"
			  >
			<exception type="ServidorApresentacao.Action.exceptions.NonExistingActionException"
	                key="ServidorApresentacao.Action.exceptions.NonExistingActionException"
                    handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>			  
	         <forward name="DisplayMasterDegreeList" path="/lists/displayMasterDegrees.jsp"/>
	         <forward name="MasterDegreeReady" path="/lists/displayCurricularPlanByChosenMasterDegree.jsp"/> 
	         <forward name="CurricularPlanReady" path="/lists/displayStudentListByDegree.jsp"/> 
   	         <forward name="NotAuthorized" path="/student/notAuthorized.jsp" /> 
  	         <forward name="NoStudents" path="/listMasterDegrees.do?method=chooseMasterDegree&amp;page=0"/> 
	  </action>
	  
        <!-- List Student Curriculum -->
        <action path="/studentCurriculum"
		      parameter="method"
		      scope="request"
              type="ServidorApresentacao.Action.commons.student.CurriculumDispatchAction"
			  >
	         <forward name="ShowStudentCurriculum" path="/student/displayStudentCurriculum.jsp"/>
 			 <forward name="NotAuthorized" path="/student/notAuthorized.jsp" />
	  </action>

	  <!-- Action to choose an Execution Year to List the students by course -->
      <action attribute="chooseExecutionYearToListCourseStudents"
			  input="/chooseExecutionYear.jsp"
      	      name="chooseExecutionYearForm"
		      path="/chooseExecutionYearToListCourseStudents"
		      parameter="method"
		      scope="request"
              type="ServidorApresentacao.Action.commons.ChooseExecutionYearDispatchAction"
              validate="true">
	         <forward name="PrepareSuccess" path="/lists/chooseExecutionYearToCourseStudentList.jsp"/>  
	         <forward name="ChooseSuccess" path="/chooseMasterDegreeToCourseStudentList.do?method=prepareChooseMasterDegree&amp;page=0"/>  
      </action>

      <!-- Choose Master Degree To List the students by course -->
      <action path="/chooseMasterDegreeToCourseStudentList"
	          input="/lists/chooseMasterDegreeToDegreeStudentList.jsp"
		      attribute="chooseMasterDegreeForm"
		      name="chooseMasterDegreeForm"
		      parameter="method"
		      scope="request"
              type="ServidorApresentacao.Action.commons.ChooseMasterDegreeDispatchAction"
			  >
	         <forward name="PrepareSuccess" path="/lists/chooseMasterDegreeToCourseStudentList.jsp"/>  
	         <forward name="ChooseSuccess" path="/chooseCurricularCourseToCourseStudentList.do?method=prepareChooseCurricularCourse"/>
      </action>

      <!-- Choose CurricularCourse To List the students by course -->
      <action path="/chooseCurricularCourseToCourseStudentList"
      		  input="/lists/chooseCurricularCourseToCourseStudentList.jsp"
		      parameter="method"
              type="ServidorApresentacao.Action.commons.ChooseCurricularCourseDispatchAction"
			  >
	         <forward name="PrepareSuccess" path="/lists/chooseCurricularCourseToCourseStudentList.jsp"/>  
	         <forward name="ChooseSuccess" path="/lists/displayStudentListByCourse.jsp"/> 
	         <forward name="NoStudents" path="/chooseMasterDegreeToCourseStudentList.do?method=chooseMasterDegree"/> 
   	         <forward name="NotAuthorized" path="/student/notAuthorized.jsp"/> 
	         
      </action>


	  <!-- List Students from Course -->
	  <action path="/listCourseStudents"
		      parameter="method"
		      scope="request"
              type="ServidorApresentacao.Action.masterDegree.administrativeOffice.student.CourseListingDispatchAction"
			  >
	   <!-- TO UPDATE -->
	         <forward name="DisplayMasterDegreeList" path="/lists/displayMasterDegrees.jsp"/>
	         <forward name="MasterDegreeReady" path="/lists/displayCurricularPlanByChosenMasterDegree.jsp"/> 
	         <forward name="CurricularPlanReady" path="/lists/displayStudentListByDegree.jsp"/> 
	  </action>

<!-- ////////////////// CHECK UTILITY ON STUDENTS LISTINGS BEFORE DELETING ///////////////////// -->
      <!-- action to choose a Execution Year List the students by degree -->
<!--      <action attribute="chooseExecutionYearForm"
      		  input="/chooseExecutionYear.jsp"
      	      name="chooseExecutionYearForm"
		      path="/chooseExecutionYear2DegreeStudentList"
		      parameter="method"
		      scope="request"
              type="ServidorApresentacao.Action.commons.ChooseExecutionYearDispatchAction"
              validate="true">
	         <forward name="PrepareSuccess" path="/lists/chooseExecutionYearToDegreeStudentList.jsp"/>  
	         <forward name="ChooseSuccess" path="/chooseMasterDegreeToDegreeStudentList.do?method=prepareChooseMasterDegree&amp;page=0"/>  
      </action>
-->
      <!-- Choose Master Degree To List the students by degree -->
<!--      <action path="/chooseMasterDegreeToDegreeStudentList"
      		  input="/lists/chooseMasterDegreeToDegreeStudentList.jsp"
		      attribute="chooseMasterDegreeForm"
		      name="chooseMasterDegreeForm"
		      parameter="method"
		      scope="request"
              type="ServidorApresentacao.Action.commons.ChooseMasterDegreeDispatchAction"
			  >
	         <forward name="PrepareSuccess" path="/lists/chooseMasterDegreeToDegreeStudentList.jsp"/>  
	         <forward name="ChooseSuccess" path="/displayStudentListByDegree.do?method=prepareReading&amp;page=0"/>
      </action>
-->      
      <!-- List the students by Degree -->
<!--      <action path="/displayStudentListByDegree"
      		  input="/lists/displayStudentListByDegree.jsp"
		      parameter="method"
		      scope="request"
              type="ServidorApresentacao.Action.masterDegree.administrativeOffice.student.StudentListingByDegreeDispatchAction"
			  >
	         <forward name="PrepareSuccess" path="/lists/displayStudentListByDegree.jsp"/>  
	  </action>
-->	    
  
      <!-- action to choose a Execution Year to create a candidate -->
      <action attribute="chooseExecutionYearForm"
      		  input="/chooseExecutionYear.jsp"
      	      name="chooseExecutionYearForm"
		      path="/chooseExecutionYear"
		      parameter="method"
		      scope="request"
              type="ServidorApresentacao.Action.masterDegree.administrativeOffice.candidate.CreateCandidateDispatchAction"
              validate="true">
     		 <exception type="ServidorApresentacao.Action.exceptions.ExistingActionException"
		                key="ServidorApresentacao.Action.exceptions.ExistingActionException"
                        handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>	
	         <forward name="PrepareSuccess" path="/chooseExecutionYear.jsp"/>  
	         <forward name="CreateReady" path="/createCandidateDispatchAction.do?method=prepare&amp;page=0"/>  
      </action>
      
      
      <!-- action to create a candidate -->
      <action attribute="createCandidateForm"
      		  input="/createCandidateDispatchAction.do?page=0&amp;method=prepare"
      	      name="createCandidateForm"
		      path="/createCandidateDispatchAction"
		      parameter="method"
		      scope="request"
              type="ServidorApresentacao.Action.masterDegree.administrativeOffice.candidate.CreateCandidateDispatchAction"
              validate="true">
     		 <exception type="ServidorApresentacao.Action.exceptions.ExistingActionException"
		                key="ServidorApresentacao.Action.exceptions.ExistingActionException"
                        handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
	         <forward name="PrepareSuccess" path="/createCandidate.jsp"/>  
	         <forward name="CreateSuccess" path="/createCandidateSuccess.jsp"/>  
      </action>

      <!-- action to visualize candidates -->
      <action attribute="listCandidatesForm"
      		  input="/chooseCandidateList.jsp"
      	      name="listCandidatesForm"
		      path="/visualizeCandidates"
		      parameter="method"
		      scope="request"
              type="ServidorApresentacao.Action.masterDegree.administrativeOffice.candidate.ListCandidatesDispatchAction"
              validate="true">
	         <forward name="PrepareReady" path="/chooseCandidateList.jsp"/>  
	         <forward name="ActionReady" path="/visualizePersonCandidateList.jsp"/>  
	         <forward name="VisualizeCandidate" path="/visualizeCandidate.jsp"/>  
	         <forward name="ChooseCandidate" path="/candidateList.jsp"/>  
      </action>

      <!-- action to edit candidates -->
      <action attribute="listCandidatesForm"
      		  input="/chooseCandidateList.jsp"
      	      name="listCandidatesForm"
		      path="/editCandidates"
		      parameter="method"
		      scope="request"
              type="ServidorApresentacao.Action.masterDegree.administrativeOffice.candidate.ListCandidatesDispatchAction"
              validate="true">
     		 <exception type="ServidorApresentacao.Action.exceptions.ExistingActionException"
		                key="ServidorApresentacao.Action.exceptions.ExistingActionException"
                        handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
	         <forward name="PrepareReady" path="/chooseCandidateList.jsp"/>  
	         <forward name="ActionReady" path="/editCandidate.do?method=prepareEdit&amp;page=0"/>  
	         <forward name="ChooseCandidate" path="/candidateList.jsp"/>  
      </action>
      
      <action attribute="changeCandidateForm"
      		  input="/editCandidate.do?method=prepareEdit&amp;page=0&amp;error=1"
      	      name="changeCandidateForm"
		      path="/editCandidate"
		      parameter="method"
		      scope="request"
              type="ServidorApresentacao.Action.masterDegree.administrativeOffice.candidate.ListCandidatesDispatchAction"
              validate="true">
     		 <exception type="ServidorApresentacao.Action.exceptions.FenixActionException"
		                key="ServidorApresentacao.Action.exceptions.FenixActionException"
                        handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
	         <forward name="PrepareReady" path="/changeCandidate.jsp"/>  
	         <forward name="ChangeSuccess" path="/visualizeCandidate.jsp"/>  
	         <forward name="ChangePasswordSuccess" path="/guide/informationTemplate1.jsp"/>  
      </action>
      
      <action attribute="chooseStudentGuideForm"
      		  input="/guide/chooseStudentGuide.jsp"
      	      name="chooseStudentGuideForm"
		      path="/studentGuideDispatchAction"
		      parameter="method"
		      scope="request"
              type="ServidorApresentacao.Action.masterDegree.administrativeOffice.guide.StudentGuideDispatchAction"
              validate="true">
       		 <exception type="ServidorApresentacao.Action.exceptions.InvalidInformationInFormActionException"
		                key="ServidorApresentacao.Action.exceptions.InvalidInformationInFormActionException"
                        handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
       		 <exception type="ServidorApresentacao.Action.exceptions.NoChangeMadeActionException"
		                key="ServidorApresentacao.Action.exceptions.NoChangeMadeActionException"
                        handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>                        
	         <forward name="CreateStudentGuideReady" path="/guide/createGuideReady.jsp"/>
	  </action>


      
      <!-- Dispatch Action to Create the Contributor Information -->
      <action path="/createContributorDispatchAction"
	     attribute="createContributorForm"
	          name="createContributorForm"
	         input="/contributor/createContributor.jsp"
	      validate="true"
		 parameter="method"
  	         scope="request"
      	      type="ServidorApresentacao.Action.masterDegree.administrativeOffice.contributor.CreateContributorDispatchAction">
   		 <exception type="ServidorApresentacao.Action.exceptions.ExistingActionException"
            key="ServidorApresentacao.Action.exceptions.ExistingActionException"
            handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
      	  <forward name="CreateSuccess" path="/contributor/createContributorSuccess.jsp"/>
      	  <forward name="PrepareReady" path="/contributor/createContributor.jsp"/>
      </action>

      <!-- action to visualize Contributors -->
      <action attribute="chooseContributorForm"
      		  input="/contributor/chooseContributor.jsp"
      	      name="chooseContributorForm"
		      path="/visualizeContributors"
		      parameter="method"
		      scope="request"
              type="ServidorApresentacao.Action.masterDegree.administrativeOffice.contributor.ListContributorsDispatchAction"
              validate="true">
	         <forward name="PrepareReady" path="/contributor/chooseContributor.jsp"/>  
	         <forward name="ActionReady" path="/contributor/visualizeContributor.jsp"/>  
	         <forward name="ChooseContributor" path="/contributor/selectContributorFromList.jsp"/>  
      </action>

      <!-- action to edit Contributors -->
      <action attribute="chooseContributorForm"
      		  input="/contributor/chooseContributor.jsp"
      	      name="chooseContributorForm"
		      path="/editContributors"
		      parameter="method"
		      scope="request"
              type="ServidorApresentacao.Action.masterDegree.administrativeOffice.contributor.ListContributorsDispatchAction"
              validate="true">
     		 <exception type="ServidorApresentacao.Action.exceptions.ExistingActionException"
		                key="ServidorApresentacao.Action.exceptions.ExistingActionException"
                        handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
	         <forward name="PrepareReady" path="/contributor/chooseContributor.jsp"/>  
	         <forward name="ActionReady" path="/editContributor.do?method=prepareEdit&amp;page=0" />  
	         <forward name="ChooseContributor" path="/contributor/selectContributorFromList.jsp"/>  
      </action>

	  <!-- Action to Edit ONE contributor -->
      <action attribute="createContributorForm"
      		  input="/contributor/editContributor.jsp"
      	      name="createContributorForm"
		      path="/editContributor"
		      parameter="method"
		      scope="request"
              type="ServidorApresentacao.Action.masterDegree.administrativeOffice.contributor.ListContributorsDispatchAction"
              validate="true">
     		 <exception type="ServidorApresentacao.Action.exceptions.ExistingActionException"
		                key="ServidorApresentacao.Action.exceptions.ExistingActionException"
                        handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
	         <forward name="EditReady" path="/contributor/editContributor.jsp"/>  
	         <forward name="EditSuccess" path="/contributor/editContributorSuccess.jsp"/>  
      </action>
      
      
      

      <!-- action to create a guide -->
      <action attribute="createGuideForm"
      		  input="/guide/createGuide.jsp"
      	      name="createGuideForm"
		      path="/createGuideDispatchAction"
		      parameter="method"
		      scope="request"
              type="ServidorApresentacao.Action.masterDegree.administrativeOffice.guide.CreateGuideDispatchAction"
              validate="true">
     		 <exception type="ServidorApresentacao.Action.exceptions.ExistingActionException"
		                key="ServidorApresentacao.Action.exceptions.ExistingActionException"
                        handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
     		 <exception type="ServidorApresentacao.Action.exceptions.NoActiveStudentCurricularPlanActionException"
		                key="ServidorApresentacao.Action.exceptions.NoActiveStudentCurricularPlanActionException"
                        handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
              
	         <forward name="PrepareSuccess" path="/guide/createGuide.jsp"/> 
	         <forward name="CreateCandidateGuide" path="/guide/createGuideReady.jsp"/>  
	         <forward name="CreateStudentGuide" path="/guide/chooseStudentGuide.jsp"/>  
      </action>


      <!-- action to choose a guide -->
      <action attribute="chooseGuideForm"
      		  input="/guide/chooseGuide.jsp"
      	      name="chooseGuideForm"
		      path="/chooseGuideDispatchAction"
		      parameter="method"
		      scope="request"
              type="ServidorApresentacao.Action.masterDegree.administrativeOffice.guide.ChooseGuideDispatchAction"
              validate="true">
     		 <exception type="ServidorApresentacao.Action.exceptions.NonExistingActionException"
		                key="ServidorApresentacao.Action.exceptions.NonExistingActionException"
                        handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
	         <forward name="PrepareReady" path="/guide/chooseGuide.jsp"/> 
	         <forward name="ActionReady" path="/guide/visualizeGuide.jsp"/>  
	         <forward name="ShowVersionList" path="/guide/chooseVersionPage.jsp"/>  
      </action>


      <!-- action to edit a guide's Information -->
      <action attribute="editGuideInformationForm"
      		  input="/guide/editGuideInformation.jsp"
      	      name="editGuideInformationForm"
		      path="/editGuideInformation"
		      parameter="method"
		      scope="request"
              type="ServidorApresentacao.Action.masterDegree.administrativeOffice.guide.EditGuideDispatchAction"
              validate="true">
       		 <exception type="ServidorApresentacao.Action.exceptions.InvalidChangeActionException"
		                key="ServidorApresentacao.Action.exceptions.InvalidChangeActionException"
                        handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
       		 <exception type="ServidorApresentacao.Action.exceptions.NoChangeMadeActionException"
		                key="ServidorApresentacao.Action.exceptions.NoChangeMadeActionException"
                        handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
       		 <exception type="ServidorApresentacao.Action.exceptions.InvalidInformationInFormActionException"
		                key="ServidorApresentacao.Action.exceptions.InvalidInformationInFormActionException"
                        handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
         <forward name="PrepareReady" path="/guide/editGuideInformation.jsp"/> 
         <forward name="EditInformationSuccess" path="/guide/visualizeGuide.jsp"/> 
      </action>



	  <!-- Action to Edit a Guide's Situation -->
      <action attribute="editGuideSituationForm"
      		  input="/guide/editGuideSituation.jsp"
      	      name="editGuideSituationForm"
		      path="/editGuideSituation"
		      parameter="method"
		      scope="request"
              type="ServidorApresentacao.Action.masterDegree.administrativeOffice.guide.EditGuideDispatchAction"
			  validate="true">
     		 <exception type="ServidorApresentacao.Action.exceptions.NonValidChangeActionException"
		                key="ServidorApresentacao.Action.exceptions.NonValidChangeActionException"
                        handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
	         <forward name="EditReady" path="/guide/editGuideSituation.jsp"/>  
	         <forward name="SituationChanged" path="/guide/changeSuccess.jsp"/>  
      </action>


      <!-- Create Guide -->
      <action attribute="guideCreateReadyForm"
      		  input="/guide/createGuideReady.jsp"
      	      name="guideCreateReadyForm"
		      path="/createGuideReadyDispatchAction"
		      parameter="method"
		      scope="request"
              type="ServidorApresentacao.Action.masterDegree.administrativeOffice.guide.CreateGuideDispatchAction"
              validate="true">
     		 <exception type="ServidorApresentacao.Action.exceptions.NoActiveStudentCurricularPlanActionException"
		                key="ServidorApresentacao.Action.exceptions.NoActiveStudentCurricularPlanActionException"
                        handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
     		 <exception type="ServidorApresentacao.Action.exceptions.InvalidSituationActionException"
		                key="ServidorApresentacao.Action.exceptions.InvalidSituationActionException"
                        handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
     		 <exception type="ServidorApresentacao.Action.exceptions.InvalidInformationInFormActionException"
		                key="ServidorApresentacao.Action.exceptions.InvalidInformationInFormActionException"
                        handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
	         <forward name="PrepareSuccess" path="/guide/createGuide.jsp"/> 
	         <forward name="CreateCandidateGuide" path="/guide/createGuideReady.jsp"/>  
	         <forward name="CreateStudentGuide" path="/guide/guideMenu.jsp"/>  
	         <forward name="CreateSuccess" path="/printGuide.do?method=prepare"/>  	         
			 <forward name="BackError" path="/backErrorPage.do" redirect="true"/>  
      </action>


      <action path="/backErrorPage"
              type="ServidorApresentacao.Action.commons.VoidAction"
			  >
	         <forward name="Success" path="/guide/backErrorPage.jsp"/> 
      </action>

      <!-- List Guides by Year -->
      <action attribute="chooseYearForm"
      		  input="/guide/chooseGuideYear.jsp"
      	      name="chooseYearForm"
		      path="/guideListingByYear"
		      parameter="method"
		      scope="request"
              type="ServidorApresentacao.Action.masterDegree.administrativeOffice.guide.GuideListingDispatchAction"
              validate="true">
	         <forward name="PrepareReady" path="/guide/chooseGuideYear.jsp"/> 
	         <forward name="ShowGuideList" path="/guide/showGuideList.jsp"/> 
   	         <forward name="ShowVersionList" path="/guide/chooseVersionPage.jsp"/>  
      </action>

      <!-- List Guides by Person -->
      <action attribute="choosePersonForm"
      		  input="/guideListingByPerson.do?method=prepareChoosePerson&amp;page=0"
      	      name="choosePersonForm"
		      path="/guideListingByPerson"
		      parameter="method"
		      scope="request"
              type="ServidorApresentacao.Action.masterDegree.administrativeOffice.guide.GuideListingDispatchAction"
              validate="true">
              <exception type="ServidorApresentacao.Action.exceptions.NonExistingActionException"
	    		         key="ServidorApresentacao.Action.exceptions.NonExistingActionException"
    	        		 handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
	         <forward name="PrepareSuccess" path="/guide/choosePerson.jsp"/> 
	         <forward name="ShowGuideList" path="/guide/showGuideList.jsp"/> 
      </action>


      <!-- Choose Execution Year to Visualize Candidates -->
      <action path="/chooseExecutionYearToVisualizeCandidates"
      		  input="chooseExecutionYear.jsp"
		      attribute="chooseExecutionYearForm"
		      name="chooseExecutionYearForm"
		      parameter="method"
		      scope="request"
              type="ServidorApresentacao.Action.commons.ChooseExecutionYearDispatchAction"
			  >
	         <forward name="PrepareSuccess" path="/chooseExecutionYear.jsp"/>  
	         <forward name="ChooseSuccess" path="/visualizeCandidates.do?method=prepareChoose&amp;action=visualize&amp;page=0"/> 
      </action>

	  
      <!-- Choose Execution Year to Edit Candidates -->
      <action path="/chooseExecutionYearToEditCandidates"
      		  input="/chooseExecutionYear.jsp"
		      attribute="chooseExecutionYearForm"
		      name="chooseExecutionYearForm"
		      parameter="method"
		      scope="request"
              type="ServidorApresentacao.Action.commons.ChooseExecutionYearDispatchAction"
			  >
	         <forward name="PrepareSuccess" path="/chooseExecutionYear.jsp"/>  
	         <forward name="ChooseSuccess" path="/editCandidates.do?method=prepareChoose&amp;action=edit&amp;page=0"/> 
      </action>
      
	  <!-- Choose Execution Year to Select Candidates -->
      <action path="/chooseExecutionYearToSelectCandidates"
      		  input="/chooseExecutionYear.jsp"
		      attribute="chooseExecutionYearForm"
		      name="chooseExecutionYearForm"
		      parameter="method"
		      scope="request"
              type="ServidorApresentacao.Action.commons.ChooseExecutionYearDispatchAction"
			  >
	         <forward name="PrepareSuccess" path="/chooseExecutionYear.jsp"/>  
	         <forward name="ChooseSuccess" path="/chooseMasterDegreeToSelectCandidates.do?method=prepareChooseMasterDegree&amp;page=0"/>  
      </action>

      <!-- Choose Master Degree To Select Candidates -->
      <action path="/chooseMasterDegreeToSelectCandidates"
	          input="/candidate/chooseMasterDegreeToSelectCandidates.jsp"
		      attribute="chooseMasterDegreeForm"
		      name="chooseMasterDegreeForm"
		      parameter="method"
		      scope="request"
              type="ServidorApresentacao.Action.commons.ChooseMasterDegreeDispatchAction"
			  >
	         <forward name="PrepareSuccess" path="/candidate/chooseMasterDegreeToSelectCandidates.jsp"/>  
			 <forward name="ChooseSuccess" path="/displayListToSelectCandidates.do?method=prepareSelectCandidates&amp;page=0"/>
      </action>

      <!-- Display List To Select Candidates -->
      <action path="/displayListToSelectCandidates"
	          input="/candidate/displayCandidateListBySituation.jsp"
		      attribute="chooseCandidateSituationForm"
		      name="chooseCandidateSituationForm"
		      parameter="method"
		      scope="session"
              type="ServidorApresentacao.Action.masterDegree.commons.candidate.SelectCandidatesDispatchAction"
			  >
	         <forward name="PrepareSuccess" path="/candidate/displayCandidateListBySituation.jsp"/>  
	         <forward name="CancelConfirmation" path="/displayListToSelectCandidates.do?method=prepareSelectCandidates"/>  
	         <forward name="RequestConfirmation" path="/candidate/warning.jsp"/> 
	         <forward name="FinalPresentation" path="/candidate/displayCandidatesFinalList.jsp"/>
	         <forward name="ChooseSuccess" path="/displayListToSelectCandidates.do?method=preparePresentation&amp;page=0"/>
	         <forward name="OrderCandidates" path="/displayListToSelectCandidates.do?method=getSubstituteCandidates&amp;page=0"/> 
	         <forward name="Cancel" path="/displayListToSelectCandidates.do?method=prepareSelectCandidates&amp;page=0"/> 
	         <forward name="OrderCandidatesReady" path="/candidate/displayChosenSelection.jsp"/> 
	         <forward name="NumerusClaususNotDefined" path="/chooseMasterDegreeToSelectCandidates.do?method=prepareChooseMasterDegree&amp;page=0"/>  	         
			 <forward name="BackError" path="/backErrorCandidateApprovalPage.do" redirect="true"/>  
			 <forward name="PrintReady" path="/candidate/approvalDispatchTemplate.jsp" />  
			 
		</action>

      <action path="/backErrorCandidateApprovalPage"
              type="ServidorApresentacao.Action.commons.VoidAction"
			  >
	         <forward name="Success" path="/candidate/backErrorPage.jsp"/> 
      </action>


	  <!-- Choose Execution Year to Make Candidate Study Plan -->
      <action path="/chooseExecutionYearToCandidateStudyPlan"
      		  input="/chooseExecutionYear.jsp"
		      attribute="chooseExecutionYearForm"
		      name="chooseExecutionYearForm"
		      parameter="method"
		      scope="request"
              type="ServidorApresentacao.Action.commons.ChooseExecutionYearDispatchAction"
			  >
	         <forward name="PrepareSuccess" path="/chooseExecutionYear.jsp"/>  
	         <forward name="ChooseSuccess" path="/chooseMasterDegreeToCandidateStudyPlan.do?method=prepareChooseMasterDegree&amp;page=0"/>  
      </action>

      <!-- Choose Master Degree To Make Candidate Study Plan -->
      <action path="/chooseMasterDegreeToCandidateStudyPlan"
	          input="/candidate/chooseMasterDegreeToSelectCandidates.jsp"
		      attribute="chooseMasterDegreeForm"
		      name="chooseMasterDegreeForm"
		      parameter="method"
		      scope="request"
              type="ServidorApresentacao.Action.commons.ChooseMasterDegreeDispatchAction"
			  >
	         <forward name="PrepareSuccess" path="/candidate/chooseMasterDegreeToSelectCandidates.jsp"/>  
			 <forward name="ChooseSuccess" path="/displayCandidateListToMakeStudyPlan.do?method=prepareSelectCandidates&amp;page=0"/>
      </action>                                   

      <!-- Display List To Make Candidate Study Plan -->
      <action path="/displayCandidateListToMakeStudyPlan"
       		  input="/candidate/displayCandidateListToMakeStudyPlan.jsp"
       		  attribute="chooseSecondMasterDegreeForm"
		      name="chooseSecondMasterDegreeForm"
		      parameter="method"
		      scope="session"
		      type="ServidorApresentacao.Action.masterDegree.commons.candidate.MakeCandidateStudyPlanDispatchAction"
			  >
	         <forward name="PrepareSuccess" path="/candidate/displayCandidateListToMakeStudyPlan.jsp"/>  
	         <forward name="PrepareSecondChooseMasterDegreeReady" path="/candidate/secondChooseMasterDegree.jsp"/>
	         <forward name="ChooseReady" path="/displayCourseListToStudyPlan.do?method=chooseMasterDegree&amp;page=0"/>
     		 <forward name="ChooseSuccess" path="/displayCourseListToStudyPlan.do?method=prepareSelectCourseList&amp;page=0"/>
     		 <forward name="PrintReady" path="/candidate/studyPlanTemplate.jsp"/>
 			 <forward name="BackError" path="/backErrorPage.do" redirect="true"/>  
		</action>

     
      <!-- Display Course List To Candidate Study Plan -->
      
      <action path="/displayCourseListToStudyPlan"
      		  input="/candidate/displayListOfCoursesToChoose.jsp" 
      		  attribute="chooseCourseListForm"
		      name="chooseCourseListForm"
		      parameter="method"
		      scope="request"
		      validate="true"
		      type="ServidorApresentacao.Action.masterDegree.commons.candidate.MakeCandidateStudyPlanDispatchAction"
			  >
		   <exception type="ServidorApresentacao.Action.exceptions.NoChoiceMadeActionException"
			          key="ServidorApresentacao.Action.exceptions.NoChoiceMadeActionException"
			          handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
    
	         <forward name="PrepareSuccess" path="/candidate/displayListOfCoursesToChoose.jsp"/>  
	         <forward name="ChooseSuccess" path="/candidate/displayCandidateEnrolments.jsp"/>
     			 
		</action>
      
      
      
      
<!-- YYYYYYYYYYYYYYYYYYY -->  


      <!-- Choose Execution Year To Create a Guide -->
      <action path="/chooseExecutionYearToCreateGuide"
      		  input="/chooseExecutionYear.jsp"
		      attribute="chooseExecutionYearForm"
		      name="chooseExecutionYearForm"
		      parameter="method"
		      scope="request"
              type="ServidorApresentacao.Action.commons.ChooseExecutionYearDispatchAction"
			  >
	         <forward name="PrepareSuccess" path="/guide/chooseExecutionYearToCreateGuide.jsp"/>  
	         <forward name="ChooseSuccess" path="/createGuideDispatchAction.do?method=prepare&amp;page=0"/> 
      </action>

      <!-- Print Guide -->
      <action path="/printGuide"
		      parameter="method"
              type="ServidorApresentacao.Action.masterDegree.administrativeOffice.guide.PrintGuideDispatchAction"
			  >
	         <forward name="PrintReady" path="/guide/printGuide.jsp"/> 
	         <forward name="PrintOneGuide" path="/guide/guideTemplate1.jsp"/> 
      </action>
      
      
      <!-- Print Declaration -->
      <action path="/printDeclaration"
		      parameter="method"
              type="ServidorApresentacao.Action.certificate.PrintDeclarationDispatchAction"
			  >
			<exception type="ServidorApresentacao.Action.exceptions.NonExistingActionException"
            key="ServidorApresentacao.Action.exceptions.NonExistingActionException"
            handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
	         <forward name="PrintReady" path="/certificate/printDeclarationPage.jsp"/> 
      </action>

	  <!-- Print Declaration -->
      <action path="/printCertificate"
		      attribute="chooseCertificateInfoForm"
	          name="chooseCertificateInfoForm"
	          input="/certificate/chooseCertificate.jsp"
	      	  validate="true"
		      parameter="method"
  	          scope="request"
              type="ServidorApresentacao.Action.certificate.PrintCertificateDispatchAction"
			  >
			<exception type="ServidorApresentacao.Action.exceptions.NonExistingActionException"
            key="ServidorApresentacao.Action.exceptions.NonExistingActionException"
            handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
	         <forward name="PrintReady" path="/certificate/printCertificatePage.jsp"/> 
	         <forward name="insucesso" path="/chooseCertificateInfoAction.do?method=prepare"/> 
	         
      </action>
      
      <!-- Action to prepare the chooseCertificateInfoForm -->
      <action path="/chooseCertificateInfoAction"
	     attribute="chooseCertificateInfoForm"
	          name="chooseCertificateInfoForm"
	          input="/certificate/chooseCertificate.jsp"
	      	  validate="true"
		      parameter="method"
  	          scope="request"
      	      type="ServidorApresentacao.Action.certificate.ChooseCertificateInfoAction">
   		 <exception type="ServidorApresentacao.Action.exceptions.NonExistingActionException"
            key="ServidorApresentacao.Action.exceptions.NonExistingActionException"
            handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
      	  <forward name="PrepareReady" path="/certificate/chooseCertificate.jsp"/>
      	  <forward name="ChooseSuccess" path="/printCertificate.do?method=prepare"/>     	  
      </action>

		<!-- Action to prepare the chooseCertificateInfoForm -->
      <action path="/chooseDeclarationInfoAction"
	          attribute="chooseCertificateInfoForm"
	          name="chooseCertificateInfoForm"
	          input="/certificate/chooseDeclaration.jsp"
	      	  validate="true"
			  parameter="method"
  	          scope="request"
      	      type="ServidorApresentacao.Action.certificate.ChooseDeclarationInfoAction">
   		 <exception type="ServidorApresentacao.Action.exceptions.NonExistingActionException"
            key="ServidorApresentacao.Action.exceptions.NonExistingActionException"
            handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
      	 <forward name="PrepareReady" path="/certificate/chooseDeclaration.jsp"/>
   		 <forward name="ChooseSuccess" path="/printDeclaration.do?method=prepare"/>
      </action>
      
      	<!-- Action to prepare the chooseFinalResultInfoForm -->
      <action path="/chooseFinalResultInfoAction"
	          attribute="chooseCertificateInfoForm"
	          name="chooseCertificateInfoForm"
	          input="/certificate/chooseFinalResult.jsp"
	      	  validate="true"
			  parameter="method"
  	          scope="request"
      	      type="ServidorApresentacao.Action.certificate.ChooseFinalResultInfoAction">
   		 <exception type="ServidorApresentacao.Action.exceptions.NonExistingActionException"
            key="ServidorApresentacao.Action.exceptions.NonExistingActionException"
            handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
         <exception type="ServidorApresentacao.Action.exceptions.FinalResulUnreachedActionException"
            key="ServidorApresentacao.Action.exceptions.FinalResulUnreachedActionException"
            handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
      	 <forward name="PrepareReady" path="/certificate/chooseFinalResult.jsp"/>
   		 <forward name="ChooseSuccess" path="/certificate/finalResultPage.jsp"/>
      </action>
    
      <!-- Choose Execution Year To Manage Marks -->
      <action path="/chooseExecutionYearToManageMarks"
      		  input="chooseExecutionYear.jsp"
		      attribute="chooseExecutionYearForm"
		      parameter="method"
              type="ServidorApresentacao.Action.commons.ChooseExecutionYearDispatchAction"
			  >
	         <forward name="PrepareSuccess" path="/marksManagement/chooseExecutionYearToManageMarks.jsp"/>  
	         <forward name="ChooseSuccess" path="/chooseMasterDegreeToManageMarks.do?method=prepareChooseMasterDegree"/> 
      </action>

      <!-- Choose Master Degree To Manage Marks -->
      <action path="/chooseMasterDegreeToManageMarks"
      		  input="/marksManagement/chooseMasterDegreeToManageMarks.jsp"
		      attribute="chooseMasterDegreeForm"
		      parameter="method"
              type="ServidorApresentacao.Action.commons.ChooseMasterDegreeDispatchAction"
			  >
	         <forward name="PrepareSuccess" path="/marksManagement/chooseMasterDegreeToManageMarks.jsp"/>  
	         <forward name="ChooseSuccess" 
				path="/chooseCurricularCourseToManageMarks.do?method=prepareChooseCurricularCourse"/>
      </action>

      <!-- Choose CurricularCourse To Manage Marks -->
      <action path="/chooseCurricularCourseToManageMarks"
      		  input="/marksManagement/chooseCurricularCourseToManageMarks.jsp"
		      parameter="method"
              type="ServidorApresentacao.Action.commons.ChooseCurricularCourseDispatchAction"
			  >
	         <forward name="PrepareSuccess" path="/marksManagement/chooseCurricularCourseToManageMarks.jsp"/>  
	         <forward name="ChooseSuccess" path="/marksManagement/showMarksManagementMenu.jsp"/> 
   	         <forward name="NotAuthorized" path="/student/notAuthorized.jsp"/> 
   	         <forward name="NoStudents" path="/chooseCurricularCourseToManageMarks.do?method=prepareChooseCurricularCourse"/> 
      </action>
      
      <action path="/changeMarkDispatchAction"
      		  input="/changeMarkDispatchAction.do?method=chooseStudentMarks"
      	      name="studentNumberForm"
		      parameter="method"
		      scope="request"
              type="ServidorApresentacao.Action.masterDegree.administrativeOffice.marksManagement.ChangeMarkDispatchAction"
              validate="true">
     		 <exception type="ServidorApresentacao.Action.exceptions.FenixActionException"
		                key="ServidorApresentacao.Action.exceptions.FenixActionException"
                        handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
	         <forward name="editStudentNumber" path="/marksManagement/editMarkStudent.jsp"/> 
	         <forward name="changeStudentMark" path="/marksManagement/showMarksManagementMenu.jsp"/>
			 <forward name="studentMarks" path="/marksManagement/showStudentMarks.jsp"/> 
			 <forward name="editStudentMark" path="/marksManagement/editStudentMark.jsp"/> 
			 <forward name="chooseCurricularCourse" path="/marksManagement/chooseCurricularCourseToManageMarks.jsp"/>
     		 <forward name="NotAuthorized" path="/student/notAuthorized.jsp"/>
     		 <forward name="showMarkNotAvailable" path="/showMarkDispatchAction.do?method=prepareShowMark"/>
     		 <forward name="NoStudents" path="/marksManagement/showMarksManagementMenu.jsp"/> 
     		 <forward name="chooseStudentMarks" path="/changeMarkDispatchAction.do?method=chooseStudentMarks"/>
     		 
     		 
      </action>
      
      <action path="/showMarkDispatchAction"
      		  input="/marksManagement/showMarksManagementMenu.jsp"
      	      name="studentNumberForm"
		      parameter="method"
		      scope="request"
              type="ServidorApresentacao.Action.masterDegree.administrativeOffice.marksManagement.ShowMarkDispatchAction"
              validate="true">
     		 <exception type="ServidorApresentacao.Action.exceptions.FenixActionException"
		                key="ServidorApresentacao.Action.exceptions.FenixActionException"
                        handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
	         <forward name="displayStudentList" path="/marksManagement/displayStudentList.jsp"/> 
	         <forward name="NoStudents" path="/marksManagement/showMarksManagementMenu.jsp"/>  
      		 <forward name="NotAuthorized" path="/student/notAuthorized.jsp"/> 
      		 
      </action>
      
      <action path="/marksSubmission"
      		  input="/marksSubmission.do?method=prepare&amp;page=0"
      	      name="marksSubmissionForm"
		      parameter="method"
		      scope="request"
              type="ServidorApresentacao.Action.masterDegree.administrativeOffice.marksManagement.SubmitMarksAction"
              validate="true">
              
              <exception type="ServidorApresentacao.Action.exceptions.NonExistingActionException"
         	  	key="ServidorApresentacao.Action.exceptions.NonExistingActionException"
               	handler="ServidorApresentacao.config.FenixErrorExceptionHandler"
               />       
	         <forward name="MarksSubmission" path="/marksManagement/marksSubmission.jsp"/> 
	         <forward name="ShowMarksManagementMenu" path="/marksManagement/showMarksManagementMenu.jsp"/> 	         
      </action>
      <action path="/marksConfirmation"
      		  input="/marksManagement/marksConfirmationMenu.jsp"
      	      name="marksSubmissionForm"
		      parameter="method"
		      scope="request"
              type="ServidorApresentacao.Action.masterDegree.administrativeOffice.marksManagement.ConfirmMarksAction"
              validate="false">
              
	         <forward name="MarksConfirmationMenu" path="/marksManagement/marksConfirmationMenu.jsp"/> 
	         <forward name="MarksConfirmation" path="/marksManagement/marksConfirmation.jsp"/> 
	         <forward name="MarksPrint" path="/marksManagement/marksPrint.jsp"/> 
	         <forward name="ShowMarksManagementMenu" path="/marksManagement/showMarksManagementMenu.jsp"/> 	         
      </action>
      
      
	  <action path="/studentGratuity"
		      parameter="method"
              type="ServidorApresentacao.Action.commons.VoidAction"
			  >
	         <forward name="Success" path="/student/chooseStudent.jsp"/> 
      </action>
      
       <action path="/chooseStudent"
      		  input="/student/chooseStudent.jsp"
      	      name="chooseStudentForm"
		      parameter="method"
		      scope="request"
              type="ServidorApresentacao.Action.masterDegree.commons.student.ChooseStudentDispatchAction"
              validate="false">
     		 <exception type="ServidorApresentacao.Action.exceptions.NonExistingActionException"
		                key="ServidorApresentacao.Action.exceptions.NonExistingActionException"
                        handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
              
	         <forward name="ShowCurricularPlans" path="/student/showCurricularPlans.jsp"/> 
	         <forward name="StudentCurricularPlanChosen" path="/gratuityOperations.do?method=getInformation&amp;page=0"/> 
      </action>
       
      
      
      
        <action path="/gratuityOperations"
      		  input="/student/chooseStudent.jsp"
      	      name="chooseStudentForm"
		      parameter="method"
		      scope="request"
              type="ServidorApresentacao.Action.masterDegree.administrativeOffice.student.GratuityOperationsDispatchAction"
              validate="false">
     		 <exception type="ServidorApresentacao.Action.exceptions.NonExistingActionException"
		                key="ServidorApresentacao.Action.exceptions.NonExistingActionException"
                        handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
              
	         <forward name="ShowGratuityInformation" path="/gratuityChange.do?method=prepareChange&amp;page=0"/> 
      </action>
      
      
        <action path="/gratuityChange"
      		  input="/gratuityChange.do?method=getInformation&amp;page=0"
      	      name="gratuityChangeForm"
		      parameter="method"
		      scope="request"
              type="ServidorApresentacao.Action.masterDegree.administrativeOffice.student.GratuityOperationsDispatchAction"
              validate="true">
     		 <exception type="ServidorApresentacao.Action.exceptions.NonExistingActionException"
		                key="ServidorApresentacao.Action.exceptions.NonExistingActionException"
                        handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
     		 <exception type="ServidorApresentacao.Action.exceptions.InvalidChangeActionException"
		                key="ServidorApresentacao.Action.exceptions.InvalidChangeActionException"
                        handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
              
	         <forward name="ShowGratuityInformationReady" path="/student/showGratuityInformation.jsp"/> 
	         <forward name="ShowGratuityInformation" path="/gratuityChange.do?method=prepareChange&amp;page=0"/> 	         
	         <forward name="ChangeSuccess" path="/student/gratuityChangeSuccess.jsp"/> 	         
	         
      </action>
      
      <!-- Choose Execution Year to Register Candidates -->
      <action path="/chooseExecutionYearToCandidateRegistration"
      		  input="/chooseExecutionYear.jsp"
		      attribute="chooseExecutionYearForm"
		      parameter="method"
              type="ServidorApresentacao.Action.commons.ChooseExecutionYearDispatchAction"
			  >
	         <forward name="PrepareSuccess" path="/marksManagement/chooseExecutionYearToManageMarks.jsp"/>  
	         <forward name="ChooseSuccess" path="/chooseMasterDegreeToCandidateRegistration.do?method=prepareChooseMasterDegree"/> 
      </action>
      
      
      

      <!-- Choose Master Degree To Candidate Registration -->
      <action path="/chooseMasterDegreeToCandidateRegistration"
      		  input="/candidate/chooseMasterDegreeToSelectCandidates.jsp"
		      attribute="chooseMasterDegreeForm"
		      parameter="method"
              type="ServidorApresentacao.Action.commons.ChooseMasterDegreeDispatchAction"
			  >
	         <forward name="PrepareSuccess" path="/candidate/chooseMasterDegreeToSelectCandidates.jsp"/>  
	         <forward name="ChooseSuccess"  path="/candidateRegistration.do?method=getCandidateList"/>
      </action>


        <action path="/candidateRegistration"
      		  input="/candidate/chooseMasterDegreeToSelectCandidates.jsp"
      	      name="candidateRegistrationForm"
		      parameter="method"
		      scope="session"
              type="ServidorApresentacao.Action.masterDegree.administrativeOffice.candidate.CandidateRegistrationDispatchAction">

			<exception type="ServidorApresentacao.Action.exceptions.InvalidChangeActionException"
		                key="ServidorApresentacao.Action.exceptions.InvalidChangeActionException"
                        handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
			<exception type="ServidorApresentacao.Action.exceptions.ExistingActionException"
		                key="ServidorApresentacao.Action.exceptions.ExistingActionException"
                        handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
			<exception type="ServidorApresentacao.Action.exceptions.ActiveStudentCurricularPlanAlreadyExistsActionException"
		                key="ServidorApresentacao.Action.exceptions.ActiveStudentCurricularPlanAlreadyExistsActionException"
                        handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
            <exception type="ServidorApresentacao.Action.exceptions.InvalidStudentNumberActionException"
			            key="ServidorApresentacao.Action.exceptions.InvalidStudentNumberActionException"
			            handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
	         <forward name="ListCandidates" path="/candidate/displayCandidateListForRegistration.jsp"/> 
	         <forward name="ShowConfirmation" path="/candidate/confirmCandidateRegistration.jsp"/> 
	         <forward name="PrepareCandidateList"  path="/candidateRegistration.do?method=getCandidateList"/>
	         <forward name="ShowResult" path="/candidate/candidateRegistered.jsp"/> 
	         <forward name="Print" path="/candidate/candidateRegistrationTemplatePrint.jsp"/> 
	         
      </action>

        <action path="/candidateRegistrationConfirmation"
      		  input="/candidate/confirmCandidateRegistration.jsp"
      	      name="candidateRegistrationForm"
		      parameter="method"
		      scope="session"
              type="ServidorApresentacao.Action.masterDegree.administrativeOffice.candidate.CandidateRegistrationDispatchAction">

			<exception type="ServidorApresentacao.Action.exceptions.InvalidInformationInFormActionException"
		                key="ServidorApresentacao.Action.exceptions.InvalidInformationInFormActionException"
                        handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
			<exception type="ServidorApresentacao.Action.exceptions.InvalidChangeActionException"
		                key="ServidorApresentacao.Action.exceptions.InvalidChangeActionException"
                        handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
			<exception type="ServidorApresentacao.Action.exceptions.ExistingActionException"
		                key="ServidorApresentacao.Action.exceptions.ExistingActionException"
                        handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
			<exception type="ServidorApresentacao.Action.exceptions.ActiveStudentCurricularPlanAlreadyExistsActionException"
		                key="ServidorApresentacao.Action.exceptions.ActiveStudentCurricularPlanAlreadyExistsActionException"
                        handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
            <exception type="ServidorApresentacao.Action.exceptions.InvalidStudentNumberActionException"
			            key="ServidorApresentacao.Action.exceptions.InvalidStudentNumberActionException"
			            handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
	         <forward name="ListCandidates" path="/candidate/displayCandidateListForRegistration.jsp"/> 
	         <forward name="ShowConfirmation" path="/candidate/confirmCandidateRegistration.jsp"/> 
	         <forward name="PrepareCandidateList"  path="/candidateRegistration.do?method=getCandidateList"/>
	         <forward name="ShowResult" path="/candidate/candidateRegistered.jsp"/> 
	         <forward name="Print" path="/candidate/candidateRegistrationTemplate.jsp"/> 
	         
      </action>
  
	<!-- visualize Student Informations -->
      
 	  
	  <action path="/chooseStudentToVisualizeInformations"
      	      name="changePersonalInfoForm"
      		  parameter="method"
      		  scope="request"
              type="ServidorApresentacao.Action.masterDegree.administrativeOffice.student.ReadPersonInfoOfStudentsAction"
			  >
	         <forward name="Success" path="/student/visualizePersonalStudentInfo.jsp"/> 
      </action>
      
      <action path="/editStudentToVisualizeInformations"
      	      name="changePersonalInfoForm"
      		  parameter="method"
      		  scope="request"
              type="ServidorApresentacao.Action.masterDegree.administrativeOffice.student.ReadPersonInfoOfStudentsAction"
			  >
	         <forward name="Success" path="/student/editStudentInfo.jsp"/> 
      </action>
	<!-- end visualize student informations -->
	
	<!-- edit student informations -->
	  <action path="/editStudentInfo"
	  		  input="/editStudentToVisualizeInformations.do?method=execute&amp;page=0"
      	      name="changePersonalInfoForm"     
		      parameter="method"
		      scope="request"
              type="ServidorApresentacao.Action.masterDegree.administrativeOffice.student.EditStudentInfoDispatchAction"
              validate="true">
     		 <exception type="ServidorApresentacao.Action.exceptions.FenixActionException"
		                key="ServidorApresentacao.Action.exceptions.FenixActionException"
                        handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/> 
	         <forward name="Success" path="/student/visualizePersonalStudentInfo.jsp"/>  
       </action>
      <!-- end of edit student information -->
		<action	name="seeStudentAndCurricularPlansForm"
				type="ServidorApresentacao.Action.masterDegree.administrativeOffice.student.studentCurricularPlan.SeeStudentAndCurricularPlansDispatchAction"
				path="/seeStudentAndCurricularPlans"
				parameter="method"
				scope="request"
				input="/seeStudentAndCurricularPlans.do?method=start"
				validate="false">
			<forward name="start" path="df.page.searchStudents"/>
			<forward name="viewStudents" path="df.page.viewStudents"/>
		</action>
		<action	type="ServidorApresentacao.Action.masterDegree.administrativeOffice.student.studentCurricularPlan.SeeStudentCurricularPlansAction"
				path="/seeStudentCurricularPlans"
				scope="request"
				validate="false">
			<forward name="viewStudentCurricularPlans" path="df.page.viewStudentCurricularPlans"/>
		</action>
		
	  <action	type="ServidorApresentacao.Action.masterDegree.administrativeOffice.student.studentCurricularPlan.ShowStudentCurricularCoursePlanAction"
				path="/showStudentCurricularCoursePlan"
				scope="request">
			<forward name="ShowStudentCurricularCoursePlan" path="df.page.showStudentCurricularCoursePlan"/>
	 </action>	
	 	 
  	 <action	name="chooseGuideStateForm"
				type="ServidorApresentacao.Action.masterDegree.administrativeOffice.guide.GuideListingByStateDispatchAction"
				path="/guideListingByState"
				parameter="method"
				scope="request"
				input="/guideListingByState.do?method=prepareChooseState&amp;page=0"
				validate="true">
			<forward name="PrepareSuccess" path="df.page.searchGuideByState"/>
			<forward name="ShowList" path="df.page.showSearchGuideListResult"/>
	</action>
	<action  type="ServidorApresentacao.Action.masterDegree.administrativeOffice.student.studentCurricularPlan.EditStudentCurricularCoursePlan"
	 		 path="/editStudentCurricularPlan"		 
	 		 parameter="method"
	 		 name="studentCurricularPlanForm" 
	 		 scope="request"
	 		 validate="false" >
	 		<forward name="editStudentCurricularCoursePlan" path="df.page.editStudentCurricularCoursePlan"/>
			<forward name="ShowStudentCurricularCoursePlan" path="/showStudentCurricularCoursePlan.do"/>					
	 </action>
	 <action  type="ServidorApresentacao.Action.masterDegree.administrativeOffice.student.studentCurricularPlan.EditStudentCurricularCoursePlan"
	 		 path="/alterStudentCurricularPlan"		 
	 		 parameter="method"
	 		 name="studentCurricularPlanForm" 
	 		 scope="request"
	 		 validate="true" 
	 		 input="/editStudentCurricularPlan.do?method=prepare">
	 		<forward name="editStudentCurricularCoursePlan" path="df.page.editStudentCurricularCoursePlan"/>
	 		<forward name="ShowStudentCurricularCoursePlan" path="/showStudentCurricularCoursePlan.do"/>
	 </action>

	<!-- create master degree thesis -->
	<action		name="createMasterDegreeThesisForm"
				type="ServidorApresentacao.Action.masterDegree.administrativeOffice.thesis.CreateMasterDegreeThesisDispatchAction"
				path="/createMasterDegreeThesis"
				parameter="method"
				scope="request"
				validate="false">
			<exception	type="ServidorApresentacao.Action.exceptions.NonExistingActionException"
						key="ServidorApresentacao.Action.exceptions.NonExistingActionException"
						handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
			<forward name="start" path="/thesis/createMasterDegreeThesis.jsp"/>
			<forward name="error" path="/thesis/chooseStudentForMasterDegreeThesisAndProof.jsp"/>
	</action>
	
	<action		name="createMasterDegreeThesisForm"
				type="ServidorApresentacao.Action.masterDegree.administrativeOffice.thesis.CreateMasterDegreeThesisLookupDispatchAction"
				path="/createMasterDegreeThesisLookup"
				parameter="method"
				scope="request"
				input="/createMasterDegreeThesis.do?page=0&amp;method=reloadForm"
				validate="true">
			<exception	type="ServidorApresentacao.Action.exceptions.NonExistingActionException"
						key="ServidorApresentacao.Action.exceptions.NonExistingActionException"
						handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
			<exception	type="ServidorApresentacao.Action.exceptions.ExistingActionException"
						key="ServidorApresentacao.Action.exceptions.ExistingActionException"
						handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
			<exception	type="ServidorApresentacao.Action.exceptions.RequiredGuidersActionException"
						key="ServidorApresentacao.Action.exceptions.RequiredGuidersActionException"
						handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>	
			<exception	type="ServidorApresentacao.Action.exceptions.GuiderAlreadyChosenActionException"
						key="ServidorApresentacao.Action.exceptions.GuiderAlreadyChosenActionException"
						handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>											
			<forward name="start" path="/thesis/createMasterDegreeThesis.jsp"/>
			<forward name="success" path="/thesis/createSuccessScreen.jsp"/>
			<forward name="cancel" path="/thesis/indexThesis.jsp"/>
			<forward name="createThesisCancel" path="/thesis/indexCreateThesis.jsp"/>			
			<forward name="error" path="/thesis/chooseStudentForMasterDegreeThesisAndProof.jsp"/>
	</action>

	<!-- change master degree thesis -->
	<action		name="changeMasterDegreeThesisForm"
				type="ServidorApresentacao.Action.masterDegree.administrativeOffice.thesis.ChangeMasterDegreeThesisDispatchAction"
				path="/changeMasterDegreeThesis"
				parameter="method"
				scope="request"
				validate="false">
			<exception	type="ServidorApresentacao.Action.exceptions.NonExistingActionException"
						key="ServidorApresentacao.Action.exceptions.NonExistingActionException"
						handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
			<forward name="start" path="/thesis/changeMasterDegreeThesis.jsp"/>
			<forward name="error" path="/thesis/chooseStudentForMasterDegreeThesisAndProof.jsp"/>
	</action>

	<action		name="changeMasterDegreeThesisForm"
				type="ServidorApresentacao.Action.masterDegree.administrativeOffice.thesis.ChangeMasterDegreeThesisLookupDispatchAction"
				path="/changeMasterDegreeThesisLookup"
				parameter="method"
				scope="request"
				input="/changeMasterDegreeThesis.do?page=0&amp;method=reloadForm"
				validate="true">
			<exception	type="ServidorApresentacao.Action.exceptions.NonExistingActionException"
						key="ServidorApresentacao.Action.exceptions.NonExistingActionException"
						handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
			<exception	type="ServidorApresentacao.Action.exceptions.ExistingActionException"
						key="ServidorApresentacao.Action.exceptions.ExistingActionException"
						handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
			<exception	type="ServidorApresentacao.Action.exceptions.RequiredGuidersActionException"
						key="ServidorApresentacao.Action.exceptions.RequiredGuidersActionException"
						handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>	
			<exception	type="ServidorApresentacao.Action.exceptions.GuiderAlreadyChosenActionException"
						key="ServidorApresentacao.Action.exceptions.GuiderAlreadyChosenActionException"
						handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>											
			<forward name="start" path="/thesis/changeMasterDegreeThesis.jsp"/>
			<forward name="success" path="/thesis/changeSuccessScreen.jsp"/>
			<forward name="cancel" path="/thesis/indexThesis.jsp"/>
			<forward name="changeThesisCancel" path="/thesis/indexChangeThesis.jsp"/>			
			<forward name="error" path="/thesis/chooseStudentForMasterDegreeThesisAndProof.jsp"/>
	</action>
	
	<!-- visualize master degree thesis -->
	<action		type="ServidorApresentacao.Action.masterDegree.administrativeOffice.thesis.VisualizeMasterDegreeThesisDispatchAction"
				path="/visualizeMasterDegreeThesis"
				parameter="method"
				scope="request">
			<exception	type="ServidorApresentacao.Action.exceptions.NonExistingActionException"
						key="ServidorApresentacao.Action.exceptions.NonExistingActionException"
						handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
			<forward name="start" path="/thesis/visualizeMasterDegreeThesis.jsp"/>
			<forward name="error" path="/thesis/chooseStudentForMasterDegreeThesisAndProof.jsp"/>
	</action>
	
	<!-- visualize master degree thesis history -->
	<action		type="ServidorApresentacao.Action.masterDegree.administrativeOffice.thesis.VisualizeMasterDegreeThesisHistoryDispatchAction"
				path="/visualizeMasterDegreeThesisHistory"
				parameter="method"
				scope="request">
			<exception	type="ServidorApresentacao.Action.exceptions.NonExistingActionException"
						key="ServidorApresentacao.Action.exceptions.NonExistingActionException"
						handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
			<forward name="start" path="/thesis/visualizeMasterDegreeThesisHistory.jsp"/>
			<forward name="error" path="/thesis/chooseStudentForMasterDegreeThesisAndProof.jsp"/>
	</action>
	
	<!-- change master degree proof -->
	<action		name="changeMasterDegreeProofForm"
				type="ServidorApresentacao.Action.masterDegree.administrativeOffice.thesis.ChangeMasterDegreeProofDispatchAction"
				path="/changeMasterDegreeProof"
				parameter="method"
				scope="request"
				validate="false">
			<exception	type="ServidorApresentacao.Action.exceptions.NonExistingActionException"
						key="ServidorApresentacao.Action.exceptions.NonExistingActionException"
						handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
			<exception	type="ServidorApresentacao.Action.exceptions.ScholarshipNotFinishedActionException"
						key="ServidorApresentacao.Action.exceptions.ScholarshipNotFinishedActionException"
						handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
			<forward name="start" path="/thesis/changeMasterDegreeProof.jsp"/>
			<forward name="error" path="/thesis/chooseStudentForMasterDegreeThesisAndProof.jsp"/>
			<forward name="errorScholarshipNotFinished" path="/thesis/indexThesis.jsp"/>
	</action>

	<action		name="changeMasterDegreeProofForm"
				type="ServidorApresentacao.Action.masterDegree.administrativeOffice.thesis.ChangeMasterDegreeProofLookupDispatchAction"
				path="/changeMasterDegreeProofLookup"
				parameter="method"
				scope="request"
				input="/changeMasterDegreeProof.do?page=0&amp;method=reloadForm"
				validate="true">
			<exception	type="ServidorApresentacao.Action.exceptions.NonExistingActionException"
						key="ServidorApresentacao.Action.exceptions.NonExistingActionException"
						handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
			<exception	type="ServidorApresentacao.Action.exceptions.ExistingActionException"
						key="ServidorApresentacao.Action.exceptions.ExistingActionException"
						handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
			<exception	type="ServidorApresentacao.Action.exceptions.RequiredJuriesActionException"
						key="ServidorApresentacao.Action.exceptions.RequiredJuriesActionException"
						handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
			<exception	type="ServidorApresentacao.Action.exceptions.ScholarshipNotFinishedActionException"
						key="ServidorApresentacao.Action.exceptions.ScholarshipNotFinishedActionException"
						handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
			<forward name="start" path="/thesis/changeMasterDegreeProof.jsp"/>
			<forward name="success" path="/thesis/changeProofSuccessScreen.jsp"/>
			<forward name="cancel" path="/thesis/indexThesis.jsp"/>					
			<forward name="error" path="/thesis/chooseStudentForMasterDegreeThesisAndProof.jsp"/>			
	</action>
	
	<!-- visualize master degree proof -->
	<action		type="ServidorApresentacao.Action.masterDegree.administrativeOffice.thesis.VisualizeMasterDegreeProofDispatchAction"
				path="/visualizeMasterDegreeProof"
				parameter="method"
				scope="request">
			<exception	type="ServidorApresentacao.Action.exceptions.NonExistingActionException"
						key="ServidorApresentacao.Action.exceptions.NonExistingActionException"
						handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
			<exception	type="ServidorApresentacao.Action.exceptions.ScholarshipNotFinishedActionException"
						key="ServidorApresentacao.Action.exceptions.ScholarshipNotFinishedActionException"
						handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
			<forward name="start" path="/thesis/visualizeMasterDegreeProof.jsp"/>
			<forward name="error" path="/thesis/chooseStudentForMasterDegreeThesisAndProof.jsp"/>
			<forward name="errorScholarshipNotFinished" path="/thesis/indexThesis.jsp"/>
			<forward name="errorNonExistingProofVersion" path="/thesis/indexThesis.jsp"/>
	</action>	

	<!-- visualize master degree proof history -->
	<action		type="ServidorApresentacao.Action.masterDegree.administrativeOffice.thesis.VisualizeMasterDegreeProofHistoryDispatchAction"
				path="/visualizeMasterDegreeProofHistory"
				parameter="method"
				scope="request">
			<exception	type="ServidorApresentacao.Action.exceptions.NonExistingActionException"
						key="ServidorApresentacao.Action.exceptions.NonExistingActionException"
						handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
			<forward name="start" path="/thesis/visualizeMasterDegreeProofHistory.jsp"/>
			<forward name="error" path="/thesis/chooseStudentForMasterDegreeThesisAndProof.jsp"/>
			<forward name="errorNonExistingProofVersion" path="/thesis/indexThesis.jsp"/>
	</action>	
	
	<!-- insert external person -->
	<action		name="insertExternalPersonForm"
				type="ServidorApresentacao.Action.masterDegree.administrativeOffice.externalPerson.InsertExternalPersonDispatchAction"
				path="/insertExternalPerson"
				input="/insertExternalPerson.do?page=0&amp;method=prepare"
				parameter="method"
				scope="request">
			<exception	type="ServidorApresentacao.Action.exceptions.ExistingActionException"
						key="ServidorApresentacao.Action.exceptions.ExistingActionException"
						handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
			<forward name="start" path="df.page.insertExternalPerson"/>
			<forward name="error" path="df.page.insertExternalPerson_Error"/>
			<forward name="success" path="df.page.insertExternalPerson_Success"/>			
	</action>	
	
	
	
	<!-- insert work location -->
	<action		name="insertWorkLocationForm"
				type="ServidorApresentacao.Action.masterDegree.administrativeOffice.externalPerson.workLocation.InsertWorkLocationDispatchAction"
				path="/insertWorkLocation"
				parameter="method"
				scope="request"
				input="df.page.insertWorkLocation"
				validate="true">
		<exception	type="ServidorApresentacao.Action.exceptions.ExistingActionException"
					key="ServidorApresentacao.Action.exceptions.ExistingActionException"
					handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
		<forward name="error" path="df.page.insertWorkLocation" />
		<forward name="success" path="df.page.insertWorkLocation_success" />
		<forward name="start" path="df.page.insertWorkLocation" />
    </action>
    
    <!-- edit work location -->
    <action		name="editWorkLocationForm"
				type="ServidorApresentacao.Action.masterDegree.administrativeOffice.externalPerson.workLocation.EditWorkLocationDispatchAction"
				path="/editWorkLocation"
				parameter="method"
				scope="request"
				input="/editWorkLocation.do?page=0&amp;method=prepare"
				validate="true">
		<exception	type="ServidorApresentacao.Action.exceptions.ExistingActionException"
					key="ServidorApresentacao.Action.exceptions.ExistingActionException"
					handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
		<forward name="error" path="df.page.editWorkLocation" />
		<forward name="success" path="df.page.editWorkLocation_success" />
		<forward name="start" path="df.page.editWorkLocation" />
    </action>	
	
	<action type="ServidorApresentacao.Action.masterDegree.administrativeOffice.guide.reimbursementGuide.ReimbursementGuideDispatchAction"
			name="createReimbursementGuide"
			path="/reimbursementGuideDA"
			parameter="method"
			scope="request"	
	>
	<forward name="createReimbursementGuide" path="df.page.createReimbursementGuide"/>
	<forward name="viewReimbursementGuide" path="df.page.viewReimbursementGuide"/>
	<forward name="viewGuide" path="/chooseGuideDispatchAction.do?method=choose"/>  
	</action>
    </action-mappings>
    
    <!-- ========== Controller Configuration ================================ -->
	<controller processorClass="ServidorApresentacao.processor.FenixRequestProcessorWithTiles"/>
    
    <!-- ========== Message Resources Definitions ============================ -->
     <message-resources parameter="ServidorApresentacao.ApplicationResources" null="false"/>   

    <!-- ========== Plug Ins Configuration ================================= -->
    <plug-in className="org.apache.struts.validator.ValidatorPlugIn">
      <set-property property="pathnames" 
             value="/WEB-INF/validator-rules.xml,/WEB-INF/fenix-validator-rules.xml,/WEB-INF/conf/validation-masterDegreeAdministrativeOffice.xml"/>
    </plug-in>
    <plug-in className="org.apache.struts.tiles.TilesPlugin">
		<set-property property="definitions-config" 
		     value="/WEB-INF/tiles/layouts/tiles-layout-definitions.xml,/WEB-INF/tiles/masterDegreeAdministrativeOffice/tiles-masterDegreeAdministrativeOffice-definitions.xml,/WEB-INF/tiles/masterDegreeAdministrativeOffice/tiles-masterDegreeAdministrativeOffice-pages-definitions.xml"/>
		<set-property property="moduleAware"
   			value="true"/>
		<set-property property="definitions-parser-validate" 
			value="true"/>
	</plug-in>
    
</struts-config>

