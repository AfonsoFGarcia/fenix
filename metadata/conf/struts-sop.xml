<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE struts-config PUBLIC 
      "-//Apache Software Foundation//DTD Struts Configuration 1.1//EN"
      "http://jakarta.apache.org/struts/dtds/struts-config_1_1.dtd">
<struts-config>
    
    <!-- ========== Data Source Configuration =============================== -->

    
    <!-- ========== Form Bean Definitions ================================== -->
    <form-beans type="org.apache.struts.action.ActionFormBean">
      <!-- AUTORIZACAO -->
      <!-- Dynamic-FormBean para Autorizacao -->
      <form-bean name="autenticacaoSOPForm" 
                 type="org.apache.struts.validator.DynaValidatorForm"
                 dynamic="true">
        <form-property name="utilizador" type="java.lang.String" />
        <form-property name="password" type="java.lang.String" />
      </form-bean>
		<!-- ERROR HANDLING  -->
      <!-- Dynamic-FormBean for Error handling -->
      <form-bean name="errorMailForm" 
                 type="org.apache.struts.validator.DynaValidatorForm"
                 dynamic="true">
        <form-property name="email" type="java.lang.String" />
        <form-property name="subject" type="java.lang.String" />
        <form-property name="body" type="java.lang.String" />
      </form-bean>
	  <!-- CONTEXTO -->
      <!-- Dynamic-FormBean para EscolherContexto -->
      <form-bean name="escolherContextoForm"
                 type="org.apache.struts.validator.DynaValidatorForm"
                 dynamic="true">
        <form-property name="index" type="java.lang.String"/>
        <form-property name="anoCurricular" type="java.lang.Integer"/>
        <!--        <form-property name="semestre" type="java.lang.Integer"/> -->
      </form-bean>

      <!-- Dynamic-FormBean for Choose Context-->
      <form-bean name="chooseContextForm"
                 type="ServidorApresentacao.validator.form.FenixDynaValidatorForm"
                 dynamic="true">
        <form-property name="index" type="java.lang.String"/>
        <form-property name="curricularYear" type="java.lang.Integer"/>
        <form-property name="page" type="java.lang.Integer"/> 
      </form-bean>



	  <!-- AULAS -->
      <!-- Dynamic-FormBean para CriarAula -->
      <form-bean name="aulaForm"
                 type="org.apache.struts.validator.DynaValidatorActionForm"
                 dynamic="true">
        <form-property name="diaSemana" type="java.lang.String"/>
        <form-property name="horaInicio" type="java.lang.String"/>
        <form-property name="minutosInicio" type="java.lang.String"/>
        <form-property name="horaFim" type="java.lang.String"/>
        <form-property name="minutosFim" type="java.lang.String"/>
        <form-property name="tipoAula" type="java.lang.String"/>
        <form-property name="courseInitials" type="java.lang.String"/>
        <form-property name="nomeSala" type="java.lang.String"/>
      </form-bean>

      <!-- Dynamic-FormBean para EscolherDisciplinaExecucao -->
      <form-bean name="chooseExecutionCourseForm"
                 type="ServidorApresentacao.validator.form.FenixDynaValidatorForm"
                 dynamic="true">
        <form-property name="courseInitials" type="java.lang.String"/>
      </form-bean>

      <!-- Dynamic-FormBean para ManipularAulas -->
      <form-bean name="manipularAulasForm"
                 type="org.apache.struts.validator.DynaValidatorForm"
                 dynamic="true">
        <form-property name="indexAula" type="java.lang.Integer"/>
      </form-bean>

	  <!-- SALAS -->
      <!-- Dynamic-FormBean para CriarSala -->
      <form-bean name="roomForm"
                type="org.apache.struts.validator.DynaValidatorForm"
                dynamic="true">
        <form-property name="name" type="java.lang.String"/>
        <form-property name="building" type="java.lang.String"/>
        <form-property name="floor" type="java.lang.String"/>
        <form-property name="type" type="java.lang.String"/>
        <form-property name="capacityNormal" type="java.lang.String"/>
        <form-property name="capacityExame" type="java.lang.String"/>
      </form-bean>

      <!-- Dynamic-FormBean para PesquisarSalas -->
      <form-bean name="posicaoFormBean"
                 type="org.apache.struts.validator.DynaValidatorForm"
                 dynamic="true">
        <form-property name="posicao" type="java.lang.Integer"/>
      </form-bean>

	  <form-bean name="salaFormBean"
                 type="DataBeans.InfoRoom"
                 dynamic="true">
      </form-bean>
      
      <form-bean name="indexForm"
                type="org.apache.struts.validator.DynaValidatorForm"
                dynamic="true">
        <form-property name="index" type="java.lang.Integer"/>
      </form-bean>

	  <form-bean name="searchEmptyRoomsForm"
                 type="ServidorApresentacao.validator.form.FenixDynaValidatorForm"
                 dynamic="true">
	        <form-property name="weekDay" type="java.lang.String"/>
	        <form-property name="startHour" type="java.lang.String"/>
	        <form-property name="endHour" type="java.lang.String"/>
	        <form-property name="startMinutes" type="java.lang.String"/>
			<form-property name="endMinutes" type="java.lang.String"/>	        	        
	        <form-property name="normalCapacity" type="java.lang.String"/>
	        <form-property name="page" type="java.lang.Integer"/>
	  </form-bean>

	  <!-- TURNOS -->
      <!-- Dynamic-FormBean para CriarTurno -->
      <form-bean name="criarTurnoForm"
                          type="org.apache.struts.validator.DynaValidatorForm"
                          dynamic="true">
        <form-property name="nome" type="java.lang.String"/>
        <form-property name="courseInitials" type="java.lang.String"/>
        <form-property name="tipoAula" type="java.lang.Integer"/>
        <form-property name="lotacao" type="java.lang.Integer"/>
      </form-bean>
      
      <form-bean name="shiftNameForm"
                type="org.apache.struts.validator.DynaValidatorForm"
                dynamic="true">
        <form-property name="name" type="java.lang.String"/>
      </form-bean>
      

      <!-- Dynamic-FormBean para EscolherDisciplinaETipo -->
      <form-bean name="escolherDisciplinaETipoForm"
                          type="org.apache.struts.validator.DynaValidatorForm"
                          dynamic="true">
        <form-property name="indexDisciplinaExecucao" type="java.lang.Integer"/>
      </form-bean>

      <!-- Dynamic-FormBean para ManipularTurnos -->
      <form-bean name="manipularTurnosForm"
                          type="org.apache.struts.validator.DynaValidatorForm"
                          dynamic="true">
        <form-property name="indexTurno" type="java.lang.Integer"/>
      </form-bean>

      <!-- Dynamic-FormBean para EditarTurno -->
      <form-bean name="editarTurnoForm"
                          type="org.apache.struts.validator.DynaValidatorForm"
                          dynamic="true">
        <form-property name="nome" type="java.lang.String"/>
        <form-property name="lotacao" type="java.lang.Integer"/>
      </form-bean>
      
      
      
      <!-- Dynamic-FormBean para Editar Aulas De Turno -->
      <form-bean name="editarAulasDeTurnoForm"
                          type="org.apache.struts.validator.DynaValidatorForm"
                          dynamic="true">
        <form-property name="indexAula" type="java.lang.Integer"/>
      </form-bean>

      <!-- Dynamic-FormBean para Adicionar Aulas De Turno -->
      <form-bean name="adicionarAulasForm"
                          type="org.apache.struts.validator.DynaValidatorForm"
                          dynamic="true">
        <form-property name="indexAula" type="java.lang.Integer"/>
      </form-bean>

	  <!-- TURMAS -->
	      <!-- Dynamic-FormBean para Criar Turma -->
     <form-bean name="classForm" type="ServidorApresentacao.validator.form.FenixDynaValidatorForm" dynamic="true">
        <form-property name="className" type="java.lang.String"/>
        <form-property name="method" type="java.lang.String" initial="createClass"/>
        <form-property name="page" type="java.lang.Integer" initial="0"/>        
      </form-bean>
      
	  <!-- ========== EXAMS ========== -->
      <!-- Dynamic-FormBean para Day And Shift Context -->
     <form-bean name="chooseDayAndShiftForm"
                type="ServidorApresentacao.validator.form.FenixDynaValidatorForm"
                dynamic="true"
                >
        <form-property name="day" type="java.lang.String"/>
        <form-property name="month" type="java.lang.String"/>
        <form-property name="year" type="java.lang.String"/>
        <form-property name="beginning" type="java.lang.String"/>
        <form-property name="page" type="java.lang.Integer"/>
     </form-bean>

      <!-- Dynamic-FormBean for Exam -->
     <form-bean name="examForm"
                type="ServidorApresentacao.validator.form.FenixDynaValidatorForm"
                dynamic="true"
                >
        <form-property name="day" type="java.lang.String"/>
        <form-property name="month" type="java.lang.String"/>
        <form-property name="year" type="java.lang.String"/>
        <form-property name="beginning" type="java.lang.String"/>
        <form-property name="season" type="java.lang.String"/>
        <form-property name="page" type="java.lang.Integer"/>
     </form-bean>

      
     </form-beans>

    <!-- ========== Global Exception Definitions ============================== -->
	<global-exceptions>
		<exception type="java.lang.Exception"
			       key="java.lang.Exception"
			       path="/naoExecutado.do"
			       handler="ServidorApresentacao.config.FenixExceptionHandler"/>
		<exception type="ServidorAplicacao.NotAuthorizedException"
			       key="ServidorAplicacao.NotAuthorizedException"
			       path="/naoAutorizado.do"/>
		<exception type="ServidorAplicacao.FenixServiceException"
		  	       key="ServidorAplicacao.FenixServiceException"
		  	       path="/naoExecutado.do"
		  	       handler="ServidorApresentacao.config.FenixExceptionHandler" />
	</global-exceptions>

    
    <!-- ========== Global Forward Definitions =============================== -->
    <global-forwards type="org.apache.struts.action.ActionForward">
      <forward name="index" path="/index.do" redirect="true"/>
      <forward name="firstPage" path="/switchAction.do?prefix=&amp;page=/loginPage.jsp"/>
    </global-forwards>
    
    <!-- ========== Action Mapping Definitions =============================== -->
    <action-mappings type="org.apache.struts.action.ActionMapping">
      <!-- page fronting actions -->
      <action path="/paginaPrincipal" forward="/paginaPrincipal.jsp"/>
      <action path="/mainExams" forward="/mainExams.jsp"/>
      <action path="/index" forward="/autenticacaoSOP.jsp"/>
      <action path="/autenticacaoSOP" forward="/autenticacaoSOP.jsp"/>
      <action path="/naoAutorizado" forward="/notAuthorizedError.jsp"/>
      <action path="/naoExecutado" forward="/error.jsp"/>
      <action path="/criarSala" forward="/criarSala.jsp"/>
      <action path="/gestaoHorarios" forward="/gestaoHorarios.jsp"/>
      <action path="/principalAulas" forward="/principalAulas.jsp"/>
      <action path="/principalTurnos" forward="/principalTurnos.jsp"/>
      <action path="/criarTurno" forward="/criarTurno.jsp"/>
      <action path="/escolherDisciplinaETipo" forward="/escolherDisciplinaETipo.jsp"/>
      <action path="/manipularTurnos" forward="/manipularTurnos.jsp"/>
      
      <action path="/home" forward="/switchAction.do?prefix=&amp;page=/home.do"/>
      <action path="/switchAction" type="org.apache.struts.actions.SwitchAction"/>

      <action path="/principalSalas" 
              type="ServidorApresentacao.Action.base.FenixForwardAction" 
              parameter="/sop/principalSalas.jsp"/>

      <!-- Action For LogOff -->
      <action path="/logoff" 
		      type="ServidorApresentacao.Action.base.FenixForwardAction"
		      forward="/switchAction.do?prefix=&amp;page=/logoff.do"/>

     
<!--      <action path="/editarTurno" forward="/editarTurno.jsp"/>-->

      <!-- action definitions -->
      <!-- AUTORIZACAO -->
      <action name="autenticacaoSOPForm"
              type="ServidorApresentacao.Action.sop.AutenticacaoSOPFormAction"
              path="/autenticacaoSOPForm"
              input="/autenticacaoSOP.jsp"
              scope="request"
              attribute="autenticacaoSOPForm">
        <exception type="ServidorAplicacao.NotExecutedException"
                   key="ServidorAplicacao.NotExecutedException"
                   path="/autenticacaoSOP.do"/>
        <exception type="ServidorAplicacao.Servico.ExcepcaoAutenticacao"
                   key="ServidorAplicacao.Servico.ExcepcaoAutenticacao"
                   path="/autenticacaoSOP.do"/>
        <forward name="SOP"
                 path="/sop/paginaPrincipal.jsp"
                 contextRelative="true"
                 redirect="true"/>
      </action>

	  <!-- CONTEXTO -->

	  <!-- Choose Context for Timetables Management-->
      <action path="/prepararEscolherContexto"
              type="ServidorApresentacao.Action.sop.PrepararEscolherContextoFormAction"
              scope="request">
          <forward name="Sucesso" path="/escolherContexto.jsp"/>
      </action>

      <action attribute="escolherContextoForm"
              input="/prepararEscolherContexto.do"
              name="escolherContextoForm"
              path="/escolherContextoForm"
              scope="request"
              type="ServidorApresentacao.Action.sop.EscolherContextoFormAction">
        <exception type="ServidorAplicacao.Servico.ExcepcaoInexistente"
                   key="ServidorAplicacao.Servico.ExcepcaoInexistente"
                   path="/sop/paginaPrincipal.do"/>
        <forward name="Sucesso" path="/gestaoHorarios.do"/>
        <forward name="Licenciatura execucao inexistente" path="/naoExecutado.do"/>
      </action>


     <!-- Gestao de Horarios -->
	 <!-- AULAS -->
      <action path="/prepararAula"
              type="ServidorApresentacao.Action.sop.PrepararAulaFormAction"
              scope="request">
          <forward name="Sucesso" path="/criarAula.jsp"/>
      </action>

      <action attribute="aulaForm"
              input="/criarAula.jsp"
              name="aulaForm"
              path="/criarAulaForm"
              scope="request"
              type="ServidorApresentacao.Action.sop.LessonManagerDispatchAction"
              parameter="operation"
              validate="true"
              >
		<exception type="ServidorApresentacao.Action.exceptions.ExistingActionException"
				   key="ServidorApresentacao.Action.exceptions.ExistingActionException"
                   handler="ServidorApresentacao.config.FenixErrorExceptionHandler"
                   />
		<exception type="ServidorApresentacao.Action.exceptions.InterceptingActionException"
				   key="ServidorApresentacao.Action.exceptions.InterceptingActionException"
                   handler="ServidorApresentacao.config.FenixErrorExceptionHandler"
                   />
        <exception type="ServidorApresentacao.Action.exceptions.InvalidTimeIntervalActionException"
        		   key="ServidorApresentacao.Action.exceptions.InvalidTimeIntervalActionException"
                   handler="ServidorApresentacao.config.FenixErrorExceptionHandler"
                   />           
		<forward name="Criar" path="/gestaoHorarios.do"/>
		<forward name="Atribuir Sala" path="/chooseLessonRoom.jsp"/>
      </action>

      <action path="/escolherAulas"
              type="ServidorApresentacao.Action.sop.EscolherAulasFormAction"
              scope="session">
          <forward name="Sucesso" path="/manipularAulas.jsp"/>
      </action>
     
      <action attribute="manipularAulasForm"
              input="/manipularAulas.jsp"
              name="manipularAulasForm"
              path="/manipularAulasForm"
              scope="session"
              type="ServidorApresentacao.Action.sop.ManipularAulasFormAction">
         <forward name="Editar" path="/prepararEditarAula.do"/>
         <forward name="Apagar" path="/apagarAula.do"/>
         <forward name="Voltar" path="/gestaoHorarios.do"/>
      </action>

      <action path="/apagarAula"
              input="/manipularAulas.jsp"
              type="ServidorApresentacao.Action.sop.ApagarAulaFormAction">
          <forward name="Sucesso" path="/manipularAulas.jsp"/>
      </action>

     <action path="/prepararEditarAula"
     	     attribute="aulaForm"
             name="aulaForm"
             validate="false"
             type="ServidorApresentacao.Action.sop.PrepararEditarAulaFormAction"
             input="manipularAulas.jsp"
             scope="request">
         <forward name="Sucesso" path="/editarAula.jsp"/>
     </action>

     <action attribute="aulaForm"
             path="/editarAulaForm"
             type="ServidorApresentacao.Action.sop.LessonManagerDispatchAction"
             parameter="operation"
             name="aulaForm"
             scope="request"
             input="/editarAula.jsp">             
		<exception type="ServidorApresentacao.Action.exceptions.ExistingActionException"
				   key="ServidorApresentacao.Action.exceptions.ExistingActionException"
                   handler="ServidorApresentacao.config.FenixErrorExceptionHandler"
                   />
		<exception type="ServidorApresentacao.Action.exceptions.InterceptingActionException"
				   key="ServidorApresentacao.Action.exceptions.InterceptingActionException"
                   handler="ServidorApresentacao.config.FenixErrorExceptionHandler"
                   />
        <exception type="ServidorApresentacao.Action.exceptions.InvalidTimeIntervalActionException"
        		   key="ServidorApresentacao.Action.exceptions.InvalidTimeIntervalActionException"
                   handler="ServidorApresentacao.config.FenixErrorExceptionHandler"
                   />
         <forward name="Guardar" path="/escolherAulas.do"/>
         <forward name="Sucesso" path="/escolherAulas.do"/>
         <forward name="Alterar Sala" path="/changeLessonRoom.jsp"/>
	 </action>

      <!-- Gestao de Salas -->
      
      <action path="/prepararSalaForm"
              type="ServidorApresentacao.Action.sop.PrepararCriarSalaFormAction"
              scope="request"
	      parameter="method">
	      
          <forward name="CriarSala" path="/criarSala.jsp"/>
          <forward name="PesquisarSalas" path="/pesquisarSalas.jsp"/>
      </action>

      <action path="/criarSalaForm"
      		  attribute="roomForm"
              input="/criarSala.jsp"
			  name="roomForm"
              scope="request"
              type="ServidorApresentacao.Action.sop.CriarSalaFormAction"
              validate="true">
         <exception type="ServidorApresentacao.Action.exceptions.ExistingActionException"
         	   key="ServidorApresentacao.Action.exceptions.ExistingActionException"
               handler="ServidorApresentacao.config.FenixErrorExceptionHandler"
               />
        <forward name="Sucesso" path="/principalSalas.do"/>
      </action>

      <action attribute="searchEmptyRoomsForm"
              input="/searchEmptyRooms.jsp"
              name="searchEmptyRoomsForm"
              path="/searchEmptyRoomsDA"
              scope="request"
              parameter="method"
              type="ServidorApresentacao.Action.sop.SearchEmptyRoomsDispatchAction"
              validate="true"
              >
         <exception type="ServidorApresentacao.Action.exceptions.InvalidTimeIntervalActionException"
         	   key="ServidorApresentacao.Action.exceptions.InvalidTimeIntervalActionException"
               handler="ServidorApresentacao.config.FenixErrorExceptionHandler"
               />
              <forward name="showSearchResult" path="/showEmptyRooms.jsp"/>
              <forward name="searchPage" path="/searchEmptyRooms.jsp"/>              
      </action>

      <action attribute="roomForm"
              input="/pesquisarSalas.jsp"
              name="roomForm"
              path="/pesquisarSala"
              scope="request"
              type="ServidorApresentacao.Action.publico.SelectRoomsFormAction"
              validate="false">
        <forward name="Sucess" path="/manipularSalas.jsp" />
      </action>

      <action input="/manipularSalas.jsp"
              name="posicaoFormBean"
              path="/manipularSalas"
              scope="session"
              type="ServidorApresentacao.Action.sop.ManipularSalasAction">
        <exception type="ServidorApresentacao.Action.exceptions.notAuthorizedActionDeleteException"
         	   key="ServidorApresentacao.Action.exceptions.notAuthorizedActionDeleteException"
               handler="ServidorApresentacao.config.FenixErrorExceptionHandler"
               />      
        <forward name="SalaApagada" path="/manipularSalas.jsp" />
		<forward name="VerSala" path="/viewRoom.do" />
        <forward name="EditarSala" path="/editarSala.jsp" />
      </action>

      <action attribute="criarSalaForm"
      		  input="/editarSala.jsp"
	          path="/editarSala"
	          name="roomForm"
              scope="request"
              type="ServidorApresentacao.Action.sop.EditarSalaAction">
         <exception type="ServidorApresentacao.Action.exceptions.ExistingActionException"
         		    key="ServidorApresentacao.Action.exceptions.ExistingActionException"
                    handler="ServidorApresentacao.config.FenixErrorExceptionHandler"
                    />
        <forward name="Sucesso" path="/manipularSalas.jsp" />
      </action>

      <action attribute="pesquisarSalaForm"
              input="/pesquisarSala.jsp"
              name="pesquisarSalaForm"
              path="/pesquisarSalas"
              scope="request"
              type="ServidorApresentacao.Action.publico.SelectRoomsFormAction">
        <forward name="Sucesso" path="/manipularSalas.jsp" />
        <forward name="Voltar" path="/principalSalas.do"/>
      </action>
      
      <action path="/prepareViewRoomOcupation"
              type="ServidorApresentacao.Action.publico.SelectSemesterAction"
              >
          <forward name="Sucess" path="/chooseSemester.jsp"/>
      </action>

      <action attribute="indexForm"
              input="/manipularSalas.jsp"
              name="indexForm"
      		  path="/viewRoom"
              scope="request"
              validate="true"
              type="ServidorApresentacao.Action.publico.ViewRoomFormAction">
          <forward name="Sucess" path="/sopViewRoom.jsp"/>
      </action>

      
	  <!-- TURNOS -->
      <action path="/prepararCriarTurno"
              type="ServidorApresentacao.Action.sop.PrepararCriarTurnoFormAction"
              scope="request">
          <forward name="Sucesso" path="/criarTurno.jsp"/>
      </action>
      <action attribute="criarTurnoForm"
              input="/criarTurno.jsp"
              name="criarTurnoForm"
              path="/criarTurnoForm"
              scope="request"
              type="ServidorApresentacao.Action.sop.CriarTurnoFormAction">
		<exception type="ServidorApresentacao.Action.exceptions.ExistingActionException"
				   key="ServidorApresentacao.Action.exceptions.ExistingActionException"
                   handler="ServidorApresentacao.config.FenixErrorExceptionHandler"
                   />              
        <forward name="Sucesso" path="/gestaoHorarios.do"/> 
      </action>

      <action attribute="shiftNameForm"
              input="/manipularTurnos.jsp"
              name="shiftNameForm"
              path="/viewClassesWithShift"
              scope="request"
              type="ServidorApresentacao.Action.sop.ViewClassesWithShift">
	        <forward name="sucess" path="/viewClassesWithShift.jsp"/> 
      </action>
     
    <action path="/prepararManipularTurnos"
              type="ServidorApresentacao.Action.sop.PrepararManipularTurnosFormAction"
              scope="request">
          <forward name="Sucesso" path="/manipularTurnos.jsp"/>
      </action>
      
      <action attribute="manipularTurnosForm"
              input="/manipularTurnos.jsp"
              name="manipularTurnosForm"
              path="/manipularTurnosForm"
              scope="session"
              type="ServidorApresentacao.Action.sop.ManipularTurnosFormAction">
        <forward name="Ver Turno" path="/prepararVerTurno.do"/>
        <forward name="Editar Turno" path="/prepararEditarTurno.do"/>
        <forward name="Apagar Turno" path="/apagarTurno.do"/>
        <forward name="Ver Alunos Inscritos" path="/prepararVerAlunosDeTurno.do"/>
        <forward name="Voltar" path="/gestaoHorarios.do"/>
      </action>
      
      <action path="/apagarTurno"
              input="/manipularTurnos.jsp"
              type="ServidorApresentacao.Action.sop.ApagarTurnoFormAction">
          <forward name="Sucesso" path="/manipularTurnos.jsp"/>
      </action>

     <action path="/prepararVerTurno"
             input="/manipularTurnos.jsp"
             type="ServidorApresentacao.Action.sop.PrepararVerTurnoFormAction">
         <forward name="Sucesso" path="/verTurno.jsp"/>
     </action>

     <action path="/prepararEditarTurno"
      		  attribute="editarTurnoForm"
      		  name="editarTurnoForm"
      		  validate="false"
              type="ServidorApresentacao.Action.sop.PrepararEditarTurnoFormAction"
              input="manipularTurnos.jsp"
              scope="request">
          <forward name="Sucesso" path="/editarTurno.jsp"/>
      </action>

      <action attribute="editarTurnoForm"
              input="/editarTurno.jsp"
              name="editarTurnoForm"
              path="/editarTurnoForm"
              scope="request"
              type="ServidorApresentacao.Action.sop.EditarTurnoFormAction">
         <exception type="ServidorApresentacao.Action.exceptions.ExistingActionException"
         	   key="ServidorApresentacao.Action.exceptions.ExistingActionException"
               handler="ServidorApresentacao.config.FenixErrorExceptionHandler"
               />     
        <forward name="Guardar" path="/manipularTurnos.do"/>
      </action>

      <action path="/prepararEditarAulasDeTurno"
              type="ServidorApresentacao.Action.sop.PrepararEditarAulasDeTurnoFormAction"
              scope="request">
          <forward name="Sucesso" path="/editarAulasDeTurno.jsp"/>
      </action>

      <action attribute="editarAulasDeTurnoForm"
              input="/editarAulasDeTurno.jsp"
              name="editarAulasDeTurnoForm"
              path="/editarAulasDeTurnoForm"
              scope="session"
              type="ServidorApresentacao.Action.sop.EditarAulasDeTurnoFormAction">
        <forward name="Adicionar Aulas" path="/prepararAdicionarAulasDeTurno.do"/>
        <forward name="Remover Aula" path="/removerAulaDeTurno.do"/>        
      </action>

      <action path="/removerAulaDeTurno"
              input="/editarAulasDeTurno.jsp"
              type="ServidorApresentacao.Action.sop.RemoverAulaDeTurnoFormAction">
          <forward name="Sucesso" path="/editarAulasDeTurno.jsp"/>
      </action>

      <action path="/prepararAdicionarAulasDeTurno"
              type="ServidorApresentacao.Action.sop.PrepararAdicionarAulasDeTurnoFormAction"
              scope="request">
          <forward name="Sucesso" path="/adicionarAulas.jsp"/>
      </action>

      <action attribute="adicionarAulasForm"
              input="/adicionarAulas.jsp"
              name="adicionarAulasForm"
              path="/adicionarAulasForm"
              scope="session"
              type="ServidorApresentacao.Action.sop.AdicionarAulasFormAction">
          <exception type="ServidorApresentacao.Action.exceptions.ExistingActionException"
          	   key="ServidorApresentacao.Action.exceptions.ExistingActionException"
               handler="ServidorApresentacao.config.FenixErrorExceptionHandler"
               />
        <forward name="Sucesso" path="/prepararEditarAulasDeTurno.do"/>
      </action>

     <action path="/prepararVerAlunosDeTurno"
             input="/manipularTurnos.jsp"
             type="ServidorApresentacao.Action.sop.PrepararVerAlunosDeTurnoFormAction">
         <forward name="Sucesso" path="/verAlunosDeTurno.jsp"/>
     </action>


     <!-- TURMAS -->      
      <action parameter="method"
		      path="/ClassesManagerDA"
              type="ServidorApresentacao.Action.sop.ClassesManagerDispatchAction"
		>
        <forward name="listClasses" path="/listClasses.jsp"/>
      </action>
      
     <action parameter="method"
     		 input="/viewTimeTable.jsp"
     		 name="classForm"
		     path="/ClassManagerDA"
             type="ServidorApresentacao.Action.sop.ClassManagerDispatchAction"
             validate="true"
             scope="request">
          <exception type="ServidorApresentacao.Action.exceptions.ExistingActionException"
          			 key="ServidorApresentacao.Action.exceptions.ExistingActionException"
                     handler="ServidorApresentacao.config.FenixErrorExceptionHandler"
           />
             <forward name="viewTimeTable" path="/viewTimeTable.jsp"/>
	         <forward name="listClasses" path="ClassesManagerDA.do?method=listClasses"/>             
      </action>

      <action parameter="method"
      	      input = "/viewShiftList.jsp"
		      path="/ClassShiftManagerDA"
              type="ServidorApresentacao.Action.sop.ClassShiftManagerDispatchAction"
              validate="false"
		>
		<exception type="ServidorApresentacao.Action.exceptions.ExistingActionException"
			   key="ServidorApresentacao.Action.exceptions.ExistingActionException"
               handler="ServidorApresentacao.config.FenixErrorExceptionHandler"
               />
	         <forward name="viewClassShiftList" path="/viewShiftList.jsp"/>  
	         <forward name="viewAvailableShiftList" path="/viewShiftList.jsp"/>  
      </action>



	  <!-- Choose Execution Course Form for lessons -->
      <action name="chooseExecutionCourseForm"
		      input="/escolherDisciplinaExecucao.jsp"
              path="/escolherDisciplinaExecucaoForm"
              scope="request"
              type="ServidorApresentacao.Action.sop.ChooseExecutionCourseAction"
              validate="true">
        <forward name="forwardChoose" path="/escolherAulas.do"/>
        <forward name="showForm" path="/escolherDisciplinaExecucao.jsp"/>        
      </action>

	  <!-- Choose Execution Course Form for shifts in timetables -->
      <action name="chooseExecutionCourseForm"
      		  input="/escolherDisciplinaExecucao.jsp"
              path="/chooseExecutionCourse"
              scope="request"
              type="ServidorApresentacao.Action.sop.ChooseExecutionCourseAction"
              validate="true"
              >
        <forward name="forwardChoose" path="/ClassShiftManagerDA.do?method=listAvailableShifts"/>
        <forward name="showForm" path="/escolherDisciplinaExecucao.jsp"/>        
      </action>
      
	  <!-- Choose Execution Course Form for Shifts -->   
      <action input="/escolherDisciplinaExecucao.jsp"
              name="chooseExecutionCourseForm"
              path="/escolherDisciplinaETipoForm"
              scope="request"
              type="ServidorApresentacao.Action.sop.ChooseExecutionCourseAction"
              validate="true"
              >
        <forward name="forwardChoose" path="/prepararManipularTurnos.do"/>
      	<forward name="showForm" path="/escolherDisciplinaExecucao.jsp"/>	
      </action>
      
       <!-- Choose Execution Course Form for Shifts -->   
      <action input="/escolherDisciplinaExecucao.jsp"
              name="chooseExecutionCourseForm"
              path="/escolherDisciplinaETipoForm"
              scope="request"
              type="ServidorApresentacao.Action.sop.ChooseExecutionCourseAction"
              validate="true"
              >
        <forward name="forwardChoose" path="/prepararManipularTurnos.do"/>
      	<forward name="showForm" path="/escolherDisciplinaExecucao.jsp"/>	
      </action>
      
      	<!-- ExceptionHandling -->   
      <action parameter="method"
              name="errorMailForm" 
              path="/exceptionHandling"
              scope="request"
              type="ServidorApresentacao.Action.ExceptionHandlingAction"     
              >
        
      </action>

	<!-- ========== EXAMS ========== -->
	<action path="/chooseDayAndShiftForm"
			input="/chooseDayAndShift.jsp"
			name="chooseDayAndShiftForm"
            type="ServidorApresentacao.Action.sop.ChooseExamDayAndShiftDispatchAction"
            parameter="method"
            scope="request"
            validate="true"
            >
         <forward name="Show Choose Form" path="/chooseDayAndShift.jsp"/>
         <forward name="View Exams" path="/viewExamsDayAndShiftForm.do?method=view"/>
	</action>

	<action path="/viewExamsDayAndShiftForm"		
			input="/viewExamsDayAndShift.jsp"
            type="ServidorApresentacao.Action.sop.ViewExamsByDayAndShiftDispatchAction"
            parameter="method"
            name="examForm"
            validate="false"
            >
         <forward name="View Exams" path="/viewExamsByDayAndShift.jsp"/>
         <forward name="Deleted Exam" path="/viewExamsDayAndShiftForm.do?method=view"/>
         <forward name="Edit Exam" path="/editExam.jsp"/>
	</action>
	
    <action input="/chooseExamsContextDA.do?method=prepare&amp;page=0&amp;inputPage=chooseExamsContext"
            name="chooseContextForm"
            parameter="method"
            path="/chooseExamsContextDA"
            scope="request"
            validate="true"
            type="ServidorApresentacao.Action.commons.ChooseContextDispatchAction"
            >
        <forward name="chooseExamsContext" path="/chooseExamsContext.jsp"/>
        <forward name="createExam" path="/chooseExecutionCourseForm.do"/>
        <forward name="listByDegreeAndAcademicYear" path="/viewExamsByDegreeAndCurricularYear.do"/>
    </action>
	
	<action path="/viewExamsByDegreeAndCurricularYear"
    		type="ServidorApresentacao.Action.sop.ViewExamsByDegreeAndCurricularYearAction"
    		>
    	<forward name="Sucess" path="/viewExamsByDegreeAndCurricularYear.jsp"/>
	</action>

	<!-- Choose Execution Course Form for exam -->
    <action path="/chooseExecutionCourseForm"
    		name="chooseExecutionCourseForm"
			input="/escolherDisciplinaExecucao.jsp"
            scope="request"
            type="ServidorApresentacao.Action.sop.ChooseExecutionCourseAction"
            validate="true">
        <forward name="forwardChoose" path="/createExam.do?method=prepare&amp;page=0"/>
        <forward name="showForm" path="/chooseExecutionCourse.jsp"/>        
    </action>

	<action path="/createExam"
			name="examForm"
			input="/createExam.jsp"
    		type="ServidorApresentacao.Action.sop.CreateExamActionDA"
            parameter="method"
    		>
    	<exception type="ServidorApresentacao.Action.exceptions.ExistingActionException"
        		   key="ServidorApresentacao.Action.exceptions.ExistingActionException"
                   handler="ServidorApresentacao.config.FenixErrorExceptionHandler"
        		   />
    	<forward name="showCreateForm" path="/createExam.jsp"/>
    	<forward name="Sucess" path="/mainExams.jsp"/>
	</action>

	<action path="/editExam"
			name="examForm"
			input="/editExam.jsp"
    		type="ServidorApresentacao.Action.sop.EditExamAction"
    		>
    	<exception type="ServidorApresentacao.Action.exceptions.ExistingActionException"
        		   key="ServidorApresentacao.Action.exceptions.ExistingActionException"
                   handler="ServidorApresentacao.config.FenixErrorExceptionHandler"
        		   />
    	<forward name="viewExamsByDayAndShift" path="/viewExamsDayAndShiftForm.do?method=view"/>
	</action>

      
      <!-- ========== ADICIONADO POR DAVID SANTOS ================================ -->
	  <action path="/siteViewer"
				input="/siteViewerError.jsp"
				scope="request"
				parameter="method"
				type="ServidorApresentacao.Action.publico.SiteViewerDispatchAction">
			<forward name="roomViewer" path="/sopViewRoom.jsp"/>
<!--			<forward name="executionCourseViewer" path="/viewExecutionCourse.jsp"/>
-->
		</action>
     </action-mappings>     

    
    <!-- ========== Controller Configuration ================================ -->
	 <controller processorClass="ServidorApresentacao.processor.FenixRequestProcessor"/>
    
    <!-- ========== Message Resources Definitions ============================ -->
    <message-resources parameter="ServidorApresentacao.ApplicationResources" />
    
    <!-- ========== Plug Ins Configuration ================================= -->
    <plug-in className="org.apache.struts.validator.ValidatorPlugIn">
      <set-property property="pathnames" 
                    value="/WEB-INF/validator-rules.xml,/WEB-INF/conf/validation-sop.xml"/>
    </plug-in>
</struts-config>