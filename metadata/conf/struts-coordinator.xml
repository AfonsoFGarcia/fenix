<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE struts-config PUBLIC
      "-//Apache Software Foundation//DTD Struts Configuration 1.1//EN"
      "http://jakarta.apache.org/struts/dtds/struts-config_1_1.dtd">
<struts-config>
    
    <!-- ========== Data Source Configuration =============================== -->
    <data-sources />
    
    <!-- ========== Form Bean Definitions ================================== -->
    <form-beans type="org.apache.struts.action.ActionFormBean">

	  <!-- Bean to Choose the Situation for the Candidate  -->
      <form-bean name="chooseCandidateSituationForm" 
                 type="org.apache.struts.validator.DynaValidatorForm"
                 dynamic="true" >

            <form-property name="page" type="java.lang.Integer" />
            <form-property name="situations" type="java.lang.String[]"/>
	        <form-property name="candidatesID" type="java.lang.String[]"/>
        	<form-property name="remarks" type="java.lang.String[]" />
        	<form-property name="executionYear" type="java.lang.String" />
            <form-property name="degree" type="java.lang.String" />
   	        <form-property name="substitutes" type="java.lang.String[]"/>
       </form-bean>

  	  <!-- Bean to Choose the second Master Degree for Study Plan -->
      <form-bean name="chooseSecondMasterDegreeForm" 
                 type="org.apache.struts.validator.DynaValidatorForm"
                 dynamic="true">
         <form-property name="page" type="java.lang.Integer" />
         <form-property name="masterDegree" type="java.lang.String" />
         <form-property name="candidateID" type="java.lang.Integer"/>
      </form-bean>
 
      <!-- Bean to Choose the Course List for Study Plan  -->
      <form-bean name="chooseCourseListForm" 
                 type="org.apache.struts.validator.DynaValidatorForm"
                 dynamic="true">

            <form-property name="page" type="java.lang.Integer" />
   	        <form-property name="candidateID" type="java.lang.Integer"/>
   	        <form-property name="givenCreditsRemarks" type="java.lang.String"/>
   	        <form-property name="executionYear" type="java.lang.String"/>
        	<form-property name="selection" type="java.lang.Integer[]"/>
        	<form-property name="attributedCredits" type="java.lang.String"/>
      </form-bean>     
      
      
      <!-- Dynamic-FormBean for searchExecutionCourse -->
      <form-bean name="searchExecutionCourses"
                 type="org.apache.struts.validator.DynaValidatorForm"
                 dynamic="true">
        <form-property name="page" type="java.lang.Integer"/>
        <form-property name="executionPeriodOID" type="java.lang.String"/>
        <form-property name="curricularYearOID" type="java.lang.String"/>
        <form-property name="executionCourseName" type="java.lang.String"/>        
      </form-bean>
      
      
      
    </form-beans>
    
    <!-- ========== Global Exception Definitions ============================== -->
	<global-exceptions>
		<exception type="java.lang.Exception"
			       key="java.lang.Exception"
			       path="/naoExecutado.do"
			       handler="ServidorApresentacao.config.FenixExceptionHandler"/>
		<exception type="ServidorAplicacao.NotAuthorizedException"
			       key="ServidorAplicacao.NotAuthorizedException"
			       path="/naoAutorizado.do"
			       />
		<exception type="ServidorAplicacao.FenixServiceException"
		  	       key="ServidorAplicacao.FenixServiceException"
		  	       path="/naoExecutado.do"
		  	       handler="ServidorApresentacao.config.FenixExceptionHandler" />
		<exception type="ServidorAplicacao.Servico.ExcepcaoInexistente"
			       key="ServidorAplicacao.Servico.ExcepcaoInexistente"
			       path="/naoExistente.do"
			       handler="ServidorApresentacao.config.FenixExceptionHandler" />
	</global-exceptions>
    
    <!-- ========== Global Forward Definitions =============================== -->
    <global-forwards type="org.apache.struts.action.ActionForward">
	  <forward name="index" path="index.do" redirect="true"/>
      <forward name="Coordinator" path="/indexCoordinator.jsp" contextRelative="true" redirect="true" />
      <forward name="firstPage" path="/index.do"/>
      <forward name="logoff" path="/logoff.do" contextRelative="true"/>

		<forward name="equivalenceForCoordinator" path="/equivalence.do?method=begin"/>
		<forward name="backForCoordinator" path="/index.do?"/>
    </global-forwards>
    
    <!-- ========== Action Mapping Definitions =============================== -->
    <action-mappings type="org.apache.struts.action.ActionMapping">
      <!-- page fronting actions -->
      <action path="/home" forward="/switchAction.do?prefix=&amp;page=/mainPortalPage.jsp"/>
      <action path="/switchAction" type="org.apache.struts.actions.SwitchAction" />

	  <action path="/candidateSection"
		      parameter="method"
              type="ServidorApresentacao.Action.commons.VoidAction"
			  >
	         <forward name="Success" path="/candidate/indexCandidate.jsp"/> 
      </action>

	  <action path="/studentSection"
		      parameter="method"
              type="ServidorApresentacao.Action.commons.VoidAction"
			  >
	         <forward name="Success" path="/student/indexStudent.jsp"/> 
      </action>


      <action path="/index"
      	      type="ServidorApresentacao.Action.masterDegree.coordinator.ReadCoordinatedDegreesAction">
      	  <forward name="ChooseDegree" path="/chooseDegreePage.jsp"/>      	      
          <forward name="Success" path="/indexCoordinator.jsp"/>      	      
      </action> 

      <!-- Dispatch Action to Choose the Degree -->
      <action path="/chooseDegree"
		 parameter="method"
      	      type="ServidorApresentacao.Action.masterDegree.coordinator.CoordinatedDegreeInfo">
    <exception type="ServidorApresentacao.Action.exceptions.ExistingActionException"
            key="ServidorApresentacao.Action.exceptions.ExistingActionException"
            handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>	
      	      
      	  <forward name="Success" path="/indexCoordinator.jsp"/>
      </action>


      <!-- Dispatch Action to operate on the candidates -->
      <action path="/candidateOperation"
          input="/candidate/indexCandidate.jsp"
	      validate="true"
		 parameter="method"
      	      type="ServidorApresentacao.Action.masterDegree.coordinator.CandidateOperationDispatchAction">
     		 <exception type="ServidorApresentacao.Action.exceptions.NonExistingActionException"
		                key="ServidorApresentacao.Action.exceptions.NonExistingActionException"
                        handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>	
      	  <forward name="ViewList" path="/candidate/selectCandidateFromList.jsp"/>
      	  <forward name="ActionReady" path="/candidate/visualizeCandidate.jsp"/>
      </action>
      
      
      
      <!-- Dispatch Action to get the student list of the degree -->
      <action path="/studentListByDegree"
          input="/student/indexStudent.jsp"
	      validate="true"
		 parameter="method"
      	      type="ServidorApresentacao.Action.masterDegree.coordinator.StudentListDispatchAction">
     		 <exception type="ServidorApresentacao.Action.exceptions.NonExistingActionException"
		                key="ServidorApresentacao.Action.exceptions.NonExistingActionException"
                        handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>	
      	  <forward name="ViewList" path="/candidate/selectCandidateFromList.jsp"/>
      	  <forward name="ActionReady" path="/candidate/visualizeCandidate.jsp"/>
      	  <forward name="ShowCourseList" path="/student/chooseCurricularCourse.jsp"/>
      	  
      </action>


 	  <!-- Action for the Coordinator to List the Students -->
	  <action path="/listStudentsForCoordinator"
		      parameter="method"
	          input="/student/indexStudent.jsp"		      
		      scope="session"
              type="ServidorApresentacao.Action.masterDegree.coordinator.StudentListDispatchAction"
			  >
     		 <exception type="ServidorApresentacao.Action.exceptions.NonExistingActionException"
		                key="ServidorApresentacao.Action.exceptions.NonExistingActionException"
                        handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>	
	         <forward name="PrepareSuccess" path="/student/displayStudentListByDegree.jsp"/> 
	  </action>

 	  <!-- Action for the Coordinator to List the Students by CurricularCourse -->
	  <action path="/listStudentsByCourse"
		      parameter="method"
		      scope="request"
              type="ServidorApresentacao.Action.commons.ChooseCurricularCourseDispatchAction"
			  >
     		 <exception type="ServidorApresentacao.Action.exceptions.NonExistingActionException"
		                key="ServidorApresentacao.Action.exceptions.NonExistingActionException"
                        handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>	
			  
	         <forward name="ChooseSuccess" path="/student/displayStudentListByCourse.jsp"/>
	         <forward name="PrepareSuccess" path="/student/displayStudentListByDegree.jsp"/> 
	         <forward name="NoStudents" path="/studentListByDegree.do?method=getCurricularCourses"/> 
   	         <forward name="NotAuthorized" path="/student/notAuthorized.jsp"/> 	         
	  </action>



        <!-- List Student Curriculum -->
        <action path="/studentCurriculum"
		      parameter="method"
		      scope="request"
              type="ServidorApresentacao.Action.commons.student.CurriculumDispatchAction"
			  >
	         <forward name="ShowStudentCurriculum" path="/student/displayStudentCurriculum.jsp"/>
	         <forward name="NotAuthorized" path="/student/notAuthorized.jsp"/>
	  </action>


        <!-- Prepare the Candidates Approval Process -->
        <action path="/prepareCandidateApproval"
        	  
		      parameter="method"
		      scope="request"
              type="ServidorApresentacao.Action.masterDegree.coordinator.PrepareCandidateApprovalDispatchAction"
			  >
	         <forward name="ExecutionDegreeChosen" path="/displayListToSelectCandidates.do?method=prepareSelectCandidates"/>
	  </action>

	  <!-- Display List To Select Candidates -->
      <action path="/displayListToSelectCandidates"
	          input="/candidate/displayCandidateListBySituation.jsp"
		      attribute="chooseCandidateSituationForm"
		      name="chooseCandidateSituationForm"
		      parameter="method"
		      scope="session"
              type="ServidorApresentacao.Action.masterDegree.commons.candidate.SelectCandidatesDispatchAction"
			  >
	         <forward name="PrepareSuccess" path="/candidate/displayCandidateListBySituation.jsp"/>  
	         <forward name="CancelConfirmation" path="/displayListToSelectCandidates.do?method=prepareSelectCandidates"/>  
	         <forward name="RequestConfirmation" path="/candidate/warning.jsp"/> 
	         <forward name="FinalPresentation" path="/candidate/displayCandidatesFinalList.jsp"/>
	         <forward name="ChooseSuccess" path="/displayListToSelectCandidates.do?method=preparePresentation&amp;page=0"/>
	         <forward name="OrderCandidates" path="/displayListToSelectCandidates.do?method=getSubstituteCandidates&amp;page=0"/> 
	         <forward name="Cancel" path="/displayListToSelectCandidates.do?method=prepareSelectCandidates&amp;page=0"/> 
	         <forward name="OrderCandidatesReady" path="/candidate/displayChosenSelection.jsp"/> 
	         <forward name="NumerusClaususNotDefined" path="/candidate/numerusClaususNotDefined.jsp"/>  	         
			 <forward name="BackError" path="/backErrorCandidateApprovalPage.do" redirect="true"/>
			 <forward name="PrintReady" path="/candidate/approvalDispatchTemplate.jsp" />  
		</action>
		
		<action path="/backErrorCandidateApprovalPage"
              type="ServidorApresentacao.Action.commons.VoidAction"
			  >
	         <forward name="Success" path="/candidate/backErrorPage.jsp"/> 
      	</action>

		<action	type="ServidorApresentacao.Action.equivalence.PrepareManualEquivalenceForCoordinatorDispatchAction"
				path="/equivalence"
				parameter="method"
				scope="session"
				validate="false">
			<forward name="begin" path="/equivalence/showAllAvailableCurricularCoursesForEquivalence.jsp"/>
			<forward name="show" path="/equivalence/manualEquivalenceManagerForCoordinator.do?method=show" contextRelative="true"/>
		</action>
		
      <!-- Display List To Make Candidate Study Plan -->
      <action path="/displayCandidateListToMakeStudyPlan"
       		  input="/candidate/displayCandidateListToMakeStudyPlan.jsp"
       		  attribute="chooseSecondMasterDegreeForm"
		      name="chooseSecondMasterDegreeForm"
		      parameter="method"
		      scope="session"
		      type="ServidorApresentacao.Action.masterDegree.commons.candidate.MakeCandidateStudyPlanDispatchAction"
			  >
	         <forward name="PrepareSuccess" path="/candidate/displayCandidateListToMakeStudyPlan.jsp"/>  
		</action>		

      <action path="/displayCourseListToStudyPlan"
      		  input="/candidate/displayListOfCoursesToChoose.jsp"
      		  attribute="chooseCourseListForm"
		      name="chooseCourseListForm"
		      parameter="method"
		      scope="request"
		      validate="true"
		      type="ServidorApresentacao.Action.masterDegree.commons.candidate.MakeCandidateStudyPlanDispatchAction"
			  >
		   <exception type="ServidorApresentacao.Action.exceptions.NoChoiceMadeActionException"
			          key="ServidorApresentacao.Action.exceptions.NoChoiceMadeActionException"
			          handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
		   <exception type="ServidorApresentacao.Action.exceptions.NotAuthorizedActionException"
			          key="ServidorApresentacao.Action.exceptions.NotAuthorizedActionException"
			          handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
    
	         <forward name="PrepareSuccess" path="/candidate/displayListOfCoursesToChoose.jsp"/>  
	         <forward name="ChooseSuccess" path="/candidate/displayCandidateEnrolments.jsp"/>
     		 <forward name="PrintReady" path="/candidate/studyPlanTemplate.jsp"/>     			 
			 <forward name="BackError" path="/backError.do" redirect="true"/>  
		</action>




      <action path="/executionCoursesInformation"
       		  input="/courses/searchCurricularCourses.jsp"
      		  attribute="searchExecutionCourses"
		      name="searchExecutionCourses"
		      parameter="method"
		      scope="request"
		      validate="true"
		      type="ServidorApresentacao.Action.coordinator.ExecutionCourseInfoDispatchAction"
			  >
	         <forward name="ReadyToSearch" path="/courses/searchCurricularCourses.jsp" />  
	         <forward name="ShowCurricularCourseList" path="/courses/showCurricularCourses.jsp" />
	      	 <forward name="showOccupancy" path="/courses/showOccupancyLevels.jsp"/>	           
    	     <forward name="showLoads" path="/courses/showLoads.jsp"/>
		</action>		

		<!-- ======== coordination team mappings -->
		 <action path="/viewCoordinationTeam"
  		      parameter="method"
		      scope="request"
		      type="ServidorApresentacao.Action.coordinator.CoordinationTeamDispatchAction"
			  >
	         <forward name="sucess" path="df.page.coordinationTeam" /> 
		</action>		

    </action-mappings>
    
    <!-- ========== Controller Configuration ================================ -->
      <controller processorClass="ServidorApresentacao.processor.FenixRequestProcessorWithTiles"/>
    
    <!-- ========== Message Resources Definitions ============================ -->
    <message-resources parameter="ServidorApresentacao.ApplicationResources" null="false"/>
    
    <!-- ========== Plug Ins Configuration ================================= -->
    <plug-in className="org.apache.struts.validator.ValidatorPlugIn">
      <set-property property="pathnames" 
                    value="/WEB-INF/validator-rules.xml,/WEB-INF/fenix-validator-rules.xml,/WEB-INF/conf/validation-coordinator.xml"/>
    </plug-in>
    <plug-in className="org.apache.struts.tiles.TilesPlugin" >
		<set-property property="definitions-config"
					  value="/WEB-INF/tiles/layouts/tiles-layout-definitions.xml,/WEB-INF/tiles/coordinator/tiles-coordinator-definitions.xml,/WEB-INF/tiles/coordinator/tiles-coordinator-pages-definitions.xml" />
		<set-property property="moduleAware" value="true" />
		<set-property property="definitions-parser-validate" value="true" />
	</plug-in>
</struts-config>

