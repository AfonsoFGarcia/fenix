<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE struts-config PUBLIC
	"-//Apache Software Foundation//DTD Struts Configuration 1.1//EN"
	"http://jakarta.apache.org/struts/dtds/struts-config_1_1.dtd">
<struts-config>
 
		<!-- ========== Data Source Configuration =============================== -->
	
		<!-- ========== Form Bean Definitions ================================== -->
		<form-beans type="org.apache.struts.action.ActionFormBean">  
	
		<form-bean name="degreeForm"
			type="org.apache.struts.validator.DynaValidatorForm"
                dynamic="true">
				<form-property name="name" type="java.lang.String" />       
				<form-property name="code" type="java.lang.String" />
				<form-property name="degreeType" type="java.lang.Integer" />
				<form-property name="internalIds" type="java.lang.Integer[]" />
				<form-property name="page" type="java.lang.Integer" initial="0"/>
		</form-bean>  
		 
		<form-bean name="degreeCurricularPlanForm"
			type="org.apache.struts.validator.DynaValidatorForm"
                dynamic="true">
				<form-property name="internalIds" type="java.lang.Integer[]" />
				<form-property name="name" type="java.lang.String" />
				<form-property name="state" type="java.lang.String" />
				<form-property name="initialDate" type="java.lang.String" />
				<form-property name="endDate" type="java.lang.String" />
				<form-property name="degreeDuration" type="java.lang.String" />
				<form-property name="minimalYearForOptionalCourses" type="java.lang.String" />
				<form-property name="neededCredits" type="java.lang.String" />
				<form-property name="markType" type="java.lang.String" />
				<form-property name="numerusClausus" type="java.lang.String" />
				<form-property name="page" type="java.lang.Integer" initial="0"/>
		</form-bean>
		
		<form-bean name="curricularCourseForm"
			type="org.apache.struts.validator.DynaValidatorForm"
                dynamic="true">
                <form-property name="internalIds" type="java.lang.Integer[]" />
				<form-property name="name" type="java.lang.String" />
				<form-property name="code" type="java.lang.String" />
				<form-property name="type" type="java.lang.String" />
				<form-property name="mandatory" type="java.lang.String" />
				<form-property name="basic" type="java.lang.String" />
				<form-property name="departmentCourse" type="java.lang.String" />
				<!--copiei pq a falta tava a dar erro-->
				<form-property name="branchId" type="java.lang.String" />
				<form-property name="curricularSemesterId" type="java.lang.String" />
				<form-property name="page" type="java.lang.Integer" initial="0"/>
		</form-bean>
		
		<form-bean name="associateExecutionCourseToCurricularCourseForm"
			type="org.apache.struts.validator.DynaValidatorForm"
                dynamic="true">
                <form-property name="executionCourseId" type="java.lang.String" />
				<form-property name="page" type="java.lang.Integer" initial="0"/>
		</form-bean>
		
		<form-bean name="curricularCourseScopeForm"
			type="org.apache.struts.validator.DynaValidatorForm"
                dynamic="true">
				<form-property name="theoreticalHours" type="java.lang.String" />
				<form-property name="praticalHours" type="java.lang.String" />
				<form-property name="theoPratHours" type="java.lang.String" />
				<form-property name="labHours" type="java.lang.String" />
	            <form-property name="credits" type="java.lang.String" />			
	            <form-property name="ectsCredits" type="java.lang.String" />			
				<form-property name="maxIncrementNac" type="java.lang.String" />
				<form-property name="minIncrementNac" type="java.lang.String" />
				<form-property name="weight" type="java.lang.String" />
	            <form-property name="beginDate" type="java.lang.String" />			
	            <form-property name="endDate" type="java.lang.String" />			
				<form-property name="branchId" type="java.lang.String" />
				<form-property name="curricularSemesterId" type="java.lang.String" />
				<form-property name="curricularCourseScopeId" type="java.lang.String" />
				<form-property name="page" type="java.lang.Integer" initial="0"/>
		</form-bean>
		
		<form-bean name="executionDegreeForm"
			type="org.apache.struts.validator.DynaValidatorForm"
                dynamic="true">
				<form-property name="executionYearId" type="java.lang.String" />
				<form-property name="coordinatorNumber" type="java.lang.String" />
				<form-property name="campusId" type="java.lang.String" />				
				<form-property name="tempExamMap" type="java.lang.String" />
				<form-property name="internalIds" type="java.lang.Integer[]" />
				<form-property name="page" type="java.lang.Integer" initial="0"/>
		</form-bean>
		
		<form-bean name="curriculumForm"
			type="org.apache.struts.validator.DynaValidatorForm"
                dynamic="true">
				<form-property name="generalObjectives" type="java.lang.String" />
				<form-property name="operacionalObjectives" type="java.lang.String" />
				<form-property name="program" type="java.lang.String" />
				<form-property name="generalObjectivesEn" type="java.lang.String" />
				<form-property name="operacionalObjectivesEn" type="java.lang.String" />
				<form-property name="programEn" type="java.lang.String" />
				<form-property name="evaluationElements" type="java.lang.String" />
				<form-property name="evaluationElementsEn" type="java.lang.String" />
				<form-property name="page" type="java.lang.Integer" initial="0"/>
		</form-bean>
		
		<form-bean name="branchForm"
			type="org.apache.struts.validator.DynaValidatorForm"
                dynamic="true">
				<form-property name="name" type="java.lang.String" />       
				<form-property name="code" type="java.lang.String" />
				<form-property name="internalIds" type="java.lang.Integer[]" />
				<form-property name="page" type="java.lang.Integer" initial="0"/>
		</form-bean>
		
		<form-bean name="teacherForm"
			type="org.apache.struts.validator.DynaValidatorForm"
                dynamic="true">
                <form-property name="professorShipTeachersIds" type="java.lang.Integer[]" />
                <form-property name="responsibleTeachersIds" type="java.lang.Integer[]" />
				<form-property name="number" type="java.lang.String" />
				<form-property name="page" type="java.lang.Integer" initial="0"/>
		</form-bean>
		
		<form-bean name="executionCourseForm"
			type="org.apache.struts.validator.DynaValidatorForm"
                dynamic="true">
                <form-property name="name" type="java.lang.String" />
                <form-property name="code" type="java.lang.String" />
                <form-property name="theoreticalHours" type="java.lang.String" />
				<form-property name="praticalHours" type="java.lang.String" />
				<form-property name="theoPratHours" type="java.lang.String" />
				<form-property name="labHours" type="java.lang.String" />
				<form-property name="semester" type="java.lang.String" />
				<form-property name="comment" type="java.lang.String" />
				<form-property name="internalIds" type="java.lang.Integer[]" />
				<form-property name="page" type="java.lang.Integer" initial="0"/>
		</form-bean>
		
		<form-bean name="teacherForm"
			type="org.apache.struts.validator.DynaValidatorForm"
                dynamic="true">
                <form-property name="professorShipTeachersIds" type="java.lang.Integer[]" />
                <form-property name="responsibleTeachersIds" type="java.lang.Integer[]" />
				<form-property name="number" type="java.lang.String" />
				<form-property name="page" type="java.lang.Integer" initial="0"/>
		</form-bean>
		

	  <!-- ========== EXECUTION PERIOD MANIPULATION ========== -->

      <!-- Dynamic-FormBean para Day And Shift Context -->
     <form-bean name="createExecutionPeriodForm"
                type="org.apache.struts.validator.DynaValidatorForm"
                dynamic="true"
                >
        <form-property name="semesterToCreate" type="java.lang.String"/>
        <form-property name="yearToCreate" type="java.lang.String"/>
        <form-property name="beginDateToCreate" type="java.lang.String"/>
        <form-property name="endDateToCreate" type="java.lang.String"/>
        <form-property name="semesterToExportDataFrom" type="java.lang.String"/>  
        <form-property name="yearToExportDataFrom" type="java.lang.String"/>
        <form-property name="beginDateToExportDataFrom" type="java.lang.String"/>
        <form-property name="endDateToExportDataFrom" type="java.lang.String"/>
        <form-property name="page" type="java.lang.Integer"/>
     </form-bean>

	  <!-- ========== ADVISORY MANIPULATION ========== -->

      <!-- Dynamic-FormBean para Day And Shift Context -->
     <form-bean name="advisoryForm"
                type="org.apache.struts.validator.DynaValidatorForm"
                dynamic="true"
                >
        <form-property name="sender" type="java.lang.String"/>
        <form-property name="subject" type="java.lang.String"/>
        <form-property name="message" type="java.lang.String"/>
        <form-property name="experationDate" type="java.lang.String"/>
        <form-property name="recipients" type="java.lang.Integer"/>
        <form-property name="page" type="java.lang.Integer"/>
     </form-bean>

     <form-bean name="rolesForm"
                type="org.apache.struts.validator.DynaValidatorForm"
                dynamic="true"
                >
        <form-property name="roleOIDs" type="java.lang.String[]"/>
        <form-property name="username" type="java.lang.String"/>
        <form-property name="page" type="java.lang.Integer"/>
     </form-bean>
     
	<form-bean name="newPasswordForm"
      			type="org.apache.struts.validator.DynaValidatorForm"
      			dynamic="true">
		<form-property name="userType" type="java.lang.String"/>
		<form-property name="username" type="java.lang.String"/>
		<form-property name="page" type="java.lang.Integer"/>
      </form-bean>   
    </form-beans>

	 <!-- ========== Global Exception Definitions ============================== -->
	<global-exceptions>
		<exception type="ServidorAplicacao.NotAuthorizedException"
			       key="ServidorAplicacao.NotAuthorizedException"
			       path="/naoAutorizado.do"
			       handler="ServidorApresentacao.config.FenixExceptionHandler"/>
		<exception type="ServidorAplicacao.NotExecutedException"
		  	       key="ServidorAplicacao.NotExecutedException"
		  	       path="/naoExecutado.do"
		  	       handler="ServidorApresentacao.config.FenixExceptionHandler" />
		<exception type="ServidorAplicacao.Servico.ExcepcaoInexistente"
			       key="ServidorAplicacao.Servico.ExcepcaoInexistente"
			       path="/naoExistente.do"
			       handler="ServidorApresentacao.config.FenixExceptionHandler" />
		<exception type="ServidorAplicacao.FenixServiceException"
		  	       key="ServidorAplicacao.FenixServiceException"
		  	       path="/naoExecutado.do"
		  	       handler="ServidorApresentacao.config.FenixExceptionHandler" />
	</global-exceptions>

	<!-- ========== Global Forward Definitions =============================== -->
	<global-forwards type="org.apache.struts.action.ActionForward">
     <forward name="index" path="/index.do" redirect="true"/>
    <!--<forward name="firstPage" path="/switchAction.do?prefix=&amp;page=/loginPage.jsp"/>-->  
   	 <forward name="logoff" path="/logoff.do" contextRelative="true"/>
    </global-forwards>

	<!-- ========== Action Mapping Definitions =============================== -->
	<action-mappings type="org.apache.struts.action.ActionMapping">
    <!-- page fronting actions  -->
    <action path="/index" type="ServidorApresentacao.Action.base.FenixForwardAction" forward="df.page.main-page"/>
  
   
    	<!--=====Actions for Degrees==== -->
   
   
	 <!-- Action for reading all degrees  -->
      <action path="/readDegrees"
             input="mainPageInput.do"
      	     type="ServidorApresentacao.Action.manager.ReadDegreesAction">
      	  <forward name="readDegrees" path="df.page.read-degrees"/>      	      
      </action>
      
	 <!-- Action for reading a degree -->
      <action path="/readDegree"
              input="/readDegrees.do"
      	      type="ServidorApresentacao.Action.manager.ReadDegreeAction">
      	  <exception type="ServidorApresentacao.Action.exceptions.NonExistingActionException"
            key="ServidorApresentacao.Action.exceptions.NonExistingActionException"
            handler="ServidorApresentacao.config.FenixErrorExceptionHandler"
          /> 
          <forward name="readDegrees" path="/readDegrees.do"/> 	  
      	  <forward name="viewDegree" path="df.page.read-degree"/>  
      	      
      </action>
         
     <!-- Action for inserting a degree -->
	<action
		path="/insertDegree"
		name="degreeForm"
		input="/insertDegree.do?method=prepareInsert&amp;page=0"
		parameter="method"
		scope="request"
		type="ServidorApresentacao.Action.manager.InsertDegreeDispatchAction"
        validate="true">
        <exception type="ServidorApresentacao.Action.exceptions.ExistingActionException"
         	       key="ServidorApresentacao.Action.exceptions.ExistingActionException"
                   handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
       <forward name="insertDegree" path="df.page.insert-degree"/>
       <forward name="readDegrees" path="/readDegrees.do"/>      	      
	</action>	
	    
	<!-- Action for deleting degrees --> 
      <action 
      		 path="/deleteDegrees"
      		 name="degreeForm"
      		 input="/readDegreesInput.do"
      		 scope="request"
      	     type="ServidorApresentacao.Action.manager.DeleteDegreesAction"
			 validate="true">
      	  <forward name="readDegrees" path="/readDegrees.do"/>      	      
      </action>
      
      <!-- Action for editing a degree -->
	<action
		path="/editDegree"
		name="degreeForm"
		input="/editDegree.do?method=prepareEdit&amp;page=0"
		parameter="method"
		scope="request"
		type="ServidorApresentacao.Action.manager.EditDegreeDispatchAction"
        validate="true"> 
         <exception type="ServidorApresentacao.Action.exceptions.ExistingActionException"
         	       key="ServidorApresentacao.Action.exceptions.ExistingActionException"
                   handler="ServidorApresentacao.config.FenixErrorExceptionHandler"
                   /> 
          <exception type="ServidorApresentacao.Action.exceptions.NonExistingActionException"
         	       key="ServidorApresentacao.Action.exceptions.NonExistingActionException"
                  handler="ServidorApresentacao.config.FenixErrorExceptionHandler"
                  />
       <forward name="editDegree" path="df.page.edit-degree"/>
       <forward name="readDegree" path="/readDegree.do"/>     
       <forward name="readDegrees" path="/readDegrees.do"/>    	      
	</action>
      
      
    
      
      <!--=====Actions for degree curricular plan==== -->
    
    
    <!-- Action for reading a degree curricular plan -->
    <action path="/readDegreeCurricularPlan"
         input="/readDegree.do"
         type="ServidorApresentacao.Action.manager.ReadDegreeCurricularPlanAction">
          <exception type="ServidorApresentacao.Action.exceptions.NonExistingActionException"
            key="ServidorApresentacao.Action.exceptions.NonExistingActionException"
            handler="ServidorApresentacao.config.FenixErrorExceptionHandler"
          /> 
     <forward name="viewDegreeCurricularPlan" path="df.page.read-degree-curricular-plan"/>  
     <forward name="readDegree" path="/readDegree.do"/> 	      
    </action>
      
    <!-- Action for inserting a degree curricular plan  -->
	<action
		path="/insertDegreeCurricularPlan"
		name="degreeCurricularPlanForm"
		input="/insertDegreeCurricularPlan.do?method=prepareInsert&amp;page=0"
		parameter="method"
		scope="request"
		type="ServidorApresentacao.Action.manager.InsertDegreeCurricularPlanDispatchAction"
        validate="true">
        <exception type="ServidorApresentacao.Action.exceptions.ExistingActionException"
         	       key="ServidorApresentacao.Action.exceptions.ExistingActionException"
                   handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
        <exception type="ServidorApresentacao.Action.exceptions.InvalidArgumentsActionException"
         	       key="ServidorApresentacao.Action.exceptions.InvalidArgumentsActionException"
                   handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
        <exception type="ServidorApresentacao.Action.exceptions.NonExistingActionException"
         	       key="ServidorApresentacao.Action.exceptions.NonExistingActionException"
                  handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
       <forward name="insertDegreeCurricularPlan" path="df.page.insert-degree-curricular-plan"/>
       <forward name="readDegree" path="/readDegree.do"/>      	      
	</action>
      
      <!-- Action for deleting degree curricular plans --> 
      <action 
      	 path="/deleteDegreeCurricularPlans"
      	 name="degreeCurricularPlanForm"
      	 input="/readDegreeInput.do"
      	 scope="request"
         type="ServidorApresentacao.Action.manager.DeleteDegreeCurricularPlansAction">
        <forward name="readDegree" path="/readDegree.do"/>      	      
      </action>
      
	 <!-- Action for editing a degree curricular plan  -->
	<action
		path="/editDegreeCurricularPlan"
		name="degreeCurricularPlanForm"
		input="/editDegreeCurricularPlan.do?method=prepareEdit&amp;page=0"
		parameter="method"
		scope="request"
		type="ServidorApresentacao.Action.manager.EditDegreeCurricularPlanDispatchAction"
        validate="true">  
         <exception type="ServidorApresentacao.Action.exceptions.ExistingActionException"
         	       key="ServidorApresentacao.Action.exceptions.ExistingActionException"
                   handler="ServidorApresentacao.config.FenixErrorExceptionHandler"
                   /> 
         <exception type="ServidorApresentacao.Action.exceptions.NonExistingActionException"
         	       key="ServidorApresentacao.Action.exceptions.NonExistingActionException"
                   handler="ServidorApresentacao.config.FenixErrorExceptionHandler"
                   />
         <exception type="ServidorApresentacao.Action.exceptions.InvalidArgumentsActionException"
         	       key="ServidorApresentacao.Action.exceptions.InvalidArgumentsActionException"
                   handler="ServidorApresentacao.config.FenixErrorExceptionHandler"
                   />
       <forward name="editDegreeCP" path="df.page.edit-degree-curricular-plan"/>
       <forward name="readDegreeCP" path="/readDegreeCurricularPlan.do"/>    
       <forward name="readDegree" path="/readDegree.do"/> 	      
	</action>
	
	
	
	<!--=====Actions for curricular course==== -->
	
	
	<!-- Action for reading a curricular course -->
  
    <action path="/readCurricularCourse"
        input="/readDegreeCurricularPlan.do"
        type="ServidorApresentacao.Action.manager.ReadCurricularCourseAction">
         <exception type="ServidorApresentacao.Action.exceptions.NonExistingActionException"
         	       key="ServidorApresentacao.Action.exceptions.NonExistingActionException"
                   handler="ServidorApresentacao.config.FenixErrorExceptionHandler"
                   /> 
      <forward name="readDegreeCurricularPlan" path="/readDegreeCurricularPlan.do"/>  
      <forward name="viewCurricularCourse" path="df.page.read-curricular-course"/> 	      
    </action>	
	
	<!-- Action for inserting a curricular course  -->
	<action
		path="/insertCurricularCourse"
		name="curricularCourseForm"
		input="/insertCurricularCourse.do?method=prepareInsert&amp;page=0"
		parameter="method"
		scope="request"
		type="ServidorApresentacao.Action.manager.InsertCurricularCourseDispatchAction"
        validate="true">
        <exception type="ServidorApresentacao.Action.exceptions.ExistingActionException"
         	       key="ServidorApresentacao.Action.exceptions.ExistingActionException"
                   handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
        <exception type="ServidorApresentacao.Action.exceptions.NonExistingActionException"
         	       key="ServidorApresentacao.Action.exceptions.NonExistingActionException"
                   handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/> 
       <forward name="insertCurricularCourse" path="df.page.insert-curricular-course"/>
       <forward name="readDegreeCurricularPlan" path="/readDegreeCurricularPlan.do"/>
       <forward name="readDegree" path="/readDegree.do"/>    	      
	</action>
		
	<!-- Action for deleting curricular courses --> 
    <action 
    	path="/deleteCurricularCourses"
      	name="curricularCourseForm"
      	input="/readDegreeCurricularPlan.do"
      	scope="request"
      	type="ServidorApresentacao.Action.manager.DeleteCurricularCoursesAction">
       <forward name="readDegreeCurricularPlan" path="/readDegreeCurricularPlan.do"/>      	      
    </action>	  
      
    <!-- Action for editing a curricular course  -->
	<action
		path="/editCurricularCourse"
		name="curricularCourseForm"
		input="/editCurricularCourse.do?method=prepareEdit&amp;page=0"
		parameter="method"
		scope="request"
		type="ServidorApresentacao.Action.manager.EditCurricularCourseDA"
        validate="true">  
        <exception type="ServidorApresentacao.Action.exceptions.ExistingActionException"
         	       key="ServidorApresentacao.Action.exceptions.ExistingActionException"
                   handler="ServidorApresentacao.config.FenixErrorExceptionHandler"
                   />
                     <exception type="ServidorApresentacao.Action.exceptions.NonExistingActionException"
         	       key="ServidorApresentacao.Action.exceptions.NonExistingActionException"
                  handler="ServidorApresentacao.config.FenixErrorExceptionHandler"
                  />
       <forward name="editCurricularCourse" path="df.page.edit-curricular-course"/>
       <forward name="readCurricularCourse" path="/readCurricularCourse.do"/>      	
       <forward name="readDegreeCP" path="/readDegreeCurricularPlan.do"/>            
	</action>
      
      
      
      <!--=====Actions for curricular course scope==== -->
      
 <!-- Action for editing a curricular course scope  -->
	<action
		path="/editCurricularCourseScope"
		name="curricularCourseScopeForm"
		input="/editCurricularCourseScope.do?method=prepareEdit&amp;page=0"
		parameter="method"
		scope="request"
		type="ServidorApresentacao.Action.manager.EditCurricularCourseScopeDA"
        validate="true">  
          <exception type="ServidorApresentacao.Action.exceptions.ExistingActionException"
         	       key="ServidorApresentacao.Action.exceptions.ExistingActionException"
                   handler="ServidorApresentacao.config.FenixErrorExceptionHandler"
                   />
          <exception type="ServidorApresentacao.Action.exceptions.NonExistingActionException"
             key="ServidorApresentacao.Action.exceptions.NonExistingActionException"
             handler="ServidorApresentacao.config.FenixErrorExceptionHandler"
          />
       <forward name="editCurricularCourseScope" path="df.page.edit-curricular-course-scope"/>
       <forward name="readCurricularCourse" path="/readCurricularCourse.do"/>
       <forward name="readDegree" path="/readDegree.do"/>
	</action>
	
	<!-- Action for inserting a curricular course scope -->
	<action
		path="/insertCurricularCourseScope"
		name="curricularCourseScopeForm"
		input="/insertCurricularCourseScope.do?method=prepareInsert&amp;page=0"
		parameter="method"
		scope="request"
		type="ServidorApresentacao.Action.manager.InsertCurricularCourseScopeDispatchAction"
        validate="true">
        <exception type="ServidorApresentacao.Action.exceptions.ExistingActionException"
         	       key="ServidorApresentacao.Action.exceptions.ExistingActionException"
                   handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
        <exception type="ServidorApresentacao.Action.exceptions.NonExistingActionException"
             	   key="ServidorApresentacao.Action.exceptions.NonExistingActionException"
                   handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
       <forward name="insertCurricularCourseScope" path="df.page.insert-curricular-course-scope"/>
       <forward name="readCurricularCourse" path="/readCurricularCourse.do"/>    
       <forward name="readDegreeCurricularPlan" path="/readDegreeCurricularPlan.do"/>
       <forward name="readDegree" path="/readDegree.do"/> 	      
	</action>
	
	<!-- Action for inserting a curricular course scope from another -->
	<action
		path="/insertCurricularCourseScopeFromAnother"
		name="curricularCourseScopeForm"
		input="/insertCurricularCourseScopeFromAnother.do?method=prepareInsert&amp;page=0"
		parameter="method"
		scope="request"
		type="ServidorApresentacao.Action.manager.InsertCurricularCourseScopeFromAnotherDA"
        validate="true">
        <exception type="ServidorApresentacao.Action.exceptions.ExistingActionException"
         	       key="ServidorApresentacao.Action.exceptions.ExistingActionException"
                   handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
        <exception type="ServidorApresentacao.Action.exceptions.NonExistingActionException"
             	   key="ServidorApresentacao.Action.exceptions.NonExistingActionException"
                   handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
       <forward name="insertCurricularCourseScope" path="df.page.insert-from-other-curricular-course-scope"/>
       <forward name="readCurricularCourse" path="/readCurricularCourse.do"/>
       <forward name="readDegree" path="/readDegree.do"/>     	      
	</action>
	
 <!-- Action for ending a curricular course scope  -->
	<action
		path="/endCurricularCourseScope"
		name="curricularCourseScopeForm"
		input="/endCurricularCourseScope.do?method=prepareEnd&amp;page=0"
		parameter="method"
		scope="request"
		type="ServidorApresentacao.Action.manager.EndCurricularCourseScopeDA"
        validate="true">  
          <exception type="ServidorApresentacao.Action.exceptions.NonExistingActionException"
             key="ServidorApresentacao.Action.exceptions.NonExistingActionException"
             handler="ServidorApresentacao.config.FenixErrorExceptionHandler"
          />
          <exception type="ServidorApresentacao.Action.exceptions.InvalidArgumentsActionException"
             key="ServidorApresentacao.Action.exceptions.InvalidArgumentsActionException"
             handler="ServidorApresentacao.config.FenixErrorExceptionHandler"
          />
          <exception type="ServidorApresentacao.Action.exceptions.InvalidSituationActionException"
             key="ServidorApresentacao.Action.exceptions.InvalidSituationActionException"
             handler="ServidorApresentacao.config.FenixErrorExceptionHandler"
          />
       <forward name="endCurricularCourseScope" path="df.page.end-curricular-course-scope"/>
       <forward name="readCurricularCourse" path="/readCurricularCourse.do"/>
	</action>
	
	<action path="/readAllCurricularCourseScopes"
		input="/readcurricularCourse.do"
		type="ServidorApresentacao.Action.manager.ReadAllCurricularCourseScopesAction">
	 	<exception type="ServidorApresentacao.Action.exceptions.NonExistingActionException"
			key="ServidorApresentacao.Action.exceptions.NonExistingActionException"
			handler="ServidorApresentacao.config.FenixErrorExceptionHandler"
		/> 
  		<forward name="viewCurricularCourseScopes" path="df.page.read-curricular-course-scopes"/> 	      
	</action>	
	
    <!--=====Actions for execution degree==== -->
    
    
	<!-- Action for inserting an execution degree  -->
	<action
		path="/insertExecutionDegree"
		name="executionDegreeForm"
		input="/insertExecutionDegree.do?method=prepareInsert&amp;page=0"
		parameter="method"
		scope="request"
		type="ServidorApresentacao.Action.manager.InsertExecutionDegreeDispatchAction">
		<exception type="ServidorApresentacao.Action.exceptions.ExistingActionException"
         	       key="ServidorApresentacao.Action.exceptions.ExistingActionException"
                   handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
        <exception type="ServidorApresentacao.Action.exceptions.NonExistingActionException"
         	       key="ServidorApresentacao.Action.exceptions.NonExistingActionException"
                   handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
       <forward name="insertExecutionDegree" path="df.page.insert-execution-degree"/>
       <forward name="readDegreeCurricularPlan" path="/readDegreeCurricularPlan.do"/>      	      
	</action>
	
	<!-- Action for editing an execution degree  -->
	<action
		path="/editExecutionDegree"
		name="executionDegreeForm"
		input="/editExecutionDegree.do?method=prepareEdit&amp;page=0"
		parameter="method"
		scope="request"
		type="ServidorApresentacao.Action.manager.EditExecutionDegreeDispatchAction"
        validate="true">  
        <exception type="ServidorApresentacao.Action.exceptions.ExistingActionException"
         	       key="ServidorApresentacao.Action.exceptions.ExistingActionException"
                   handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/> 
        <exception type="ServidorApresentacao.Action.exceptions.NonExistingActionException"
         	       key="ServidorApresentacao.Action.exceptions.NonExistingActionException"
                   handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
       <forward name="editExecutionDegree" path="df.page.edit-execution-degree"/>
       <forward name="readDegreeCurricularPlan" path="/readDegreeCurricularPlan.do"/>      	      
	</action>
	
	
    
    <!-- Action for deleting execution degree --> 
    <action 
      	path="/deleteExecutionDegrees"
      	name="executionDegreeForm"
      	input="/readDegreeCurricularPlanInput.do"
      	scope="request"
      	type="ServidorApresentacao.Action.manager.DeleteExecutionDegreesAction">
       <forward name="readDegreeCurricularPlan" path="/readDegreeCurricularPlan.do"/>      	      
    </action>
    	
    <!-- Action for reading execution periods to associate execution courses to a curricular course -->
          <action path="/readExecutionPeriodToAssociateExecutionCoursesAction"
          input="/readDegreeCurricularPlan.do"
              type="ServidorApresentacao.Action.manager.ReadExecutionPeriodToAssociateExecutionCoursesAction"
              scope="request">
               <exception type="ServidorApresentacao.Action.exceptions.NonExistingActionException"
         	       key="ServidorApresentacao.Action.exceptions.NonExistingActionException"
                   handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
          <forward name="viewExecutionPeriods" path="df.page.read-execution-periods"/>
      </action>
     
      <!-- Action for associating execution courses to a curricular course-->
      <action 
      	path="/associateExecutionCourseToCurricularCourse"
      	name="associateExecutionCourseToCurricularCourseForm"
      	input="/associateExecutionCourseToCurricularCourse.do?method=prepare&amp;page=0"
      	parameter="method"
      	scope="request"
      	type="ServidorApresentacao.Action.manager.AssociateExecutionCourseToCurricularCourseDA"
      	validate="true">
      	<exception type="ServidorApresentacao.Action.exceptions.NonExistingActionException"
         	       key="ServidorApresentacao.Action.exceptions.NonExistingActionException"
                   handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
        <exception type="ServidorApresentacao.Action.exceptions.ExistingActionException"
         	       key="ServidorApresentacao.Action.exceptions.ExistingActionException"
                   handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
       <forward name="viewExecutionCoursesToAssociate" path="df.page.read-execution-courses"/>  
       <forward name="readCurricularCourse" path="/readCurricularCourse.do"/> 
       <forward name="readAvailableExecutionPeriods" path="/readExecutionPeriodToAssociateExecutionCoursesAction.do"/>   
       <forward name="readDegreeCurricularPlan" path="/readDegreeCurricularPlan.do"/>
       	           	      
    </action>
    
    <!-- Action for dissociating an execution course  -->
	<action
	    path="/dissociateExecutionCourse"
	    name="curricularCourseForm"
	    input="/readCurricularCourse.do"
		scope="request"
		type="ServidorApresentacao.Action.manager.DissociateExecutionCourseAction"
        validate="true"> 
        <exception type="ServidorApresentacao.Action.exceptions.NonExistingActionException"
         	       key="ServidorApresentacao.Action.exceptions.NonExistingActionException"
                   handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>  	          
       <forward name="readCurricularCourse" path="/readCurricularCourse.do"/>      	      
	</action>
	
	
	 <!-- Action for editing a curriculum  -->
	<action
		path="/editCurriculum"
		name="curriculumForm"
		input="/editCurriculum.do?method=prepareEdit&amp;page=0"
		parameter="method"
		scope="request"
		type="ServidorApresentacao.Action.manager.EditCurriculumDA">
        <exception type="ServidorApresentacao.Action.exceptions.NonExistingActionException"
         	       key="ServidorApresentacao.Action.exceptions.NonExistingActionException"
                   handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
       <forward name="editCurriculum" path="df.page.edit-curriculum"/>
       <forward name="readCurricularCourse" path="/readCurricularCourse.do"/>
       <forward name="readDegreeCurricularPlan" path="/readDegreeCurricularPlan.do"/>
       <forward name="editCurriculumEnglish" path="df.page.edit-curriculum-english"/>  	      
	</action>
	
	<!-- Actions for managing branches  -->
	<action
		path="/manageBranches"
		name="branchForm"
		input="/manageBranches.do?method=showBranches&amp;page=0"
		parameter="method"
		scope="request"
		type="ServidorApresentacao.Action.manager.ManageBranchesDA">  
        <exception type="ServidorApresentacao.Action.exceptions.NonExistingActionException"
         	       key="ServidorApresentacao.Action.exceptions.NonExistingActionException"
                   handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
        <exception type="ServidorApresentacao.Action.exceptions.ExistingActionException"
         	       key="ServidorApresentacao.Action.exceptions.ExistingActionException"
                   handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
       <forward name="readDegree" path="/readDegree.do"/>
       <forward name="manageBranches" path="df.page.manage-branches"/>
       <forward name="insertBranch" path="df.page.insert-branch"/>
       <forward name="editBranch" path="df.page.edit-branch"/>
	</action>
    
    <!--Action for reading teachers of an execution course  -->
	<action
	    path="/readTeacherInCharge"
	    name="teacherForm"
	    input="/readCurricularCourse.do"
		scope="request"
		type="ServidorApresentacao.Action.manager.ReadTeacherInChargeAction">         
       <forward name="readExecutionCourseTeachers" path="df.page.read-execution-course-teachers"/>      	      
	</action>
	
	<!--Actions for inserting teachers at an execution course  -->
	<action
	    path="/insertProfessorShipByNumber"
	    name="teacherForm"
	    input="/insertProfessorShipByNumber.do?method=prepareInsert&amp;page=0"
		scope="request"
		parameter="method"
		type="ServidorApresentacao.Action.manager.InsertProfessorShipByNumberDA"
        validate="true">
        <exception type="ServidorApresentacao.Action.exceptions.NonExistingActionException"
         	       key="ServidorApresentacao.Action.exceptions.NonExistingActionException"
                   handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>   
       <forward name="insertProfessorShip" path="df.page.insert-professorShip-by-number"/>
       <forward name="readTeacherInCharge" path="/readTeacherInCharge.do"/>      	      
	</action>
	
	<!-- Action for saving modifications at teachers body --> 
    <action 
      	path="/saveTeachersBody"
      	name="teacherForm"
      	input="/readTeacherInCharge.do"
      	scope="request"
      	type="ServidorApresentacao.Action.manager.SaveTeachersBodyAction">
      	<exception type="ServidorApresentacao.Action.exceptions.InvalidArgumentsActionException"
         	       key="ServidorApresentacao.Action.exceptions.InvalidArgumentsActionException"
                   handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
       <forward name="readTeacherInCharge" path="/readTeacherInCharge.do"/>
       <forward name="readCurricularCourse" path="/readCurricularCourse.do"/>      	      
    </action>
    
    <!-- Action for deleting a curricular course scope --> 
    <action 
      	path="/deleteCurricularCourseScope"
      	name="curricularCourseScopeForm"
      	input="/readCurricularCourse.do"
      	scope="request"
      	type="ServidorApresentacao.Action.manager.DeleteCurricularCourseScopeAction">
      	<exception type="ServidorApresentacao.Action.exceptions.CantDeleteActionException"
         	       key="ServidorApresentacao.Action.exceptions.CantDeleteActionException"
                   handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
       <forward name="readCurricularCourse" path="/readCurricularCourse.do"/>      	      
    </action>

	<!--FALTA EXCEPCES PARA AS QUE SE SEGUEM-->
    <action path="/readExecutionPeriods"
          input="mainPageInput.do"
              type="ServidorApresentacao.Action.manager.ReadExecutionPeriodsAction"
              scope="request">
          <forward name="readExecutionPeriods" path="df.page.read-execution-periods-to-choose"/>
      </action>
    
    <!--insertExecutionCourseAtExecutionPeriod
    insertExecutionCourse -->
    
    <action
		path="/readExecutionCourses"
		input="/readExecutionPeriods.do"
		scope="request"
		type="ServidorApresentacao.Action.manager.ReadExecutionCoursesAction"
        validate="true">
       <forward name="readExecutionCourses" path="df.page.read-execution-courses-to-choose"/>      	      
	</action>
    
    <action
		path="/insertExecutionCourse"
		name="executionCourseForm"
		input="/insertExecutionCourse.do?method=prepareInsert&amp;page=0"
		parameter="method"
		scope="request"
		type="ServidorApresentacao.Action.manager.InsertExecutionCourseDA"
        validate="true">
        <exception type="ServidorApresentacao.Action.exceptions.NonExistingActionException"
         	       key="ServidorApresentacao.Action.exceptions.NonExistingActionException"
                   handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
        <exception type="ServidorApresentacao.Action.exceptions.ExistingActionException"
         	       key="ServidorApresentacao.Action.exceptions.ExistingActionException"
                   handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
       <forward name="insertExecutionCourse" path="df.page.insert-execution-course"/>
       <forward name="readExecutionCourses" path="/readExecutionCourses.do"/> 
         <forward name="readExecutionPeriods" path="/readExecutionPeriods.do"/>    	      
	</action>
    
    <action
		path="/createSite"
		input="/readCurricularCourse.do"
		scope="request"
		type="ServidorApresentacao.Action.manager.CreateSiteInExecutionCourseAction"
        validate="true">
        <exception type="ServidorApresentacao.Action.exceptions.NonExistingActionException"
         	       key="ServidorApresentacao.Action.exceptions.NonExistingActionException"
                   handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
       <forward name="readCurricularCourse" path="/readCurricularCourse.do"/>    	      
	</action>
	<!-- Action for deleting execution courses --> 
      <action 
      	  path="/deleteExecutionCourses"
      	  name="executionCourseForm"
      	  
      	  scope="request"
      	  type="ServidorApresentacao.Action.manager.DeleteExecutionCoursesAction">
      	  <forward name="readExecutionCourses" path="/readExecutionCourses.do"/>      	      
      </action>
	
      <!--Input actions-->  
     <action path="/readDegreesInput"
     		scope="request"
      	      type="ServidorApresentacao.Action.commons.VoidAction">
      	  <forward name="Success" path="df.page.read-degrees"/>      	      
      </action>
      
      <action path="/readDegreeInput"
     		scope="request"
      	      type="ServidorApresentacao.Action.commons.VoidAction">
      	  <forward name="Success" path="df.page.read-degree"/>      	      
      </action>
      
      <action path="/mainPageInput"
      	      type="ServidorApresentacao.Action.commons.VoidAction">
      	  <forward name="Success" path="df.page.main-page"/>      	      
      </action>
      
      <action path="/readDegreeCurricularPlanInput"
     		scope="request"
      	      type="ServidorApresentacao.Action.commons.VoidAction">
      	  <forward name="Success" path="df.page.read-degree-curricular-plan"/>      	      
      </action>

	<!-- ========== EXECUTION PERIOD MANIPULATION ========== -->
      <action path="/manageExecutionPeriods"
              type="ServidorApresentacao.Action.manager.ManageExecutionPeriodsDA"
              parameter="method"
              scope="request"
              >
          <forward name="Manage" path="df.page.manage-execution-periods"/>
      </action>

      <action input="/manageExecutionPeriods.do?method=prepare&amp;page=1"
			  name="createExecutionPeriodForm"
      		  path="/createExecutionPeriodForm"
              scope="request"
              type="ServidorApresentacao.Action.manager.ManageExecutionPeriodsDA"
              parameter="method"
              validate="true"
              >
        <exception type="ServidorApresentacao.Action.exceptions.InvalidArgumentsActionException"
         	       key="ServidorApresentacao.Action.exceptions.InvalidArgumentsActionException"
                   handler="ServidorApresentacao.config.FenixErrorExceptionHandler"
                   />
        <exception type="ServidorApresentacao.Action.exceptions.ExistingActionException"
         	       key="ServidorApresentacao.Action.exceptions.ExistingActionException"
                   handler="ServidorApresentacao.config.FenixErrorExceptionHandler"
                   />
        <forward name="Sucess" path="/manageExecutionPeriods.do?method=prepare"/>
      </action>

	<!-- ========== CACHE MANIPULATION ========== -->
      <action path="/manageCache"
		      input="/manageCache.do?method=prepare"
              type="ServidorApresentacao.Action.manager.ManageCacheDA"
              parameter="method"
              >
          <forward name="Manage" path="df.page.manage-cache"/>
          <forward name="CacheCleared" path="/manageCache.do?method=prepare"/>
      </action>

	<!-- ========== ADVISORY MANIPULATION ========== -->
      <action path="/manageAdvisories"
      		  name="advisoryForm"
		      input="/manageAdvisories.do?method=prepare"
              type="ServidorApresentacao.Action.manager.ManageAdvisoriesDA"
              parameter="method"
              validate="true"
              scope="request"
              >
          <forward name="Manage" path="df.page.manage-advisories"/>
      </action>

	<!-- ========== ROLE MANIPULATION ========== -->
      <action path="/manageRoles"
      		  name="rolesForm"
		      input="/manageRoles.do?method=prepare&amp;page=0"
              type="ServidorApresentacao.Action.manager.ManageRolesDA"
              parameter="method"
              validate="true"
              scope="request"
              >
          <forward name="SelectUserPage" path="df.page.manage-roles"/>
          <forward name="Manage" path="df.page.manage-roles"/>
      </action>

	<action	name="newPasswordForm"
				attribute="newPasswordForm"
				type="ServidorApresentacao.Action.commons.password.GenerateNewPasswordDispatchAction"
				path="/generateNewPassword"
				input="/generateNewPassword.do?method=prepare&amp;page=0"
				parameter="method"
				scope="request"
				validate="true">
			<exception	type="ServidorApresentacao.Action.exceptions.NonExistingActionException"
						key="ServidorApresentacao.Action.exceptions.NonExistingActionException"
						handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
			<forward name="PrepareSuccess" path="df.page.choosePerson"/>
			<forward name="Confirm" path="df.page.confirmPasswordChange"/>
			<forward name="Success" path="/password/newPasswordTemplate.jsp"/>
		</action>
	</action-mappings>

	<!-- ========== Controller Configuration ================================ -->
    <controller processorClass="ServidorApresentacao.processor.FenixRequestProcessorWithTiles"/>

	<!-- ========== Message Resources Definitions ============================ -->
	<message-resources parameter="ServidorApresentacao.ApplicationResources" null="false"/>

	<!-- ========== Plug Ins Configuration ================================= -->
			
	<plug-in className="org.apache.struts.validator.ValidatorPlugIn">
      <set-property property="pathnames" 
		value="/WEB-INF/validator-rules.xml,/WEB-INF/fenix-validator-rules.xml,/WEB-INF/conf/validation-manager.xml"/>
	</plug-in>
	    <plug-in className="org.apache.struts.tiles.TilesPlugin" >
		<set-property property="definitions-config"
					  value="/WEB-INF/tiles/layouts/tiles-layout-definitions.xml,/WEB-INF/tiles/manager/tiles-manager-definitions.xml,/WEB-INF/tiles/manager/tiles-manager-pages-definitions.xml" />
		<set-property property="moduleAware" value="true" />
		<set-property property="definitions-parser-validate" value="true" />
	</plug-in>    

</struts-config>
