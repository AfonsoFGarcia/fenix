<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE struts-config PUBLIC
	"-//Apache Software Foundation//DTD Struts Configuration 1.1//EN"
	"http://jakarta.apache.org/struts/dtds/struts-config_1_1.dtd">
<struts-config>

		<!-- ========== Data Source Configuration =============================== -->
	
		<!-- ========== Form Bean Definitions ================================== -->
		<form-beans type="org.apache.struts.action.ActionFormBean">
	 
		<form-bean name="deleteForm"
				type="ServidorApresentacao.validator.form.FenixDynaValidatorForm"
					dynamic="true">  	      
				<form-property name="internalIds" type="java.lang.Integer[]" />
		</form-bean>  
	
		<form-bean name="degreeForm"
			type="ServidorApresentacao.validator.form.FenixDynaValidatorForm"
                dynamic="true">
				<form-property name="name" type="java.lang.String" />       
				<form-property name="code" type="java.lang.String" />
				<form-property name="degreeType" type="java.lang.Integer" />
				<form-property name="idInternal" type="java.lang.Integer" />
				<form-property name="page" type="java.lang.Integer" initial="0"/>
		</form-bean>  

		<form-bean name="readForm"
					type="ServidorApresentacao.validator.form.FenixDynaValidatorForm"
					dynamic="true">        
				<form-property name="idInternal" type="java.lang.Integer" />
		</form-bean>  
    </form-beans>

	 <!-- ========== Global Exception Definitions ============================== -->
	<global-exceptions>
		<exception type="java.lang.Exception"
			       key="java.lang.Exception"
			       path="/naoExecutado.do"
			       handler="ServidorApresentacao.config.FenixExceptionHandler"/>
		<exception type="ServidorAplicacao.NotAuthorizedException"
			       key="ServidorAplicacao.NotAuthorizedException"
			       path="/naoAutorizado.do"
			       />
		<exception type="ServidorAplicacao.FenixServiceException"
		  	       key="ServidorAplicacao.FenixServiceException"
		  	       path="/naoExecutado.do"
		  	       handler="ServidorApresentacao.config.FenixExceptionHandler" />
		<exception type="ServidorAplicacao.Servico.ExcepcaoInexistente"
			       key="ServidorAplicacao.Servico.ExcepcaoInexistente"
			       path="/naoExistente.do"
			       handler="ServidorApresentacao.config.FenixExceptionHandler" /> 
	</global-exceptions>

	<!-- ========== Global Forward Definitions =============================== -->
	<global-forwards type="org.apache.struts.action.ActionForward">
     <forward name="index" path="/index.do" redirect="true"/>
    <!--<forward name="firstPage" path="/switchAction.do?prefix=&amp;page=/loginPage.jsp"/>-->  
   	 <forward name="logoff" path="/logoff.do" contextRelative="true"/>
    </global-forwards>

	<!-- ========== Action Mapping Definitions =============================== -->
	<action-mappings type="org.apache.struts.action.ActionMapping">
    <!-- page fronting actions  -->
    <action path="/index" type="ServidorApresentacao.Action.base.FenixForwardAction" forward="df.page.main-page"/>
  
   
	 <!-- Action for reading all degrees  -->
      <action path="/readDegrees"
             input="mainPageInput.do"
      	     type="ServidorApresentacao.Action.manager.ReadDegreesAction">
      	  <forward name="readDegrees" path="df.page.read-degrees"/>      	      
      </action>
      
	 <!-- Action for reading a degree -->
      <action path="/readDegree"
      	      name="readForm"
              input="/readDegreesInput.do"
              scope="request"
      	      type="ServidorApresentacao.Action.manager.ReadDegreeAction">
      <exception type="ServidorApresentacao.Action.exceptions.NonExistingActionException"
         	   key="ServidorApresentacao.Action.exceptions.NonExistingActionException"
               handler="ServidorApresentacao.config.FenixErrorExceptionHandler"
               /> 
      	  <forward name="viewDegree" path="df.page.read-degree"/>  
      	  <forward name="readDegrees" path="/readDegrees.do"/> 	      
      </action>
         
     <!-- Action for inserting a degree -->
	<action
		path="/insertDegree"
		name="degreeForm"
		input="/insertDegreeInput.do"
		parameter="method"
		scope="request"
		type="ServidorApresentacao.Action.manager.InsertDegreeDispatchAction"
        validate="true">  
       <forward name="insertDegree" path="df.page.insert-degree"/>
       <forward name="readDegrees" path="df.page.read-degrees"/>      	      
	</action>	
	
	<action
		path="/editDegree"
		name="degreeForm"
		input="/insertDegreeInput.do"
		parameter="method"
		scope="request"
		type="ServidorApresentacao.Action.manager.InsertDegreeDispatchAction"
        validate="true">  
       <forward name="insertDegree" path="df.page.insert-degree"/>
       <forward name="readDegrees" path="df.page.read-degrees"/>      	      
	</action>			     		     
         
	<!-- Action for deleting degrees --> 
      <action 
      		 path="/deleteDegrees"
      		 name="deleteForm"
      		 input="/readDegreesInput.do"
      		 scope="request"
      	     type="ServidorApresentacao.Action.manager.DeleteDegreesAction">
      	  <forward name="readDegrees" path="/readDegrees.do"/>      	      
      </action>
      
      <!-- Action for editing a degree -->
	<action
		path="/editDegree"
		name="degreeForm"
		input="/editDegreeInput.do"
		parameter="method"
		scope="request"
		type="ServidorApresentacao.Action.manager.EditDegreeDispatchAction"
        validate="true">  
       <forward name="editDegree" path="df.page.edit-degree"/>
       <forward name="readDegrees" path="df.page.read-degrees"/>      	      
	</action>
     
     <!-- Action for reading all degree curricular plans  -->
      <action path="/readDegreeCurricularPlans"
      		 name="readForm"
      		 scope="request"
      	     type="ServidorApresentacao.Action.manager.ReadDegreeCurricularPlansAction">
      	  <forward name="readDegreeCurricularPlans" path="df.page.read-degreeCurricularPlans"/>      	      
      </action>
     
      <!--Input actions-->
      <action path="/insertDegreeInput"
      	      type="ServidorApresentacao.Action.commons.VoidAction">
      	  <forward name="Success" path="df.page.insert-degree"/>      	      
      </action>
      
       <action path="/editDegreeInput"
      	      type="ServidorApresentacao.Action.commons.VoidAction">
      	  <forward name="Success" path="df.page.edit-degree"/>      	      
      </action>
      
     <action path="/readDegreesInput"
      	      type="ServidorApresentacao.Action.commons.VoidAction">
      	  <forward name="Success" path="df.page.read-degrees"/>      	      
      </action>
      
      <action path="/mainPageInput"
      	      type="ServidorApresentacao.Action.commons.VoidAction">
      	  <forward name="Success" path="df.page.main-page"/>      	      
      </action>
      
	</action-mappings>

	<!-- ========== Controller Configuration ================================ -->
    <controller processorClass="ServidorApresentacao.processor.FenixRequestProcessorWithTiles"/>

	<!-- ========== Message Resources Definitions ============================ -->
	<message-resources parameter="ServidorApresentacao.ApplicationResources" />

	<!-- ========== Plug Ins Configuration ================================= -->
			
	<plug-in className="org.apache.struts.validator.ValidatorPlugIn">
      <set-property property="pathnames" 
		value="/WEB-INF/validator-rules.xml,/WEB-INF/fenix-validator-rules.xml,/WEB-INF/conf/validation-manager.xml"/>
	</plug-in>
	    <plug-in className="org.apache.struts.tiles.TilesPlugin" >
		<set-property property="definitions-config"
					  value="/WEB-INF/tiles/layouts/tiles-layout-definitions.xml,/WEB-INF/tiles/manager/tiles-manager-definitions.xml,/WEB-INF/tiles/manager/tiles-manager-pages-definitions.xml" />
		<set-property property="moduleAware" value="true" />
		<set-property property="definitions-parser-validate" value="true" />
	</plug-in>    

</struts-config>