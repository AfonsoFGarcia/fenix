<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE struts-config PUBLIC
	"-//Apache Software Foundation//DTD Struts Configuration 1.1//EN"
	"http://jakarta.apache.org/struts/dtds/struts-config_1_1.dtd">
<struts-config>

		<!-- ========== Data Source Configuration =============================== -->
	
		<!-- ========== Form Bean Definitions ================================== -->
		<form-beans type="org.apache.struts.action.ActionFormBean">  
	
		<form-bean name="degreeForm"
			type="ServidorApresentacao.validator.form.FenixDynaValidatorForm"
                dynamic="true">
				<form-property name="name" type="java.lang.String" />       
				<form-property name="code" type="java.lang.String" />
				<form-property name="degreeType" type="java.lang.Integer" />
				<form-property name="degreeId" type="java.lang.Integer" />
				<form-property name="internalIds" type="java.lang.Integer[]" />
				<form-property name="page" type="java.lang.Integer" initial="0"/>
		</form-bean>  
		
		<form-bean name="degreeCurricularPlanForm"
			type="ServidorApresentacao.validator.form.FenixDynaValidatorForm"
                dynamic="true">
				<form-property name="degreeCurricularPlanId" type="java.lang.Integer" />
				<form-property name="degreeId" type="java.lang.Integer" />
				<form-property name="internalIds" type="java.lang.Integer[]" />
				<form-property name="name" type="java.lang.String" />
				<form-property name="state" type="java.lang.String" />
				<form-property name="initialDate" type="java.lang.String" />
				<form-property name="endDate" type="java.lang.String" />
				<form-property name="degreeDuration" type="java.lang.String" />
				<form-property name="minimalYearForOptionalCourses" type="java.lang.String" />
				<form-property name="neededCredits" type="java.lang.String" />
				<form-property name="markType" type="java.lang.String" />
				<form-property name="numerusClausus" type="java.lang.String" />
				<form-property name="page" type="java.lang.Integer" initial="0"/>
		</form-bean>
		
		<form-bean name="curricularCourseForm"
			type="ServidorApresentacao.validator.form.FenixDynaValidatorForm"
                dynamic="true">
                <form-property name="degreeId" type="java.lang.Integer" />
                <form-property name="curricularCourseId" type="java.lang.Integer" />
                <form-property name="degreeCurricularPlanId" type="java.lang.Integer" />
                <form-property name="internalIds" type="java.lang.Integer[]" />
				<form-property name="name" type="java.lang.String" />
				<form-property name="code" type="java.lang.String" />
				<form-property name="credits" type="java.lang.String" />
				<form-property name="theoreticalHours" type="java.lang.String" />
				<form-property name="praticalHours" type="java.lang.String" />
				<form-property name="theoPratHours" type="java.lang.String" />
				<form-property name="labHours" type="java.lang.String" />
				<form-property name="type" type="java.lang.String" />
				<form-property name="mandatory" type="java.lang.String" />
				<form-property name="universityId" type="java.lang.String" />
				<form-property name="basic" type="java.lang.String" />
				<form-property name="departmentCourse" type="java.lang.String" />
				<form-property name="page" type="java.lang.Integer" initial="0"/>
		</form-bean>
		
		<form-bean name="executionDegreeForm"
			type="ServidorApresentacao.validator.form.FenixDynaValidatorForm"
                dynamic="true">
                <form-property name="degreeId" type="java.lang.Integer" />
                <form-property name="degreeCurricularPlanId" type="java.lang.Integer" />
				<form-property name="executionYear" type="java.lang.String" />
				<form-property name="coordinatorId" type="java.lang.String" />
				<form-property name="tempExamMap" type="java.lang.String" />
				<form-property name="page" type="java.lang.Integer" initial="0"/>
		</form-bean>    


		<!--<form-bean name="curricularCourseForm"
			type="ServidorApresentacao.validator.form.FenixDynaValidatorForm"
                dynamic="true">
                <form-property name="curricularCourseId" type="java.lang.Integer" />
                <form-property name="degreeCurricularPlanId" type="java.lang.Integer" />
				<form-property name="name" type="java.lang.String" />
				<form-property name="code" type="java.lang.String" />
				<form-property name="credits" type="java.lang.String" />
				<form-property name="theoreticalHours" type="java.lang.String" />
				<form-property name="praticalHours" type="java.lang.String" />
				<form-property name="theoPratHours" type="java.lang.String" />
				<form-property name="labHours" type="java.lang.String" />
				<form-property name="type" type="java.lang.String" />
				<form-property name="mandatory" type="java.lang.String" />
				<form-property name="basic" type="java.lang.String" />
				<form-property name="internalIds" type="java.lang.Integer[]" />
				<form-property name="page" type="java.lang.Integer" initial="0"/>
		</form-bean>    

-->
	  <!-- ========== EXECUTION PERIOD MANIPULATION ========== -->

      <!-- Dynamic-FormBean para Day And Shift Context -->
     <form-bean name="createExecutionPeriodForm"
                type="ServidorApresentacao.validator.form.FenixDynaValidatorForm"
                dynamic="true"
                >
        <form-property name="semesterToCreate" type="java.lang.String"/>
        <form-property name="yearToCreate" type="java.lang.String"/>
        <form-property name="semesterToExportDataFrom" type="java.lang.String"/>
        <form-property name="yearToExportDataFrom" type="java.lang.String"/>
        <form-property name="page" type="java.lang.Integer"/>
     </form-bean>

    </form-beans>

	 <!-- ========== Global Exception Definitions ============================== -->
	<global-exceptions>
		<exception type="ServidorAplicacao.NotAuthorizedException"
			       key="ServidorAplicacao.NotAuthorizedException"
			       path="/naoAutorizado.do"
			       handler="ServidorApresentacao.config.FenixExceptionHandler"/>
		<exception type="ServidorAplicacao.NotExecutedException"
		  	       key="ServidorAplicacao.NotExecutedException"
		  	       path="/naoExecutado.do"
		  	       handler="ServidorApresentacao.config.FenixExceptionHandler" />
		<exception type="ServidorAplicacao.Servico.ExcepcaoInexistente"
			       key="ServidorAplicacao.Servico.ExcepcaoInexistente"
			       path="/naoExistente.do"
			       handler="ServidorApresentacao.config.FenixExceptionHandler" />
		<exception type="ServidorAplicacao.FenixServiceException"
		  	       key="ServidorAplicacao.FenixServiceException"
		  	       path="/naoExecutado.do"
		  	       handler="ServidorApresentacao.config.FenixExceptionHandler" />
	</global-exceptions>

	<!-- ========== Global Forward Definitions =============================== -->
	<global-forwards type="org.apache.struts.action.ActionForward">
     <forward name="index" path="/index.do" redirect="true"/>
    <!--<forward name="firstPage" path="/switchAction.do?prefix=&amp;page=/loginPage.jsp"/>-->  
   	 <forward name="logoff" path="/logoff.do" contextRelative="true"/>
    </global-forwards>

	<!-- ========== Action Mapping Definitions =============================== -->
	<action-mappings type="org.apache.struts.action.ActionMapping">
    <!-- page fronting actions  -->
    <action path="/index" type="ServidorApresentacao.Action.base.FenixForwardAction" forward="df.page.main-page"/>
  
   
    	<!--=====Actions for Degrees==== -->
   
   
	 <!-- Action for reading all degrees  -->
      <action path="/readDegrees"
             input="mainPageInput.do"
             scope="request"
      	     type="ServidorApresentacao.Action.manager.ReadDegreesAction">
      	  <forward name="readDegrees" path="df.page.read-degrees"/>      	      
      </action>
      
	 <!-- Action for reading a degree -->
      <action path="/readDegree"
      	      name="degreeCurricularPlanForm"
              input="/readDegreesInput.do"
              scope="request"
      	      type="ServidorApresentacao.Action.manager.ReadDegreeAction">
      	  <forward name="viewDegree" path="df.page.read-degree"/>  
      	  <forward name="readDegrees" path="/readDegrees.do"/> 	      
      </action>
         
     <!-- Action for inserting a degree -->
	<action
		path="/insertDegree"
		name="degreeForm"
		input="/insertDegree.do?method=prepareInsert&amp;page=0"
		parameter="method"
		scope="request"
		type="ServidorApresentacao.Action.manager.InsertDegreeDispatchAction"
        validate="true">  
       <forward name="insertDegree" path="df.page.insert-degree"/>
       <forward name="readDegrees" path="/readDegrees.do"/>      	      
	</action>	
	    
	<!-- Action for deleting degrees --> 
    <action 
    	 path="/deleteDegrees"
    	 name="degreeForm"
    	 input="/readDegreesInput.do"
    	 scope="request"
         type="ServidorApresentacao.Action.manager.DeleteDegreesAction"
		 validate="true">
      <forward name="readDegrees" path="/readDegrees.do"/>      	      
     </action>
      
      <!-- Action for editing a degree -->
	<action
		path="/editDegree"
		name="degreeForm"
		input="/editDegree.do?method=prepareEdit&amp;page=0"
		parameter="method"
		scope="request"
		type="ServidorApresentacao.Action.manager.EditDegreeDispatchAction"
        validate="true">  
       <forward name="editDegree" path="df.page.edit-degree"/>
       <forward name="readDegrees" path="/readDegrees.do"/>      	      
	</action>
      
      
    
      
      <!--=====Actions for degree curricular plan==== -->
    
    
    <!-- Action for reading a degree curricular plan -->
    <action path="/readDegreeCurricularPlan"
         name="executionDegreeForm"
         input="/readDegreeInput.do"
         scope="request"
         type="ServidorApresentacao.Action.manager.ReadDegreeCurricularPlanAction">
     <forward name="viewDegreeCurricularPlan" path="df.page.read-degreeCurricularPlan"/>  
     <forward name="readDegree" path="/readDegree.do"/> 	      
    </action>
      
    <!-- Action for inserting a degree curricular plan  -->
	<action
		path="/insertDegreeCurricularPlan"
		name="degreeCurricularPlanForm"
		input="/insertDegreeCurricularPlan.do?method=prepareInsert&amp;page=0"
		parameter="method"
		scope="request"
		type="ServidorApresentacao.Action.manager.InsertDegreeCurricularPlanDispatchAction"
        validate="true">  
       <forward name="insertDegreeCurricularPlan" path="df.page.insert-degree-curricular-plan"/>
       <forward name="readDegree" path="/readDegree.do"/>      	      
	</action>
      
      <!-- Action for deleting degree curricular plans --> 
      <action 
      	 path="/deleteDegreeCurricularPlans"
      	 name="degreeCurricularPlanForm"
      	 input="/readDegreeInput.do"
      	 scope="request"
         type="ServidorApresentacao.Action.manager.DeleteDegreeCurricularPlansAction">
        <forward name="readDegree" path="/readDegree.do"/>      	      
      </action>
      
	 <!-- Action for editing a degree curricular plan  -->
	<action
		path="/editDegreeCurricularPlan"
		name="degreeCurricularPlanForm"
		input="/editDegreeCurricularPlan.do?method=prepareEdit&amp;page=0"
		parameter="method"
		scope="request"
		type="ServidorApresentacao.Action.manager.EditDegreeCurricularPlanDispatchAction"
        validate="true">  
       <forward name="editDegreeCP" path="df.page.edit-degree-curricular-plan"/>
       <forward name="readDegree" path="/readDegree.do"/>      	      
	</action>
	
	
	
	<!--=====Actions for curricular course==== -->
	
	
	<!-- Action for reading a curricular course -->
      	
    <action path="/readCurricularCourse"
        name="curricularCourseForm"
        input="/readDegreeInput.do"
        scope="request"
        type="ServidorApresentacao.Action.manager.ReadCurricularCourseAction">
      <forward name="readDegreeCurricularPlan" path="/readDegreeCurricularPlan.do"/>  
      <forward name="viewCurricularCourse" path="df.page.read-curricularCourse"/> 	      
    </action>	
	
	<!-- Action for inserting a curricular course  -->
	<action
		path="/insertCurricularCourse"
		name="curricularCourseForm"
		input="/insertCurricularCourse.do?method=prepareInsert&amp;page=0"
		parameter="method"
		scope="request"
		type="ServidorApresentacao.Action.manager.InsertCurricularCourseDispatchAction"
        validate="true">  
       <forward name="insertCurricularCourse" path="df.page.insert-curricular-course"/>
       <forward name="readDegreeCurricularPlan" path="/readDegreeCurricularPlan.do"/>      	      
	</action>
		
	<!-- Action for deleting curricular courses --> 
    <action 
    	path="/deleteCurricularCourses"
      	name="degreeCurricularPlanForm"
      	input="/readDegreeCurricularPlan.do"
      	scope="request"
      	type="ServidorApresentacao.Action.manager.DeleteCurricularCoursesAction">
       <forward name="readDegreeCurricularPlan" path="/readDegreeCurricularPlan.do"/>      	      
    </action>	  
      
    <!-- Action for editing a curricular course  -->
	<action
		path="/editCurricularCourse"
		name="curricularCourseForm"
		input="/editCurricularCourse.do?method=prepareEdit&amp;page=0"
		parameter="method"
		scope="request"
		type="ServidorApresentacao.Action.manager.EditCurricularCourseDA"
        validate="true">  
       <forward name="editCurricularCourse" path="df.page.edit-curricular-course"/>
       <forward name="readDegreeCP" path="/readDegreeCurricularPlan.do"/>      	      
	</action>
      
      
      
    <!--=====Actions for execution degree==== -->
    
    
	<!-- Action for inserting an execution degree  -->
	<action
		path="/insertExecutionDegree"
		name="executionDegreeForm"
		input="/insertExecutionDegree.do?method=prepareInsert&amp;page=0"
		parameter="method"
		scope="request"
		type="ServidorApresentacao.Action.manager.InsertExecutionDegreeDispatchAction">  
       <forward name="insertExecutionDegree" path="df.page.insert-execution-degree"/>
       <forward name="readDegreeCurricularPlan" path="/readDegreeCurricularPlan.do"/>      	      
	</action>
    
    <!-- Action for deleting execution degree --> 
    <action 
      	path="/deleteExecutionDegrees"
      	name="degreeCurricularPlanForm"
      	input="/readDegreeCurricularPlanInput.do"
      	scope="request"
      	type="ServidorApresentacao.Action.manager.DeleteExecutionDegreesAction">
       <forward name="readDegreeCurricularPlan" path="/readDegreeCurricularPlan.do"/>      	      
    </action>	
         
    
      <!--Input actions-->  
     <action path="/readDegreesInput"
     		scope="request"
      	      type="ServidorApresentacao.Action.commons.VoidAction">
      	  <forward name="Success" path="df.page.read-degrees"/>      	      
      </action>
      
      <action path="/readDegreeInput"
     		scope="request"
      	      type="ServidorApresentacao.Action.commons.VoidAction">
      	  <forward name="Success" path="df.page.read-degree"/>      	      
      </action>
      
      <action path="/mainPageInput"
      	      type="ServidorApresentacao.Action.commons.VoidAction">
      	  <forward name="Success" path="df.page.main-page"/>      	      
      </action>
      
      <action path="/readDegreeCurricularPlanInput"
     		scope="request"
      	      type="ServidorApresentacao.Action.commons.VoidAction">
      	  <forward name="Success" path="df.page.read-degree-curricular-plan"/>      	      
      </action>

	<!-- ========== EXECUTION PERIOD MANIPULATION ========== -->
      <action path="/manageExecutionPeriods"
              type="ServidorApresentacao.Action.manager.ManageExecutionPeriodsDA"
              parameter="method"
              scope="request"
              >
          <forward name="Manage" path="df.page.manage-execution-periods"/>
      </action>

      <action input="/manageExecutionPeriods.do?method=prepare&amp;page=1"
			  name="createExecutionPeriodForm"
      		  path="/createExecutionPeriodForm"
              scope="request"
              type="ServidorApresentacao.Action.manager.ManageExecutionPeriodsDA"
              parameter="method"
              validate="true"
              >
        <exception type="ServidorApresentacao.Action.exceptions.InvalidArgumentsActionException"
         	       key="ServidorApresentacao.Action.exceptions.InvalidArgumentsActionException"
                   handler="ServidorApresentacao.config.FenixErrorExceptionHandler"
                   />
        <exception type="ServidorApresentacao.Action.exceptions.ExistingActionException"
         	       key="ServidorApresentacao.Action.exceptions.ExistingActionException"
                   handler="ServidorApresentacao.config.FenixErrorExceptionHandler"
                   />
        <forward name="Sucess" path="/manageExecutionPeriods.do?method=prepare"/>
      </action>

	<!-- ========== CACHE MANIPULATION ========== -->
      <action path="/manageCache"
		      input="/manageCache.do?method=prepare"
              type="ServidorApresentacao.Action.manager.ManageCacheDA"
              parameter="method"
              >
          <forward name="Manage" path="df.page.manage-cache"/>
          <forward name="CacheCleared" path="/manageCache.do?method=prepare"/>
      </action>

	</action-mappings>

	<!-- ========== Controller Configuration ================================ -->
    <controller processorClass="ServidorApresentacao.processor.FenixRequestProcessorWithTiles"/>

	<!-- ========== Message Resources Definitions ============================ -->
	<message-resources parameter="ServidorApresentacao.ApplicationResources" />

	<!-- ========== Plug Ins Configuration ================================= -->
			
	<plug-in className="org.apache.struts.validator.ValidatorPlugIn">
      <set-property property="pathnames" 
		value="/WEB-INF/validator-rules.xml,/WEB-INF/fenix-validator-rules.xml,/WEB-INF/conf/validation-manager.xml"/>
	</plug-in>
	    <plug-in className="org.apache.struts.tiles.TilesPlugin" >
		<set-property property="definitions-config"
					  value="/WEB-INF/tiles/layouts/tiles-layout-definitions.xml,/WEB-INF/tiles/manager/tiles-manager-definitions.xml,/WEB-INF/tiles/manager/tiles-manager-pages-definitions.xml" />
		<set-property property="moduleAware" value="true" />
		<set-property property="definitions-parser-validate" value="true" />
	</plug-in>    

</struts-config>