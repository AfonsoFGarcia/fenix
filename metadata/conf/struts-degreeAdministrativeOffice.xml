<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE struts-config PUBLIC "-//Apache Software Foundation//DTD Struts Configuration 1.1//EN" "http://jakarta.apache.org/struts/dtds/struts-config_1_1.dtd">
<struts-config>

	<!-- ========== Data Source Configuration =============================== -->
	<data-sources/>

	<!-- ========== Form Bean Definitions =================================== -->
	<form-beans type="org.apache.struts.action.ActionFormBean">

		<form-bean name="methodForm" type="org.apache.struts.validator.DynaValidatorForm" dynamic="true">
			<form-property name="method" type="java.lang.String"/>
		</form-bean>

		<form-bean name="getStudentByNumberAndDegreeTypeForm" type="org.apache.struts.validator.DynaValidatorForm" dynamic="true">
			<form-property name="method" type="java.lang.String"/>
			<form-property name="page" type="java.lang.Integer"/>
			<form-property name="degreeType" type="java.lang.String"/>
			<form-property name="studentNumber" type="java.lang.String"/>
		</form-bean>

		<form-bean name="getDegreeAndCurricularSemesterAndCurricularYearForm" type="org.apache.struts.validator.DynaValidatorForm" dynamic="true">
			<form-property name="method" type="java.lang.String"/>
			<form-property name="page" type="java.lang.Integer"/>
			<form-property name="studentOID" type="java.lang.Integer"/>
			<form-property name="infoExecutionDegree" type="java.lang.String"/>
			<form-property name="curricularYears" type="java.lang.Integer[]"/>
			<form-property name="curricularSemesters" type="java.lang.Integer[]"/>
		</form-bean>

		<form-bean name="curricularCourseEnrolmentForm" type="org.apache.struts.validator.DynaValidatorForm" dynamic="true">
			<form-property name="method" type="java.lang.String"/>
			<form-property name="studentOID" type="java.lang.Integer"/>
			<form-property name="infoDegree" type="java.lang.Integer"/>
			<form-property name="curricularCourses" type="java.lang.Integer[]"/>
			<form-property name="optionalCourseIndex" type="java.lang.Integer"/>
			<form-property name="optionalCurricularCourse" type="java.lang.Integer"/>
		</form-bean>

		<form-bean name="curricularCourseEnrolmentWithoutRulesForm" type="org.apache.struts.validator.DynaValidatorForm" dynamic="true">
			<form-property name="method" type="java.lang.String"/>
			<form-property name="curricularCourses" type="java.lang.Integer[]"/>
			<form-property name="studentOID" type="java.lang.Integer"/>
		</form-bean>
		
		<!-- ******************* LEEC Enrollment **************** -->
		<form-bean name="curricularCoursesEnrollmentForm" type="org.apache.struts.validator.DynaValidatorForm" dynamic="true">
			<form-property name="studentNumber" type="java.lang.String"/>
			<form-property name="specializationArea" type="java.lang.Integer"/>
			<form-property name="secondaryArea" type="java.lang.Integer"/>
			<form-property name="enrolledCurricularCoursesBefore" type="java.lang.Integer[]"/>
			<form-property name="enrolledCurricularCoursesAfter" type="java.lang.Integer[]"/>
			<form-property name="unenrolledCurricularCourses" type="java.lang.Integer[]"/>
			<form-property name="executionYear" type="java.lang.String"/>
			<form-property name="degreeType" type="java.lang.String"/>
			<form-property name="page" type="java.lang.Integer" initial="0"/>
		</form-bean>

		<form-bean name="curriculumForm" type="org.apache.struts.validator.DynaValidatorForm" dynamic="true">
			<form-property name="studentNumber" type="java.lang.String"/>
			<form-property name="page" type="java.lang.Integer" initial="0"/>
		</form-bean>
		
		<!-- ******************* Enrollment Without Rule**************** -->
		<form-bean name="curricularCoursesEnrollmentWithoutRuleForm" type="org.apache.struts.validator.DynaValidatorForm" dynamic="true">
			<form-property name="studentNumber" type="java.lang.String"/>			
			<form-property name="executionYear" type="java.lang.String"/>
			<form-property name="degreeType" type="java.lang.String"/>
			<form-property name="executionDegree" type="java.lang.String"/>
			<form-property name="curricularYears" type="java.lang.Integer[]"/>
			<form-property name="curricularSemesters" type="java.lang.Integer[]"/>
			<form-property name="curricularCourses" type="java.lang.Integer[]"/>
			<form-property name="unenrollments" type="java.lang.Integer[]"/>			
			<form-property name="page" type="java.lang.Integer" initial="0"/>
		</form-bean>
		
	</form-beans>

	<!-- ========== Global Exception Definitions ============================ -->
	 <global-exceptions>
		<exception type="java.lang.Exception"
			       key="java.lang.Exception"
			       path="/naoExecutado.do"
			       handler="ServidorApresentacao.config.FenixExceptionHandler"/>
		<exception type="ServidorAplicacao.NotAuthorizedException"
			       key="ServidorAplicacao.NotAuthorizedException"
			       path="/naoAutorizado.do"/>
		<exception type="ServidorAplicacao.FenixServiceException"
		  	       key="ServidorAplicacao.FenixServiceException"
		  	       path="/naoExecutado.do"
		  	       handler="ServidorApresentacao.config.FenixExceptionHandler"/>
		<exception type="ServidorAplicacao.FenixActionException"
		  	       key="ServidorAplicacao.FenixActionException"
		  	       path="/naoExecutado.do"
		  	       handler="ServidorApresentacao.config.FenixExceptionHandler"/>
		<exception type="ServidorAplicacao.Servico.ExcepcaoInexistente"
			       key="ServidorAplicacao.Servico.ExcepcaoInexistente"
			       path="/naoExistente.do"
			       handler="ServidorApresentacao.config.FenixExceptionHandler"/>
		 <exception type="ServidorApresentacao.Action.exceptions.NonExistingActionException"
			       key="ServidorApresentacao.Action.exceptions.NonExistingActionException"
			       path="/nonExistingError.jsp"
			       handler="ServidorApresentacao.config.FenixExceptionHandler"/>
    </global-exceptions>

	<!-- ========== Global Forward Definitions ============================== -->
	<global-forwards type="org.apache.struts.action.ActionForward">
		<forward name="ciaplIndex" path="/index.do" contextRelative="true"/>
		<forward name="logoff" path="/logoff.do" contextRelative="true"/>

		<forward name="index" path="/index.do" redirect="true"/>
		<forward name="globalOutOfPeriod" path="definition.out.of.period" redirect="true"/>

		<forward name="enrolment" path="/globalEnrolment.do"/>
		<forward name="equivalenceForDegreeAdministrativeOffice" path="/functionRedirect.do?method=chooseStudentAndDegreeTypeForManualEquivalence"/>
	</global-forwards>

	<!-- ========== Action Mapping Definitions ============================== -->
	<action-mappings type="org.apache.struts.action.ActionMapping">
		<!-- page fronting actions -->
		<action path="/home" forward="/switchAction.do?prefix=&amp;page=/mainPortalPage.jsp"/>
		<action path="/switchAction" type="org.apache.struts.actions.SwitchAction"/>
		<action path="/outOfPeriod" forward="definition.out.of.period"/>
		<action path="/globalEnrolment" forward="df.page.globalEnrolment"/>	
		<action path="/cantEnroll" forward="definition.cant.enroll"/>
   		

		<action path="/index" type="ServidorApresentacao.Action.commons.VoidAction">
			<forward name="Success" path="df.page.main"/>
		</action>
	
		<action	name="methodForm"
				type="ServidorApresentacao.Action.degreeAdministrativeOffice.FunctionRedirectDispatchAction"
				path="/functionRedirect"
				parameter="method"
				scope="request"
				validate="false">
			<forward name="df.page.prepareLEECEnrolmentChooseStudent" path="df.page.prepareLEECEnrolmentChooseStudent"/>
			
			<forward name="chooseStudentAndDegreeTypeForEnrolmentWithRules" path="df.page.chooseStudentAndDegreeTypeForEnrolmentWithRules"/>
			<forward name="chooseStudentAndDegreeTypeForEnrolmentWithoutRules" path="df.page.chooseStudentAndDegreeTypeForEnrolmentWithoutRules"/>
			<forward name="chooseStudentAndDegreeTypeForEnrolmentInOptionalWithoutRules" path="df.page.chooseStudentAndDegreeTypeForEnrolmentInOptionalWithoutRules"/>
			<forward name="chooseStudentAndDegreeTypeForManualEquivalence" path="df.page.chooseStudentAndDegreeTypeForManualEquivalence"/>
		</action>

		<action	name="getStudentByNumberAndDegreeTypeForm"
				type="ServidorApresentacao.Action.degreeAdministrativeOffice.PrepareStudentDataForEnrolmentWithRulesDispatchAction"
				path="/prepareStudentDataForEnrolmentWithRules"
				input="/prepareStudentDataForEnrolmentWithRules.do?method=error&amp;page=0"
				parameter="method"
				scope="request"
				validate="true">
			<forward name="startCurricularCourseEnrolmentWithRules" path="/curricularCourseEnrolmentWithRulesManager.do?method=start"/>
			<forward name="error" path="/functionRedirect.do?method=chooseStudentAndDegreeTypeForEnrolmentWithRules"/>
		</action>

		<action	name="getStudentByNumberAndDegreeTypeForm"
				type="ServidorApresentacao.Action.degreeAdministrativeOffice.PrepareStudentDataForEnrolmentWithoutRulesDispatchAction"
				path="/prepareStudentDataForEnrolmentWithoutRules"
				input="/prepareStudentDataForEnrolmentWithoutRules.do?method=error&amp;page=0"
				parameter="method"
				scope="request"
				validate="true">
			<forward name="startCurricularCourseEnrolmentWithoutRules" path="df.page.chooseDegreeAndCurricularSemesterAndCurricularYear"/>
			<forward name="error" path="/functionRedirect.do?method=chooseStudentAndDegreeTypeForEnrolmentWithoutRules"/>
		</action>

		<action	name="getStudentByNumberAndDegreeTypeForm"
				type="ServidorApresentacao.Action.degreeAdministrativeOffice.PrepareStudentDataForEnrolmentInOptionalWithoutRulesDispatchAction"
				path="/prepareStudentDataForEnrolmentInOptionalWithoutRules"
				input="/prepareStudentDataForEnrolmentInOptionalWithoutRules.do?method=error&amp;page=0"
				parameter="method"
				scope="request"
				validate="true">
			<forward name="startOptionalCurricularCourseEnrolmentWithoutRules" path="/optionalCurricularCourseEnrolmentWithoutRulesManager.do?method=start"/>
			<forward name="error" path="/functionRedirect.do?method=chooseStudentAndDegreeTypeForEnrolmentInOptionalWithoutRules"/>
		</action>

		<action	name="getStudentByNumberAndDegreeTypeForm"
				type="ServidorApresentacao.Action.degreeAdministrativeOffice.PrepareStudentDataForManualEquivalenceDispatchAction"
				path="/prepareStudentDataForManualEquivalence"
				input="/prepareStudentDataForManualEquivalence.do?method=error&amp;page=0"
				parameter="method"
				scope="request"
				validate="true">
			<forward name="startManualEquivalence" path="/equivalence/manualEquivalenceManagerForDegreeAdministrativeOffice.do?method=show" contextRelative="true"/>
			<forward name="error" path="/functionRedirect.do?method=chooseStudentAndDegreeTypeForManualEquivalence"/>
		</action>

		<action name="getDegreeAndCurricularSemesterAndCurricularYearForm"
				type="ServidorApresentacao.Action.degreeAdministrativeOffice.PrepareEnrolmentContextDispatchAction"
				path="/prepareEnrolmentContext"
				input="/prepareEnrolmentContext.do?method=error&amp;page=0"
				parameter="method"
				scope="request"
				validate="true">
			<forward name="showAvailableCurricularCourses" path="/curricularCourseEnrolmentWithoutRulesManager.do?method=start"/>
			<forward name="error" path="/prepareStudentDataForEnrolmentWithoutRules.do?method=getStudentAndDegreeTypeForEnrolmentWithoutRules&amp;page=1"/>
			<forward name="home" path="df.page.main"/>
		</action>

		<action	name="curricularCourseEnrolmentForm"
				type="ServidorApresentacao.Action.degreeAdministrativeOffice.CurricularCourseEnrolmentWithRulesManagerDispatchAction"
				path="/curricularCourseEnrolmentWithRulesManager"
				input="/outOfPeriod.do"
				parameter="method"
				scope="session"
				validate="false">
			<exception	type="ServidorApresentacao.Action.exceptions.FenixTransactionException"
						key="ServidorApresentacao.Action.exceptions.InvalidSituationActionException"
						handler="ServidorApresentacao.config.FenixTransactionExceptionHandler"/>
			<exception	type="ServidorApresentacao.Action.exceptions.OutOfCurricularEnrolmentPeriodActionException"
						key="ServidorApresentacao.Action.exceptions.OutOfCurricularEnrolmentPeriodActionException"
						handler="ServidorApresentacao.config.FenixErrorExceptionHandler"/>
			<forward name="beginTransaction" path="/curricularCourseEnrolmentWithRulesManager.do?method=start"/>
			<forward name="showAvailableCurricularCourses" path="df.page.showAvailableCurricularCoursesWithRules"/>
			<forward name="verifyEnrolment" path="df.page.verifyEnrolmentWithRules"/>
			<forward name="acceptEnrolment" path="df.page.acceptEnrolment"/>
			<forward name="concreteOptionalList" path="df.page.concreteOptionalList"/>
			<forward name="searchOptionalCurricularCourses" path="df.page.searchOptionalCurricularCourses"/>
			<forward name="cancel" path="/functionRedirect.do?method=chooseStudentAndDegreeTypeForEnrolmentWithRules"/>
			<forward name="cantEnroll" path="/cantEnroll.do"/>
		</action>

		<action	name="curricularCourseEnrolmentForm"
				type="ServidorApresentacao.Action.degreeAdministrativeOffice.OptionalCurricularCourseEnrolmentWithoutRulesManagerDispatchAction"
				path="/optionalCurricularCourseEnrolmentWithoutRulesManager"
				parameter="method"
				scope="session"
				validate="false">
			<exception	type="ServidorApresentacao.Action.exceptions.FenixTransactionException"
						key="ServidorApresentacao.Action.exceptions.InvalidSituationActionException"
						handler="ServidorApresentacao.config.FenixTransactionExceptionHandler"/>
			<forward name="beginTransaction" path="/optionalCurricularCourseEnrolmentWithoutRulesManager.do?method=start"/>
			<forward name="showAvailableOptionalCurricularCourses" path="df.page.showAvailableOptionalCurricularCoursesWithoutRules"/>
			<forward name="searchOptionalCurricularCourses" path="df.page.searchOptionalCurricularCoursesWithoutRules"/>
			<forward name="concreteOptionalList" path="df.page.concreteOptionalListWithoutRules"/>
			<forward name="verifyEnrolment" path="df.page.verifyOptionalEnrolmentWithoutRules"/>
			<forward name="acceptEnrolment" path="df.page.acceptOptionalEnrolmentWithoutRules"/>
			<forward name="cancel" path="/functionRedirect.do?method=chooseStudentAndDegreeTypeForEnrolmentInOptionalWithoutRules"/>
		</action>

		<action	name="curricularCourseEnrolmentWithoutRulesForm"
				type="ServidorApresentacao.Action.degreeAdministrativeOffice.CurricularCourseEnrolmentWithoutRulesManagerDispatchAction"
				path="/curricularCourseEnrolmentWithoutRulesManager"
				parameter="method"
				scope="session"
				validate="false">
			<exception	type="ServidorApresentacao.Action.exceptions.FenixTransactionException"
						key="ServidorApresentacao.Action.exceptions.InvalidSituationActionException"
						handler="ServidorApresentacao.config.FenixTransactionExceptionHandler"/>
			<forward name="beginTransaction" path="/curricularCourseEnrolmentWithoutRulesManager.do?method=error"/>
			<forward name="showAvailableCurricularCourses" path="df.page.showAvailableCurricularCoursesWithoutRules"/>
			<forward name="verifyEnrolment" path="df.page.verifyEnrolmentWithoutRules"/>
			<forward name="acceptEnrolment" path="df.page.acceptEnrolmentWithoutRules"/>
			<forward name="error" path="/prepareStudentDataForEnrolmentWithoutRules.do?method=getStudentAndDegreeTypeForEnrolmentWithoutRules&amp;page=0"/>
		</action>
		
		<!-- ****************** LEEC Enrollment **************************** -->
		<action	path="/curricularCoursesEnrollment"
				type="ServidorApresentacao.Action.degreeAdministrativeOffice.CurricularCoursesEnrollmentDispatchAction"
				name="curricularCoursesEnrollmentForm"				
				parameter="method"
				scope="request"
				validate="true"
				input="/curricularCoursesEnrollment.do?method=prepareEnrollmentChooseStudent">

			<exception	type="ServidorApresentacao.Action.exceptions.FenixTransactionException"
						key="ServidorApresentacao.Action.exceptions.InvalidSituationActionException"
						handler="ServidorApresentacao.config.FenixTransactionExceptionHandler"/>
				
			<forward name="beginTransaction" path="/curricularCoursesEnrollment.do?method=start"/>
			<forward name="prepareEnrollmentChooseStudent" path="df.page.prepareEnrollmentChooseStudent"/>
			<forward name="prepareEnrollmentChooseAreas" path="df.page.prepareEnrollmentChooseAreas"/>
			<forward name="prepareChooseAreas" path="/curricularCoursesEnrollment.do?method=prepareEnrollmentPrepareChooseAreas&amp;page=0"/>
			<forward name="prepareEnrollmentChooseCurricularCourses" path="df.page.prepareEnrollmentChooseCurricularCourses"/>
			<forward name="enrollmentConfirmation" path="df.page.enrollmentConfirmation"/>
		</action>
		
		<action path="/viewStudentCurriculum"
		      	type="ServidorApresentacao.Action.degreeAdministrativeOffice.ViewStudentCurriculumDispatchAction"
              	parameter="method">
			<forward name="prepareViewStudentCurriculumChooseStudent" path="df.page.prepareViewStudentCurriculumChooseStudent"/>        	
      	</action>
      	
		<action path="/viewCurriculum"
		      	type="ServidorApresentacao.Action.commons.student.CurriculumDispatchAction"
              	parameter="method"
		      	name="curriculumForm"	
				scope="request"
				validate="true"
				input="/viewStudentCurriculum.do?method=prepareViewStudentCurriculumChooseStudent&amp;page=0">
        	<forward name="ShowStudentCurricularPlans" path="df.page.showStudentCurricularPlans"/>
        	<forward name="ShowStudentCurriculum" path="df.page.showStudentCurriculum"/>
        	<forward name="NotAuthorized" path="df.page.notAuthorized"/>	
      	</action>
      	
      	
      	<!-- ****************** Enrollment Without Rules **************************** -->
		<action path="/courseEnrolmentWithoutRulesManagerDA"
			type="ServidorApresentacao.Action.degreeAdministrativeOffice.withoutRules.ExecutionCourseEnrolmentWithoutRulesManagerDispatchAction"
			input="/curricularCoursesEnrollment.do?method=prepareEnrollmentChooseStudentAndExecutionYear&amp;degreeType=1"
			name="curricularCoursesEnrollmentWithoutRuleForm"
			scope="request"
			parameter="method">
			<forward name="prepareEnrollmentChooseStudentWithoutRules" path="df.page.prepareEnrollmentChooseStudentWithoutRules"/>			
			<forward name="curricularCourseEnrollmentList" path="df.page.curricularCourseEnrollmentList"/>
			<forward name="readCurricularCourseEnrollmentList" path="/courseEnrolmentWithoutRulesManagerDA.do?method=readEnrollments" />
			<forward name="choosesForEnrollment" path="df.page.choosesForEnrollment" />
			<forward name="showCurricularCourseToEnroll" path="df.page.showCurricularCourseToEnroll" />
			<forward name="globalEnrolment" path="/globalEnrolment.do"/>
			<forward name="exit" path="/index.do"/>
		</action>		
	</action-mappings>

	<!-- ========== Controller Configuration ================================ -->
	<controller processorClass="ServidorApresentacao.processor.FenixRequestProcessorWithTiles"/>

	<!-- ========== Message Resources Definitions =========================== -->
	<message-resources parameter="ServidorApresentacao.DegreeAdministrativeOfficeResources" null="false"/>

	<!-- ========== Plug Ins Configuration ================================== -->
	<plug-in className="org.apache.struts.validator.ValidatorPlugIn">
		<set-property property="pathnames" value="/WEB-INF/validator-rules.xml,/WEB-INF/fenix-validator-rules.xml,/WEB-INF/conf/validation-degreeAdministrativeOffice.xml"/>
	</plug-in>

	<plug-in className="org.apache.struts.tiles.TilesPlugin">
		<set-property property="definitions-config" value="/WEB-INF/tiles/layouts/tiles-layout-definitions.xml,/WEB-INF/tiles/degreeAdministrativeOffice/tiles-degreeAdministrativeOffice-definitions.xml,/WEB-INF/tiles/degreeAdministrativeOffice/tiles-degreeAdministrativeOffice-pages-definitions.xml"/>
		<set-property property="moduleAware" value="true"/>
		<set-property property="definitions-parser-validate" value="true"/>
	</plug-in>

</struts-config>
